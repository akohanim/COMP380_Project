Index: Back End Files/Weights.java
===================================================================
--- Back End Files/Weights.java	(revision ae728f295575a6196c7ae4f7b2bca12d2f82d71d)
+++ Back End Files/Weights.java	(revision ae728f295575a6196c7ae4f7b2bca12d2f82d71d)
@@ -1,71 +0,0 @@
-import java.io.IOException;
-
-import org.apache.poi.EncryptedDocumentException;
-import org.apache.poi.openxml4j.exceptions.InvalidFormatException;
-
-public class Weights {
-	private ExcelFileManager userFile;
-	
-	public Weights(String userEmail) {
-		userFile = new ExcelFileManager(userEmail + ".xlsx");
-	}
-	
-	private int get_Cell_Of_This_Weight(String courseName, String weightName) throws IOException {
-		for (int i = 0; i <= userFile.get_Last_Cell_Of_Row(courseName, 1); i++) {
-			if(weightName.equalsIgnoreCase(userFile.get_Data_At(courseName, 1, i))) {
-				return i;
-			}
-		}
-		return -1; //This is when the weight does not exists in the list.
-	}
-	
-	private void shift_Columns(String courseName, int rowIndex, int cellIndex) throws IOException, EncryptedDocumentException, InvalidFormatException {
-		int lastCellInThisRow = userFile.get_Last_Cell_Of_Row(courseName, rowIndex);
-		for (int i = cellIndex; i < lastCellInThisRow - 1; i++) {
-			String nextColumnData = userFile.get_Data_At(courseName, rowIndex, i + 1);
-			userFile.update_Cell(nextColumnData, courseName, rowIndex, i);
-			if (i + 1 == lastCellInThisRow - 1) {
-				userFile.delete_This_Cell(courseName, rowIndex, lastCellInThisRow - 1);
-			}
- 		}
-	}
-	
-	public boolean does_this_Weight_Exists(String courseName, String weightName) throws IOException {
-		for (int i = 0; i < userFile.get_Last_Cell_Of_Row(courseName, 1); i++) {
-			if (weightName.equalsIgnoreCase(userFile.get_Data_At(courseName, 1, i))) {
-				return true;
-			}
-		}
-		return false;
-	}
-	
-	public void add_Weight(String courseName, String weightName, String weightPercentage) throws IOException {
-		int lastCellInWeights = userFile.get_Last_Cell_Of_Row(courseName, 1);
-		userFile.update_Cell(weightName, courseName, 1, lastCellInWeights);
-		userFile.update_Cell(weightPercentage, courseName, 2, lastCellInWeights);
-	}
-	
-	public void remove_Weight(String courseName, String weightName) throws IOException, EncryptedDocumentException, InvalidFormatException {
-		int weightCell = get_Cell_Of_This_Weight(courseName, weightName);
-		shift_Columns(courseName, 1, weightCell);//removes the name of the weight.
-		shift_Columns(courseName, 2, weightCell);//removes the percentage of the weight.
-	}
-	
-	public void edit_Weight(String courseName, String weightName, String newWeightPercentage) throws IOException {
-		int weightCell = get_Cell_Of_This_Weight(courseName, weightName);
-		userFile.update_Cell(newWeightPercentage, courseName, 2, weightCell);//user should only be able to update the percentage, not the weight.
-	}
-	
-	public int get_Total_Weight_Percentage(String courseName) throws IOException {
-		int TotalPercentage = 0;
-		for(int i = 0; i < userFile.get_Last_Cell_Of_Row(courseName, 2); i++) {
-			TotalPercentage = TotalPercentage + Integer.parseInt(userFile.get_Data_At(courseName, 2, i));
-		}
-		return TotalPercentage;
-	}
-	
-	public String load_Weight_Percentage(String courseName, String weightName) throws IOException {
-		int weightCell = get_Cell_Of_This_Weight(courseName, weightName);
-		return userFile.get_Data_At(courseName, 2, weightCell);
-	}
-}
Index: Back End Files/CreateCourse.java
===================================================================
--- Back End Files/CreateCourse.java	(revision ae728f295575a6196c7ae4f7b2bca12d2f82d71d)
+++ Back End Files/CreateCourse.java	(revision ae728f295575a6196c7ae4f7b2bca12d2f82d71d)
@@ -1,87 +0,0 @@
-import java.io.IOException;
-
-public class CreateCourse {
-	
-	private ExcelFileManager userFile;
-	private boolean CourseAlreadyExists;
-
-	public CreateCourse(String userEmail, String courseName, String sectionNumber) throws IOException {
-		userFile = new ExcelFileManager(userEmail + ".xlsx");
-		
-		if (userFile.does_This_Sheet_Exists(courseName)) {
-			CourseAlreadyExists = true;
-		} else {			
-			userFile.create_A_New_Sheet(courseName);
-			
-			userFile.update_Cell("Secttion Number:", courseName, 0, 0);
-			userFile.update_Cell(sectionNumber, courseName, 0, 1);
-			userFile.update_Cell("Course Color: ", courseName, 0, 2);
-			userFile.update_Cell(Integer.toString(generate_Random_Integer_For_RGB()), courseName, 0, 3);
-			userFile.update_Cell(Integer.toString(generate_Random_Integer_For_RGB()), courseName, 0, 4);
-			userFile.update_Cell(Integer.toString(generate_Random_Integer_For_RGB()), courseName, 0, 5);
-			
-			userFile.create_A_New_Row(courseName);//This row(1) is for the names of the weights (Quizzes, Exams, Homework, etc.)
-			userFile.create_A_New_Row(courseName);//This row(2) is for the percentage number of the weights. For example, when it says, quizzes at the top row, below which will be this row, it will say the total percentage of that type. 
-			set_Default_Weights_Their_Names(courseName);
-			
-			userFile.create_A_New_Row(courseName);//This row(3) is for the letters of the grade ranges.
-			userFile.create_A_New_Row(courseName);//This row(4) is to save the grade ranges for the graph.
-			set_Default_Grade_Letters_And_Their_Ranges(courseName);
-			
-			userFile.create_A_New_Row(courseName);//This row(5) is for the assignments type, it will say it on the top of each assignment if this is quiz type or exam type or homework type, etc.
-			
-			userFile.create_A_New_Row(courseName);//This row(6) is for the assignment names.
-			
-			userFile.update_Cell("Student DOB", courseName, 6, 0);
-			userFile.update_Cell("First Name", courseName, 6, 1);
-			userFile.update_Cell("Last Name", courseName, 6, 2);
-			userFile.update_Cell("Student ID", courseName, 6, 3);
-			userFile.update_Cell("Overall Grade", courseName, 6, 4);
-			
-			userFile.create_A_New_Row(courseName);//This row(7) is for the total number of each assignment.
-		}
-	}
-	
-	private int generate_Random_Integer_For_RGB() {
-		return (int) ((Math.random() * ((255 - 0) + 1)) + 0);
-	}
-	
-	private void set_Default_Weights_Their_Names(String courseName) {
-		try {
-			userFile.update_Cell("Quiz", courseName, 1, 0);
-			userFile.update_Cell("Homework", courseName, 1, 1);
-			userFile.update_Cell("Exam", courseName, 1, 2);
-			userFile.update_Cell("Projects", courseName, 1, 3);
-			
-			userFile.update_Cell("25", courseName, 2, 0);
-			userFile.update_Cell("25", courseName, 2, 1);
-			userFile.update_Cell("25", courseName, 2, 2);
-			userFile.update_Cell("25", courseName, 2, 3);
-		} catch (IOException e) {
-			e.printStackTrace();
-		}
-	}
-	
-	private void set_Default_Grade_Letters_And_Their_Ranges(String courseName) {
-		try {
-			userFile.update_Cell("A", courseName, 3, 0);
-			userFile.update_Cell("B", courseName, 3, 1);
-			userFile.update_Cell("C", courseName, 3, 2);
-			userFile.update_Cell("D", courseName, 3, 3);
-			userFile.update_Cell("F", courseName, 3, 4);
-			
-			userFile.update_Cell("90", courseName, 4, 0);
-			userFile.update_Cell("80", courseName, 4, 1);
-			userFile.update_Cell("70", courseName, 4, 2);
-			userFile.update_Cell("60", courseName, 4, 3);
-			userFile.update_Cell("0", courseName, 4, 4);
-		} catch (IOException e) {
-			e.printStackTrace();
-		}
-	}
-	
-	public boolean does_The_Course_Already_Exists() {
-		return CourseAlreadyExists;
-	}
-	
-}
Index: SmartGrader/src/sample/DefaultClassOverviewPane.fxml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n\r\n<?import javafx.geometry.*?>\r\n<?import javafx.scene.control.*?>\r\n<?import javafx.scene.layout.*?>\r\n\r\n<VBox fx:id=\"mainBox\" stylesheets=\"@../TealTeam.css\" BorderPane.alignment=\"CENTER\" xmlns=\"http://javafx.com/javafx/10.0.2-internal\" xmlns:fx=\"http://javafx.com/fxml/1\" fx:controller=\"sample.DefaultClassOverviewPane\">\r\n   <ScrollPane fx:id=\"scrollPane\" VBox.vgrow=\"ALWAYS\">\r\n      <content>\r\n         <GridPane fx:id=\"theGrid\" hgap=\"1.0\" vgap=\"1.0\">\r\n           <columnConstraints>\r\n             <ColumnConstraints hgrow=\"SOMETIMES\" minWidth=\"10.0\" prefWidth=\"100.0\" />\r\n             <ColumnConstraints hgrow=\"SOMETIMES\" minWidth=\"10.0\" prefWidth=\"100.0\" />\r\n           </columnConstraints>\r\n           <rowConstraints>\r\n             <RowConstraints minHeight=\"10.0\" prefHeight=\"30.0\" vgrow=\"SOMETIMES\" />\r\n             <RowConstraints minHeight=\"10.0\" prefHeight=\"30.0\" vgrow=\"SOMETIMES\" />\r\n             <RowConstraints minHeight=\"10.0\" prefHeight=\"30.0\" vgrow=\"SOMETIMES\" />\r\n           </rowConstraints>\r\n            <padding>\r\n               <Insets bottom=\"1.0\" left=\"1.0\" right=\"1.0\" top=\"1.0\" />\r\n            </padding>\r\n         </GridPane>\r\n      </content>\r\n   </ScrollPane>\r\n    <HBox fx:id=\"buttonBox\" alignment=\"CENTER\" spacing=\"20.0\">\r\n        <Button fx:id=\"AddStudentButton\" onAction=\"#clickedAddStudent\" text=\"Add Student\" />\r\n        <Button fx:id=\"AddAssignmentButton\" onAction=\"#clickedAddAssignment\" text=\"Add Assignment\" />\r\n        <padding>\r\n            <Insets bottom=\"10.0\" left=\"10.0\" right=\"10.0\" top=\"10.0\" />\r\n        </padding>\r\n    </HBox>\r\n</VBox>\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- SmartGrader/src/sample/DefaultClassOverviewPane.fxml	(revision ae728f295575a6196c7ae4f7b2bca12d2f82d71d)
+++ SmartGrader/src/sample/DefaultClassOverviewPane.fxml	(date 1588028386689)
@@ -2,6 +2,7 @@
 
 <?import javafx.geometry.*?>
 <?import javafx.scene.control.*?>
+<?import javafx.scene.image.*?>
 <?import javafx.scene.layout.*?>
 
 <VBox fx:id="mainBox" stylesheets="@../TealTeam.css" BorderPane.alignment="CENTER" xmlns="http://javafx.com/javafx/10.0.2-internal" xmlns:fx="http://javafx.com/fxml/1" fx:controller="sample.DefaultClassOverviewPane">
@@ -26,6 +27,19 @@
     <HBox fx:id="buttonBox" alignment="CENTER" spacing="20.0">
         <Button fx:id="AddStudentButton" onAction="#clickedAddStudent" text="Add Student" />
         <Button fx:id="AddAssignmentButton" onAction="#clickedAddAssignment" text="Add Assignment" />
+      <Region HBox.hgrow="ALWAYS" />
+      <Button mnemonicParsing="false" onAction="#clickedRefresh">
+         <graphic>
+            <ImageView fitHeight="40.0" fitWidth="40.0" pickOnBounds="true" preserveRatio="true">
+               <image>
+                  <Image url="@../thumbnails/reloadIcon.png" />
+               </image>
+            </ImageView>
+         </graphic>
+         <padding>
+            <Insets bottom="1.0" left="1.0" right="1.0" top="1.0" />
+         </padding>
+      </Button>
         <padding>
             <Insets bottom="10.0" left="10.0" right="10.0" top="10.0" />
         </padding>
Index: SmartGrader/src/sample/HomePage.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package sample;\r\n\r\nimport javafx.event.ActionEvent;\r\nimport javafx.fxml.FXML;\r\nimport javafx.fxml.FXMLLoader;\r\nimport javafx.scene.Node;\r\nimport javafx.scene.Parent;\r\nimport javafx.scene.Scene;\r\nimport javafx.scene.control.Alert;\r\nimport javafx.scene.control.Button;\r\nimport javafx.scene.control.ButtonType;\r\nimport javafx.scene.control.DialogPane;\r\nimport javafx.scene.layout.TilePane;\r\nimport javafx.stage.Modality;\r\nimport javafx.stage.Stage;\r\n\r\nimport java.io.IOException;\r\n\r\n\r\npublic class HomePage {\r\n\r\n    @FXML\r\n    private TilePane tilePane;\r\n    @FXML\r\n    private Button AddCourseButton;\r\n    @FXML\r\n    private Button LogOutButton;\r\n    @FXML\r\n    private Button AccountButton;\r\n\r\n    private String username;\r\n\r\n    //initialize method lets you do setup for the window that is opening\r\n    //all methods and listeners can be written in the initialize method\r\n    @FXML\r\n    public void initialize() throws IOException {\r\n        //set Window to full screen\r\n        /*\r\n        Screen screen = Screen.getPrimary();\r\n        Rectangle2D bounds = screen.getVisualBounds();\r\n        stage.setX(bounds.getMinX());\r\n        stage.setY(bounds.getMinY());\r\n        stage.setWidth(bounds.getWidth());\r\n        stage.setHeight(bounds.getHeight());*/\r\n    }\r\n\r\n    public void start(Stage window) throws Exception {\r\n        Parent root = FXMLLoader.load(getClass().getResource(\"Homepage.fxml\"));\r\n        Scene scene = new Scene(root);\r\n        window.setScene(scene);\r\n        window.setMaximized(true);\r\n        window.show();\r\n    }\r\n\r\n    public void clickAdd(ActionEvent event) throws IOException {\r\n\r\n        //open add course popup window to fill in data\r\n        FXMLLoader AddCourseLoader = new FXMLLoader();\r\n        AddCourseLoader.setLocation(getClass().getResource(\"AddCoursePage.fxml\"));\r\n        Parent root = AddCourseLoader.load();\r\n        AddCoursePage addCourseController = AddCourseLoader.getController();\r\n        Scene scene = new Scene(root);\r\n        Stage stage = new Stage();\r\n        stage.initModality(Modality.APPLICATION_MODAL);\r\n        stage.setScene(scene);\r\n        stage.showAndWait();\r\n\r\n        //create tile and add to course list\r\n        if (addCourseController.getCourseName() != \"\" && addCourseController.getSectionNumber() != \"\") {\r\n            //createCourse\r\n            CreateCourse createCourse = new CreateCourse(username, addCourseController.getCourseName(), addCourseController.getSectionNumber());\r\n\r\n            if (createCourse.does_The_Course_Already_Exists()) {\r\n                Alert alert = new Alert(Alert.AlertType.ERROR, \"Course already exists.\", ButtonType.OK);\r\n                DialogPane dialogPane = alert.getDialogPane();\r\n                dialogPane.getStylesheets().add(getClass().getResource(\"/TealTeam.css\").toExternalForm());\r\n                alert.showAndWait();\r\n            } else {\r\n                fillClassTiles(username);\r\n            }\r\n        }\r\n    }\r\n\r\n    public void fillClassTiles(String user) throws IOException {\r\n        //clear tilePane\r\n        tilePane.getChildren().clear();\r\n\r\n        //loadCourses\r\n        LoadCourses loadCourses = new LoadCourses(user);\r\n\r\n        //fill tiles\r\n        for (int i = 0; i < loadCourses.get_Total_Number_Of_Courses(); i++) {\r\n            //Create Tile\r\n            FXMLLoader tileLoader = new FXMLLoader();\r\n            tileLoader.setLocation(getClass().getResource(\"CourseTile.fxml\"));\r\n            Parent tile = tileLoader.load();\r\n            //assign tileController\r\n            CourseTile courseTileController = tileLoader.getController();\r\n            //assign Name\r\n            courseTileController.setClassNameLabel(loadCourses.get_Course_Name_For_Index(i));\r\n            courseTileController.setClassNumberLabel(loadCourses.get_Course_Section_Number_For_Index(i));\r\n            courseTileController.setUserName(getUsername());\r\n            if (loadCourses.get_Course_Icon(loadCourses.get_Course_Name_For_Index(i)).equals(\"\")) {\r\n                //assign color\r\n                courseTileController.setTileColor(loadCourses.get_Course_Color(loadCourses.get_Course_Name_For_Index((i))));\r\n            } else {\r\n                //assign Icon\r\n                //only works for icons in the thumbnails directory!!!!\r\n                courseTileController.setTileIcon(loadCourses.get_Course_Icon(loadCourses.get_Course_Name_For_Index(i)));\r\n            }\r\n\r\n\r\n            addCourseTile(tile);\r\n            moveAddButtonToEnd();\r\n\r\n            courseTileController.settingsButton.setOnAction(e -> {\r\n                try {\r\n                    FXMLLoader editTileLoader = new FXMLLoader();\r\n                    editTileLoader.setLocation(getClass().getResource(\"EditTilePage.fxml\"));\r\n                    Parent root = editTileLoader.load();\r\n                    EditTilePage editTilePageController = editTileLoader.getController();\r\n                    editTilePageController.setUserName(username);\r\n                    editTilePageController.setCourseName(courseTileController.getClassName());\r\n                    System.out.println(\"Class Name:\" + courseTileController.getClassName());\r\n                    System.out.println(\"User Name:\" + editTilePageController.getUserName());\r\n                    Scene scene = new Scene(root);\r\n                    Stage stage = new Stage();\r\n                    stage.initModality(Modality.APPLICATION_MODAL);\r\n                    stage.setScene(scene);\r\n                    stage.showAndWait();\r\n\r\n                    fillClassTiles(username);\r\n\r\n                } catch (IOException ex) {\r\n                    ex.printStackTrace();\r\n                }\r\n\r\n\r\n            });\r\n        }\r\n    }\r\n\r\n    public void addCourseTile(Node courseTile) {\r\n        tilePane.getChildren().add(courseTile);\r\n    }\r\n\r\n    public String getUsername() {\r\n        return username;\r\n    }\r\n\r\n    public void setUsername(String username) {\r\n        this.username = username;\r\n    }\r\n\r\n    public void moveAddButtonToEnd() {\r\n        //puts the button at the end\r\n        tilePane.getChildren().remove(AddCourseButton);\r\n        tilePane.getChildren().add(AddCourseButton);\r\n    }\r\n\r\n    public void clickedLogout(ActionEvent event) throws IOException {\r\n        //open Sign in page\r\n        Parent root = FXMLLoader.load(getClass().getResource(\"SignIn.fxml\"));\r\n        Scene scene = new Scene(root);\r\n        Stage stage = new Stage();\r\n        stage.setTitle(\"SmartGrader\");\r\n        stage.setScene(scene);\r\n        stage.show();\r\n\r\n        Stage oldStage = (Stage) ((Node) event.getSource()).getScene().getWindow();\r\n        oldStage.close();\r\n    }\r\n\r\n    public void clickedAccount(ActionEvent event) throws IOException {\r\n        //open Account Settings popup window to fill in data\r\n        FXMLLoader AddCourseLoader = new FXMLLoader();\r\n        AddCourseLoader.setLocation(getClass().getResource(\"AccountSettingsPane.fxml\"));\r\n        Parent root = AddCourseLoader.load();\r\n        AccountSettingsPane accountSettingsPaneController = AddCourseLoader.getController();\r\n        Scene scene = new Scene(root);\r\n        Stage stage = new Stage();\r\n        stage.initModality(Modality.APPLICATION_MODAL);\r\n        stage.setScene(scene);\r\n        stage.showAndWait();\r\n\r\n\r\n        if (!accountSettingsPaneController.getNewEmail().equals(\"\") && !accountSettingsPaneController.getNewFirstName().equals(\"\")\r\n                && !accountSettingsPaneController.getNewLastName().equals(\"\") && !accountSettingsPaneController.getNewPassword().equals(\"\")) {\r\n            //save new account settings\r\n            SaveAccountSettings saveAccountSettings = new SaveAccountSettings(getUsername(), accountSettingsPaneController.getNewFirstName(),\r\n                    accountSettingsPaneController.getNewLastName(), accountSettingsPaneController.getNewEmail(), accountSettingsPaneController.getNewPassword());\r\n            //set new username as the username for this homepage\r\n            setUsername(accountSettingsPaneController.getNewEmail());\r\n\r\n            //let user know settings were changed\r\n            Alert alert = new Alert(Alert.AlertType.INFORMATION, \"Account settings have been changed.\", ButtonType.OK);\r\n            DialogPane dialogPane = alert.getDialogPane();\r\n            dialogPane.getStylesheets().add(getClass().getResource(\"/TealTeam.css\").toExternalForm());\r\n            alert.showAndWait();\r\n        }\r\n    }\r\n\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- SmartGrader/src/sample/HomePage.java	(revision ae728f295575a6196c7ae4f7b2bca12d2f82d71d)
+++ SmartGrader/src/sample/HomePage.java	(date 1588132068002)
@@ -34,14 +34,6 @@
     //all methods and listeners can be written in the initialize method
     @FXML
     public void initialize() throws IOException {
-        //set Window to full screen
-        /*
-        Screen screen = Screen.getPrimary();
-        Rectangle2D bounds = screen.getVisualBounds();
-        stage.setX(bounds.getMinX());
-        stage.setY(bounds.getMinY());
-        stage.setWidth(bounds.getWidth());
-        stage.setHeight(bounds.getHeight());*/
     }
 
     public void start(Stage window) throws Exception {
@@ -130,6 +122,7 @@
                     stage.showAndWait();
 
                     fillClassTiles(username);
+                    moveAddButtonToEnd();
 
                 } catch (IOException ex) {
                     ex.printStackTrace();
Index: SmartGrader/src/sample/ChooseGraphPage.fxml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n\r\n<?import javafx.geometry.*?>\r\n<?import javafx.scene.control.*?>\r\n<?import javafx.scene.image.*?>\r\n<?import javafx.scene.layout.*?>\r\n\r\n<VBox alignment=\"TOP_CENTER\" spacing=\"30.0\" stylesheets=\"@../TealTeam.css\" xmlns=\"http://javafx.com/javafx/10.0.2-internal\" xmlns:fx=\"http://javafx.com/fxml/1\" fx:controller=\"sample.ChooseGraphPage\">\r\n   <children>\r\n      <Label text=\"Data Visualization\" />\r\n      <HBox alignment=\"CENTER\" prefHeight=\"100.0\" prefWidth=\"200.0\" spacing=\"100.0\">\r\n         <children>\r\n            <Button fx:id=\"pieChartButton\" mnemonicParsing=\"false\" onAction=\"#clickedPieChartButton\">\r\n               <graphic>\r\n                  <ImageView fitHeight=\"150.0\" fitWidth=\"200.0\" pickOnBounds=\"true\" preserveRatio=\"true\">\r\n                     <image>\r\n                        <Image url=\"@../thumbnails/PieChartIcon.png\" />\r\n                     </image></ImageView>\r\n               </graphic></Button>\r\n            <Button fx:id=\"barChartButton\" mnemonicParsing=\"false\" onAction=\"#clickedBarChartButton\">\r\n               <graphic>\r\n                  <ImageView fitHeight=\"150.0\" fitWidth=\"200.0\" pickOnBounds=\"true\" preserveRatio=\"true\">\r\n                     <image>\r\n                        <Image url=\"@../thumbnails/BarChartIcon.png\" />\r\n                     </image>\r\n                  </ImageView>\r\n               </graphic></Button>\r\n         </children>\r\n      </HBox>\r\n      <HBox alignment=\"CENTER\" prefHeight=\"100.0\" prefWidth=\"200.0\" spacing=\"30.0\">\r\n         <children>\r\n            <Label text=\"Grade Breakdown of:\" />\r\n            <RadioButton fx:id=\"totalGradeRadioButton\" mnemonicParsing=\"false\" selected=\"true\" text=\"Total Grade\">\r\n               <toggleGroup>\r\n                  <ToggleGroup fx:id=\"GradeSelectionToggle\" />\r\n               </toggleGroup></RadioButton>\r\n            <RadioButton fx:id=\"QuizRadioButton\" mnemonicParsing=\"false\" text=\"Quiz\" toggleGroup=\"$GradeSelectionToggle\" />\r\n            <RadioButton fx:id=\"homeworkRadioButton\" mnemonicParsing=\"false\" text=\"Homework\" toggleGroup=\"$GradeSelectionToggle\" />\r\n            <RadioButton fx:id=\"ProjectsRadioButton\" mnemonicParsing=\"false\" text=\"Projects\" toggleGroup=\"$GradeSelectionToggle\" />\r\n            <RadioButton fx:id=\"ExamRadioButton\" mnemonicParsing=\"false\" text=\"Exam\" toggleGroup=\"$GradeSelectionToggle\" />\r\n         </children>\r\n      </HBox>\r\n      <HBox alignment=\"CENTER\" spacing=\"10.0\">\r\n         <children>\r\n            <Label text=\"Grade Range:\" />\r\n            <Label text=\"F: 0 to\" />\r\n            <TextField fx:id=\"fGradeMinTextfield\" prefWidth=\"75.0\" text=\"59\" />\r\n            <Label layoutX=\"10.0\" layoutY=\"10.0\" text=\"to D:\" />\r\n            <TextField fx:id=\"DGradeMinTextfield\" layoutX=\"38.0\" layoutY=\"10.0\" prefWidth=\"75.0\" text=\"60\" />\r\n            <Label layoutX=\"10.0\" layoutY=\"10.0\" text=\"to C:\" />\r\n            <TextField fx:id=\"CGradeMinTextfield\" layoutX=\"38.0\" layoutY=\"10.0\" prefWidth=\"75.0\" text=\"70\" />\r\n            <Label layoutX=\"187.0\" layoutY=\"10.0\" text=\"to B:\" />\r\n            <TextField fx:id=\"BfGradeMinTextfield\" layoutX=\"215.0\" layoutY=\"10.0\" prefWidth=\"75.0\" text=\"80\" />\r\n            <Label layoutX=\"10.0\" layoutY=\"10.0\" text=\"to A: \" />\r\n            <TextField fx:id=\"AGradeMinTextfield\" layoutX=\"20.0\" layoutY=\"10.0\" prefWidth=\"75.0\" text=\"90\" />\r\n            <Label text=\"to 100\" />\r\n         </children></HBox>\r\n      <HBox alignment=\"CENTER_RIGHT\" prefHeight=\"100.0\" prefWidth=\"200.0\">\r\n         <children>\r\n            <Button fx:id=\"cancelButton\" mnemonicParsing=\"false\" onAction=\"#clickedCancelButton\" text=\"Cancel\" />\r\n         </children>\r\n      </HBox>\r\n   </children>\r\n   <padding>\r\n      <Insets bottom=\"30.0\" left=\"30.0\" right=\"30.0\" top=\"30.0\" />\r\n   </padding>\r\n</VBox>\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- SmartGrader/src/sample/ChooseGraphPage.fxml	(revision ae728f295575a6196c7ae4f7b2bca12d2f82d71d)
+++ SmartGrader/src/sample/ChooseGraphPage.fxml	(date 1588125650097)
@@ -27,39 +27,34 @@
                </graphic></Button>
          </children>
       </HBox>
-      <HBox alignment="CENTER" prefHeight="100.0" prefWidth="200.0" spacing="30.0">
+      <HBox alignment="CENTER" prefHeight="100.0" prefWidth="767.0" spacing="30.0">
          <children>
-            <Label text="Grade Breakdown of:" />
+            <Label prefHeight="26.0" prefWidth="180.0" text="Grade Breakdown of:" />
             <RadioButton fx:id="totalGradeRadioButton" mnemonicParsing="false" selected="true" text="Total Grade">
                <toggleGroup>
                   <ToggleGroup fx:id="GradeSelectionToggle" />
                </toggleGroup></RadioButton>
-            <RadioButton fx:id="QuizRadioButton" mnemonicParsing="false" text="Quiz" toggleGroup="$GradeSelectionToggle" />
+            <RadioButton fx:id="quizRadioButton" mnemonicParsing="false" text="Quiz" toggleGroup="$GradeSelectionToggle" />
             <RadioButton fx:id="homeworkRadioButton" mnemonicParsing="false" text="Homework" toggleGroup="$GradeSelectionToggle" />
-            <RadioButton fx:id="ProjectsRadioButton" mnemonicParsing="false" text="Projects" toggleGroup="$GradeSelectionToggle" />
-            <RadioButton fx:id="ExamRadioButton" mnemonicParsing="false" text="Exam" toggleGroup="$GradeSelectionToggle" />
+            <RadioButton fx:id="projectsRadioButton" mnemonicParsing="false" text="Projects" toggleGroup="$GradeSelectionToggle" />
+            <RadioButton fx:id="examRadioButton" mnemonicParsing="false" text="Exam" toggleGroup="$GradeSelectionToggle" />
          </children>
       </HBox>
       <HBox alignment="CENTER" spacing="10.0">
          <children>
             <Label text="Grade Range:" />
-            <Label text="F: 0 to" />
-            <TextField fx:id="fGradeMinTextfield" prefWidth="75.0" text="59" />
-            <Label layoutX="10.0" layoutY="10.0" text="to D:" />
-            <TextField fx:id="DGradeMinTextfield" layoutX="38.0" layoutY="10.0" prefWidth="75.0" text="60" />
+            <Label />
+            <Label layoutX="10.0" layoutY="10.0" text="D:" />
+            <TextField fx:id="DGradeMinTextfield" layoutX="38.0" layoutY="10.0" onAction="#enteredD" prefWidth="75.0" text="60" />
             <Label layoutX="10.0" layoutY="10.0" text="to C:" />
-            <TextField fx:id="CGradeMinTextfield" layoutX="38.0" layoutY="10.0" prefWidth="75.0" text="70" />
+            <TextField fx:id="CGradeMinTextfield" layoutX="38.0" layoutY="10.0" onAction="#enteredC" prefWidth="75.0" text="70" />
             <Label layoutX="187.0" layoutY="10.0" text="to B:" />
-            <TextField fx:id="BfGradeMinTextfield" layoutX="215.0" layoutY="10.0" prefWidth="75.0" text="80" />
+            <TextField fx:id="BfGradeMinTextfield" layoutX="215.0" layoutY="10.0" onAction="#enteredB" prefWidth="75.0" text="80" />
             <Label layoutX="10.0" layoutY="10.0" text="to A: " />
-            <TextField fx:id="AGradeMinTextfield" layoutX="20.0" layoutY="10.0" prefWidth="75.0" text="90" />
+            <TextField fx:id="AGradeMinTextfield" layoutX="20.0" layoutY="10.0" onAction="#enteredA" prefWidth="75.0" text="90" />
             <Label text="to 100" />
          </children></HBox>
-      <HBox alignment="CENTER_RIGHT" prefHeight="100.0" prefWidth="200.0">
-         <children>
-            <Button fx:id="cancelButton" mnemonicParsing="false" onAction="#clickedCancelButton" text="Cancel" />
-         </children>
-      </HBox>
+      <Button fx:id="cancelButton" mnemonicParsing="false" onAction="#clickedCancelButton" text="Cancel" />
    </children>
    <padding>
       <Insets bottom="30.0" left="30.0" right="30.0" top="30.0" />
Index: SmartGrader/src/sample/SetCurvePage.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package sample;\r\n\r\nimport javafx.event.ActionEvent;\r\nimport javafx.fxml.FXML;\r\nimport javafx.scene.Node;\r\nimport javafx.scene.control.Alert;\r\nimport javafx.scene.control.ButtonType;\r\nimport javafx.scene.control.DialogPane;\r\nimport javafx.scene.control.TextField;\r\nimport javafx.stage.Stage;\r\n\r\npublic class SetCurvePage {\r\n\r\n    @FXML\r\n    private TextField SetCurveTextField;\r\n\r\n    private CurvedResults curvedResults;\r\n\r\n    private String userEmail, classname;\r\n\r\n    private boolean wantsCurve;\r\n\r\n    @FXML\r\n    public void initialize() {\r\n        setCurve(false);\r\n    }\r\n\r\n\r\n    private boolean isValidInput() {\r\n        //make sure textfield is not empty.\r\n        if (SetCurveTextField.getText() == null || SetCurveTextField.getText().trim().isEmpty()) {\r\n            return false;\r\n        } else {\r\n            try {\r\n                //check if text field has an integer less than or equal to 100\r\n                int i = Integer.parseInt(SetCurveTextField.getText());\r\n                if (i > 100 || i < 0) {\r\n                    SetCurveTextField.setText(\"0\");\r\n                    return false;\r\n                }\r\n            } catch (NumberFormatException nfe) {\r\n                return false;\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n\r\n    public void clickedSubtract(ActionEvent event) {\r\n        if (isValidInput()) {\r\n            int i = Integer.parseInt(SetCurveTextField.getText());\r\n            if (i >= 5) {\r\n                SetCurveTextField.setText(Integer.toString(i - 5));\r\n            } else {\r\n                Alert alert = new Alert(Alert.AlertType.ERROR, \"Value too low.\", ButtonType.OK);\r\n                DialogPane dialogPane = alert.getDialogPane();\r\n                dialogPane.getStylesheets().add(getClass().getResource(\"/TealTeam.css\").toExternalForm());\r\n                alert.showAndWait();\r\n            }\r\n        } else {\r\n            Alert alert = new Alert(Alert.AlertType.ERROR, \"Invalid Input\", ButtonType.OK);\r\n            DialogPane dialogPane = alert.getDialogPane();\r\n            dialogPane.getStylesheets().add(getClass().getResource(\"/TealTeam.css\").toExternalForm());\r\n            alert.showAndWait();\r\n        }\r\n    }\r\n\r\n    public void clickedAdd(ActionEvent event) {\r\n        if (isValidInput()) {\r\n            int i = Integer.parseInt(SetCurveTextField.getText());\r\n            if (i <= 95) {\r\n                SetCurveTextField.setText(Integer.toString(i + 5));\r\n            } else {\r\n\r\n                Alert alert = new Alert(Alert.AlertType.ERROR, \"Value too high.\", ButtonType.OK);\r\n                DialogPane dialogPane = alert.getDialogPane();\r\n                dialogPane.getStylesheets().add(getClass().getResource(\"/TealTeam.css\").toExternalForm());\r\n                alert.showAndWait();\r\n\r\n            }\r\n        } else {\r\n            Alert alert = new Alert(Alert.AlertType.ERROR, \"Invalid Input\", ButtonType.OK);\r\n            DialogPane dialogPane = alert.getDialogPane();\r\n            dialogPane.getStylesheets().add(getClass().getResource(\"/TealTeam.css\").toExternalForm());\r\n            alert.showAndWait();\r\n        }\r\n    }\r\n\r\n    public void clickedCancel(ActionEvent event) {\r\n        //close popup window\r\n        Stage stageTheEventSourceNodeBelongs = (Stage) ((Node) event.getSource()).getScene().getWindow();\r\n        stageTheEventSourceNodeBelongs.close();\r\n    }\r\n\r\n    public void clickedResults(ActionEvent event) {\r\n        if (isValidInput()) {\r\n            curvedResults = new CurvedResults(getUserEmail(), Double.parseDouble(SetCurveTextField.getText()));\r\n            setCurve(true);\r\n\r\n            // close window\r\n            clickedCancel(event);\r\n        } else {\r\n            Alert alert = new Alert(Alert.AlertType.ERROR, \"Invalid Input\", ButtonType.OK);\r\n            DialogPane dialogPane = alert.getDialogPane();\r\n            dialogPane.getStylesheets().add(getClass().getResource(\"/TealTeam.css\").toExternalForm());\r\n            alert.showAndWait();\r\n\r\n        }\r\n\r\n\r\n    }\r\n\r\n    public String getUserEmail() {\r\n        return userEmail;\r\n    }\r\n\r\n    public void setUserEmail(String userEmail) {\r\n        this.userEmail = userEmail;\r\n    }\r\n\r\n    public String getClassname() {\r\n        return classname;\r\n    }\r\n\r\n    public void setClassname(String classname) {\r\n        this.classname = classname;\r\n    }\r\n\r\n    public CurvedResults getCurvedResults() {\r\n        return curvedResults;\r\n    }\r\n\r\n    public void setCurvedResults(CurvedResults curvedResults) {\r\n        this.curvedResults = curvedResults;\r\n    }\r\n\r\n\r\n    public boolean isCurved() {\r\n        return wantsCurve;\r\n    }\r\n\r\n    public void setCurve(boolean wantsCurve) {\r\n        this.wantsCurve = wantsCurve;\r\n    }\r\n\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- SmartGrader/src/sample/SetCurvePage.java	(revision ae728f295575a6196c7ae4f7b2bca12d2f82d71d)
+++ SmartGrader/src/sample/SetCurvePage.java	(date 1588138233250)
@@ -14,12 +14,21 @@
     @FXML
     private TextField SetCurveTextField;
 
-    private CurvedResults curvedResults;
-
     private String userEmail, classname;
 
     private boolean wantsCurve;
 
+    public double getCurvePercentage() {
+        return curvePercentage;
+    }
+
+    public void setCurvePercentage(double curvePercentage) {
+        this.curvePercentage = curvePercentage;
+    }
+
+    private double curvePercentage;
+
+
     @FXML
     public void initialize() {
         setCurve(false);
@@ -93,7 +102,7 @@
 
     public void clickedResults(ActionEvent event) {
         if (isValidInput()) {
-            curvedResults = new CurvedResults(getUserEmail(), Double.parseDouble(SetCurveTextField.getText()));
+            curvePercentage=Double.parseDouble(SetCurveTextField.getText());
             setCurve(true);
 
             // close window
@@ -125,15 +134,6 @@
         this.classname = classname;
     }
 
-    public CurvedResults getCurvedResults() {
-        return curvedResults;
-    }
-
-    public void setCurvedResults(CurvedResults curvedResults) {
-        this.curvedResults = curvedResults;
-    }
-
-
     public boolean isCurved() {
         return wantsCurve;
     }
Index: SmartGrader/src/sample/CourseTile.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package sample;\r\n\r\nimport javafx.beans.property.SimpleStringProperty;\r\nimport javafx.event.ActionEvent;\r\nimport javafx.fxml.FXML;\r\nimport javafx.fxml.FXMLLoader;\r\nimport javafx.scene.Node;\r\nimport javafx.scene.Parent;\r\nimport javafx.scene.Scene;\r\nimport javafx.scene.control.Button;\r\nimport javafx.scene.control.Label;\r\nimport javafx.stage.Stage;\r\n\r\nimport java.awt.*;\r\nimport java.io.File;\r\nimport java.io.IOException;\r\n\r\npublic class CourseTile extends Node {\r\n\r\n    @FXML\r\n    private Button classButton;\r\n\r\n    @FXML\r\n    private Label classNameLabel;\r\n\r\n    @FXML\r\n    public Button settingsButton;\r\n\r\n    @FXML\r\n    private Label classNumberLabel;\r\n\r\n    private String className, userName, courseNumber;\r\n\r\n    public String getClassName() {\r\n        return className;\r\n    }\r\n\r\n    public void setClassName(String className) {\r\n        this.className = className;\r\n    }\r\n\r\n    public String getUserName() {\r\n        return userName;\r\n    }\r\n\r\n    public void setUserName(String userName) {\r\n        this.userName = userName;\r\n    }\r\n\r\n    public String getCourseNumber() {\r\n        return courseNumber;\r\n    }\r\n\r\n    public void setCourseNumber(String courseNumber) {\r\n        this.courseNumber = courseNumber;\r\n    }\r\n\r\n    public void initialize() {\r\n        className = \"\";\r\n    }\r\n\r\n    public void clickSettings(ActionEvent event) {\r\n    }\r\n\r\n    public void clickClassButton(ActionEvent event) throws IOException {\r\n        FXMLLoader courseOverviewLoader = new FXMLLoader();\r\n        courseOverviewLoader.setLocation(getClass().getResource(\"ClassOverview.fxml\"));\r\n        Parent parent = courseOverviewLoader.load();\r\n        //assign homePageController\r\n        ClassOverview classOverviewController = courseOverviewLoader.getController();\r\n        //set keep Email for use in next text field\r\n        classOverviewController.setUsername(getUserName());\r\n        classOverviewController.setClassNameLabel(getClassName());\r\n        classOverviewController.setCourseNumberLabel(getCourseNumber());\r\n     //   classOverviewController.defaultClassOverviewPaneController.createAndSetSwingContent();\r\n\r\n        Scene scene = new Scene(parent);\r\n        Stage stage = new Stage();\r\n        stage.setTitle(\"SmartGrader\");\r\n        stage.setMaximized(true);\r\n        stage.setScene(scene);\r\n        stage.show();\r\n\r\n        Stage stageTheEventSourceNodeBelongs = (Stage) ((Node) event.getSource()).getScene().getWindow();\r\n        stageTheEventSourceNodeBelongs.close();\r\n\r\n    }\r\n\r\n    //set name to label\r\n    public void setClassNameLabel(String name) {\r\n        className = name;\r\n        classNameLabel.textProperty().bind(new SimpleStringProperty(name));\r\n    }\r\n\r\n    public void setClassNumberLabel(String number) {\r\n        courseNumber = number;\r\n        classNumberLabel.textProperty().bind(new SimpleStringProperty(\"(\" + number + \")\"));\r\n    }\r\n\r\n    public void setTileColor(Color color) {\r\n        String hex = String.format(\"#%02x%02x%02x\", color.getRed(), color.getGreen(), color.getBlue());\r\n        System.out.println(hex);\r\n        classButton.setStyle(\"-fx-background-color: \" + hex);\r\n    }\r\n\r\n    public void setTileIcon(String name) throws IOException {\r\n        File courseIcon = new File(name);\r\n        classButton.setStyle(\"-fx-background-image: url(' \" + courseIcon.toURI().toString() + \" ')\");\r\n    }\r\n\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- SmartGrader/src/sample/CourseTile.java	(revision ae728f295575a6196c7ae4f7b2bca12d2f82d71d)
+++ SmartGrader/src/sample/CourseTile.java	(date 1588012866156)
@@ -72,7 +72,7 @@
         classOverviewController.setUsername(getUserName());
         classOverviewController.setClassNameLabel(getClassName());
         classOverviewController.setCourseNumberLabel(getCourseNumber());
-     //   classOverviewController.defaultClassOverviewPaneController.createAndSetSwingContent();
+        classOverviewController.fillTable();
 
         Scene scene = new Scene(parent);
         Stage stage = new Stage();
Index: SmartGrader/src/sample/GraphPopup.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package sample;\r\n\r\nimport javafx.event.ActionEvent;\r\nimport javafx.scene.Node;\r\nimport javafx.scene.chart.BarChart;\r\nimport javafx.scene.chart.PieChart;\r\nimport javafx.scene.control.Label;\r\nimport javafx.scene.layout.Pane;\r\nimport javafx.scene.layout.StackPane;\r\nimport javafx.stage.Stage;\r\n\r\npublic class GraphPopup {\r\n    public StackPane stackPane;\r\n    public PieChart pieChart;\r\n    public BarChart barChart;\r\n    public Label topLabel;\r\n    public Pane pane;\r\n\r\n    //set PieChart\r\n    public void displayPieChart(PieChart chart){\r\n        pane.getChildren().add(chart);\r\n    }\r\n\r\n    public void displayBarChart(BarChart chart){\r\n        pane.getChildren().add(chart);\r\n    }\r\n\r\n    public void clickedClose(ActionEvent event) {\r\n        //close popup window\r\n        Stage stageTheEventSourceNodeBelongs = (Stage) ((Node) event.getSource()).getScene().getWindow();\r\n        stageTheEventSourceNodeBelongs.close();\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- SmartGrader/src/sample/GraphPopup.java	(revision ae728f295575a6196c7ae4f7b2bca12d2f82d71d)
+++ SmartGrader/src/sample/GraphPopup.java	(date 1587886344585)
@@ -1,9 +1,13 @@
 package sample;
 
 import javafx.event.ActionEvent;
+import javafx.print.PrinterJob;
 import javafx.scene.Node;
 import javafx.scene.chart.BarChart;
 import javafx.scene.chart.PieChart;
+import javafx.scene.control.Alert;
+import javafx.scene.control.ButtonType;
+import javafx.scene.control.DialogPane;
 import javafx.scene.control.Label;
 import javafx.scene.layout.Pane;
 import javafx.scene.layout.StackPane;
@@ -30,4 +34,20 @@
         Stage stageTheEventSourceNodeBelongs = (Stage) ((Node) event.getSource()).getScene().getWindow();
         stageTheEventSourceNodeBelongs.close();
     }
+
+    public void clickedPrint(ActionEvent actionEvent) {
+        PrinterJob job = PrinterJob.createPrinterJob();
+        if (job != null && job.showPrintDialog(pane.getScene().getWindow())){
+            boolean success = job.printPage(pane);
+            if (success) {
+                job.endJob();
+            }
+        }
+
+        Alert alert = new Alert(Alert.AlertType.INFORMATION, "Graph has been printed.", ButtonType.OK);
+        DialogPane dialogPane = alert.getDialogPane();
+        dialogPane.getStylesheets().add(getClass().getResource("/TealTeam.css").toExternalForm());
+        alert.showAndWait();
+
+    }
 }
Index: SmartGrader/src/sample/DefaultClassOverviewPane.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package sample;\r\n\r\n\r\nimport javafx.application.Platform;\r\nimport javafx.beans.property.SimpleStringProperty;\r\nimport javafx.embed.swing.SwingNode;\r\nimport javafx.event.ActionEvent;\r\nimport javafx.fxml.FXML;\r\nimport javafx.fxml.FXMLLoader;\r\nimport javafx.geometry.Pos;\r\nimport javafx.print.*;\r\nimport javafx.scene.Parent;\r\nimport javafx.scene.Scene;\r\nimport javafx.scene.control.Button;\r\nimport javafx.scene.control.*;\r\nimport javafx.scene.control.ScrollPane;\r\nimport javafx.scene.control.TextArea;\r\nimport javafx.scene.control.TextField;\r\nimport javafx.scene.image.WritableImage;\r\nimport javafx.scene.layout.GridPane;\r\nimport javafx.scene.layout.HBox;\r\nimport javafx.scene.layout.VBox;\r\nimport javafx.scene.transform.Scale;\r\nimport javafx.stage.Modality;\r\nimport javafx.stage.Stage;\r\nimport jdk.jfr.SettingControl;\r\n\r\nimport javax.swing.*;\r\nimport javax.swing.table.TableCellRenderer;\r\nimport java.awt.*;\r\nimport java.awt.print.PrinterException;\r\nimport java.io.IOException;\r\nimport java.lang.reflect.InvocationTargetException;\r\nimport java.util.ArrayList;\r\n\r\n\r\npublic class DefaultClassOverviewPane {\r\n\r\n    public HBox buttonBox;\r\n    public Button AddStudentButton;\r\n    public Button AddAssignmentButton;\r\n    public VBox mainBox;\r\n    public SwingNode theNode;\r\n    public GridPane theGrid;\r\n    public ScrollPane scrollPane;\r\n    private String className, userEmail;\r\n    private JPanel panel;\r\n\r\n    public String getClassName() {\r\n        return className;\r\n    }\r\n\r\n    public void setClassName(String className) {\r\n        this.className = className;\r\n    }\r\n\r\n    public String getUserEmail() {\r\n        return userEmail;\r\n    }\r\n\r\n    public void setUserEmail(String userEmail) {\r\n        this.userEmail = userEmail;\r\n    }\r\n\r\n    @FXML\r\n    public void initialize() throws InvocationTargetException, InterruptedException {\r\n        String[][] data = {{\"1\",\"2\", \"3\",\"4\",\"5\",\"6\"},{\"1\",\"2\", \"3\",\"4\",\"5\",\"6\"},{\"1\",\"2\", \"3\",\"4\",\"5\",\"6\"},{\"1\",\"2\", \"3\",\"4\",\"5\",\"6\"},{\"1\",\"2\", \"3\",\"4\",\"5\",\"6\"},{\"1\",\"2\", \"3\",\"4\",\"5\",\"6\"},{\"1\",\"2\", \"3\",\"4\",\"5\",\"6\"}};\r\n        fillGrid(data, true);\r\n    }\r\n\r\n    public void clickedAddStudent(ActionEvent event) throws IOException {\r\n        System.out.println(\"Click Add: class name: \" + getClassName());\r\n        System.out.println(getUserEmail());\r\n\r\n        try {\r\n            //Open up Add student page\r\n            FXMLLoader addStudentPageLoader = new FXMLLoader();\r\n            addStudentPageLoader.setLocation(getClass().getResource(\"AddStudentPage.fxml\"));\r\n            Parent parent = addStudentPageLoader.load();\r\n            //assign addStudentPageController\r\n            AddStudentPage addStudentPageController = addStudentPageLoader.getController();\r\n            //set  Email for use add page window\r\n            addStudentPageController.setClassname(getClassName());\r\n            addStudentPageController.setUserEmail(getUserEmail());\r\n\r\n            //Change window\r\n            Scene scene = new Scene(parent);\r\n            Stage stage = new Stage();\r\n            stage.initModality(Modality.APPLICATION_MODAL);\r\n            stage.setTitle(\"SmartGrader\");\r\n            stage.setScene(scene);\r\n            stage.showAndWait();\r\n\r\n            //TODO Refresh table when Student is added\r\n\r\n        } catch (IOException e) {\r\n            e.printStackTrace();\r\n        }\r\n    }\r\n\r\n    public void clickedAddAssignment(ActionEvent event) throws IOException {\r\n        try {\r\n            //Open up addAssignment page\r\n            FXMLLoader addAssignmentPageLoader = new FXMLLoader();\r\n            addAssignmentPageLoader.setLocation(getClass().getResource(\"AddAssignmentPage.fxml\"));\r\n            Parent parent = addAssignmentPageLoader.load();\r\n            //assign addAssignmentPageController\r\n            AddAssignmentPage addAssignmentPageController = addAssignmentPageLoader.getController();\r\n            //set  Email for use add page window\r\n            addAssignmentPageController.setCourseName(getClassName());\r\n            addAssignmentPageController.setUserEmail(getUserEmail());\r\n\r\n            //Change window\r\n            Scene scene = new Scene(parent);\r\n            Stage stage = new Stage();\r\n            stage.initModality(Modality.APPLICATION_MODAL);\r\n            stage.setTitle(\"SmartGrader\");\r\n            stage.setScene(scene);\r\n            stage.showAndWait();\r\n\r\n            //TODO Refresh table when Assignment is added\r\n        } catch (IOException e) {\r\n            e.printStackTrace();\r\n        }\r\n    }\r\n\r\n    public void fillCurveTableView(CurvedResults curvedResults) throws IOException {\r\n        boolean withbuttons = false;\r\n        String[][] data = new String[curvedResults.get_Last_Row(getClassName())-8][];\r\n        for (int row = 8; row < curvedResults.get_Last_Row(getClassName()); row++){\r\n            //set header for graph\r\n            if (row == 8){\r\n                data[0][0] = \"Full Name\";\r\n                data[0][1] = \"Student Id\";\r\n                data[0][2] = \"Overall Grade\";\r\n                data[0][3] = \"Curved Grade\";\r\n            } else {\r\n                data[row - 8][0] = (curvedResults.get_Student_First_Name(getClassName(), row) + \" \" + curvedResults.get_Student_Last_Name(getClassName(), row));\r\n                data[row - 8][1] = (curvedResults.get_Student_Id_Number(getClassName(), row));\r\n                data[row - 8][2] = (curvedResults.get_Student_Overall_Grade(getClassName(), row));\r\n                data[row - 8][3] = String.valueOf((curvedResults.get_Student_Curved_Grade(getClassName(), row)));\r\n            }\r\n        }\r\n\r\n        fillGrid(data , withbuttons);\r\n    }\r\n\r\n    private void fillGrid(String[][] data, boolean withbuttons) {\r\n        for (int row = 0; row < data.length; row++) {\r\n            for (int col = 0; col < data[row].length; col++) {\r\n                //create textfield\r\n                TextField field = new TextField();\r\n                field.setMaxHeight(50);\r\n                field.setMaxWidth(100);\r\n                field.setStyle(\"-fx-border-width: 5\");\r\n                field.setText(data[row][col]);\r\n\r\n\r\n                //style cells appropriately\r\n                field.setAlignment(Pos.CENTER);\r\n                if (row % 2 == 0 && row != 0) {\r\n                    field.setStyle(\"-fx-background-color: white\");\r\n                } else if (row != 0) {\r\n                    field.setStyle(\"-fx-background-color: lightgray\");\r\n                }\r\n                if (row == 0) {\r\n                    field.setDisable(true);\r\n                    field.setStyle(\"-fx-opacity: 1;\");\r\n                    field.getStyleClass().add(\"custom\");\r\n\r\n                }\r\n                //add to grid\r\n                theGrid.add(field, col, row);\r\n\r\n                if (row == data.length - 1 && col > 3 && withbuttons) {\r\n                    Button button = new Button(\"Edit\");\r\n                    button.setMaxSize(100, 200);\r\n                    button.getStyleClass().add(\"customTableButton\");\r\n\r\n                    int finalCol = col;\r\n                    button.setOnAction(e ->{\r\n                        try {\r\n                            //open up the edit assignment page\r\n                            FXMLLoader editAssignmentLoader = new FXMLLoader();\r\n                            editAssignmentLoader.setLocation(getClass().getResource(\"EditAssignmentPage.fxml\"));\r\n                            Parent parent = editAssignmentLoader.load();\r\n                            //assign the edit page controller\r\n                            EditAssignmentPage editAssignmentPageController = editAssignmentLoader.getController();\r\n                            //set variables using controller;\r\n                            editAssignmentPageController.setColumnNumber(finalCol);\r\n                            editAssignmentPageController.setCourseName(getClassName());\r\n                            editAssignmentPageController.setUserEmail(getUserEmail());\r\n\r\n                            //Change window\r\n                            Scene scene = new Scene(parent);\r\n                            Stage stage = new Stage();\r\n                            stage.initModality(Modality.APPLICATION_MODAL);\r\n                            stage.setTitle(\"SmartGrader\");\r\n                            stage.setScene(scene);\r\n                            stage.showAndWait();\r\n\r\n                            //TODO Refresh table after\r\n                        } catch (IOException ioException) {\r\n                            ioException.printStackTrace();\r\n                        }\r\n                    });\r\n                    theGrid.add(button, col, row + 1);\r\n                }\r\n\r\n                if (col == data[row].length - 1 && row > 0 && withbuttons) {\r\n                    Button button = new Button(\"Edit Student\");\r\n                    button.getStyleClass().add(\"customTableButton\");\r\n                    theGrid.add(button, col + 1, row);\r\n                    int finalRow = row;\r\n                    button.setOnAction(e ->{\r\n\r\n                        try {//TODO Edit Student Setup launch controller\r\n                            //Load FXML for editStudentPage\r\n                            FXMLLoader editStudentLoader = new FXMLLoader();\r\n                            editStudentLoader.setLocation(getClass().getResource(\"EditStudentPage.fxml\"));\r\n                            Parent parent = editStudentLoader.load();\r\n                            //assign edit student controller\r\n                            EditStudentPage editStudentPageController = editStudentLoader.getController();\r\n                            //assign variables\r\n                            editStudentPageController.setCourseName(getClassName());\r\n                            editStudentPageController.setOldStudentIDNumber(data[finalRow][2]);\r\n                            editStudentPageController.setUserEmail(getUserEmail());\r\n                            //Change window\r\n                            Scene scene = new Scene(parent);\r\n                            Stage stage = new Stage();\r\n                            stage.initModality(Modality.APPLICATION_MODAL);\r\n                            stage.setTitle(\"SmartGrader\");\r\n                            stage.setScene(scene);\r\n                            stage.showAndWait();\r\n\r\n                        } catch (IOException ioException) {\r\n                            ioException.printStackTrace();\r\n                        }\r\n                    });\r\n                }\r\n\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    public void printTable() throws PrinterException {\r\n        Printer printer = Printer.getDefaultPrinter();\r\n        PageLayout pageLayout = printer.createPageLayout(Paper.NA_LETTER, PageOrientation.PORTRAIT, Printer.MarginType.DEFAULT);\r\n\r\n        // Get the print page size:\r\n        final double  prnW = pageLayout.getPrintableWidth();\r\n        final double  prnH = pageLayout.getPrintableHeight();\r\n\r\n        // Work out how many pages across and down are needed (This code may not work?):\r\n        final int  pagesAcross = (int) Math.ceil( theGrid.getWidth() / prnW );\r\n        final int  pagesDown = (int) Math.ceil( theGrid.getHeight() / prnH );\r\n\r\n        /* Print pages down and then across like so:\r\n           1    3\r\n           2    4\r\n        */\r\n        PrinterJob job = PrinterJob.createPrinterJob();\r\n        for (int pgCol = 0; pgCol < pagesAcross; pgCol++ )\r\n        {\r\n            for ( int pgRow = 0; pgRow < pagesDown; pgRow++ )\r\n            {\r\n                theGrid.setTranslateX( -(prnW * pgCol) );\r\n                theGrid.setTranslateY( -(prnH * pgRow) );\r\n                job.printPage( pageLayout, theGrid );\r\n            }\r\n        }\r\n\r\n        job.endJob();\r\n\r\n        //TODO after printjob, clearview and fill view all over again\r\n\r\n\r\n\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- SmartGrader/src/sample/DefaultClassOverviewPane.java	(revision ae728f295575a6196c7ae4f7b2bca12d2f82d71d)
+++ SmartGrader/src/sample/DefaultClassOverviewPane.java	(date 1588141165924)
@@ -64,8 +64,8 @@
 
     @FXML
     public void initialize() throws InvocationTargetException, InterruptedException {
-        String[][] data = {{"1","2", "3","4","5","6"},{"1","2", "3","4","5","6"},{"1","2", "3","4","5","6"},{"1","2", "3","4","5","6"},{"1","2", "3","4","5","6"},{"1","2", "3","4","5","6"},{"1","2", "3","4","5","6"}};
-        fillGrid(data, true);
+       // String[][] data = {{"1","2", "3","4","5","6"},{"1","2", "3","4","5","6"},{"1","2", "3","4","5","6"},{"1","2", "3","4","5","6"},{"1","2", "3","4","5","6"},{"1","2", "3","4","5","6"},{"1","2", "3","4","5","6"}};
+       // fillGrid(data, true);
     }
 
     public void clickedAddStudent(ActionEvent event) throws IOException {
@@ -91,7 +91,7 @@
             stage.setScene(scene);
             stage.showAndWait();
 
-            //TODO Refresh table when Student is added
+            refreshTable();
 
         } catch (IOException e) {
             e.printStackTrace();
@@ -118,34 +118,34 @@
             stage.setScene(scene);
             stage.showAndWait();
 
-            //TODO Refresh table when Assignment is added
+            refreshTable();
         } catch (IOException e) {
             e.printStackTrace();
         }
     }
 
-    public void fillCurveTableView(CurvedResults curvedResults) throws IOException {
+    public void fillCurveTableView(Double curve) throws IOException {
+        CurvedResults curvedResults = new CurvedResults(getUserEmail(), curve);
         boolean withbuttons = false;
-        String[][] data = new String[curvedResults.get_Last_Row(getClassName())-8][];
-        for (int row = 8; row < curvedResults.get_Last_Row(getClassName()); row++){
-            //set header for graph
-            if (row == 8){
-                data[0][0] = "Full Name";
-                data[0][1] = "Student Id";
-                data[0][2] = "Overall Grade";
-                data[0][3] = "Curved Grade";
-            } else {
-                data[row - 8][0] = (curvedResults.get_Student_First_Name(getClassName(), row) + " " + curvedResults.get_Student_Last_Name(getClassName(), row));
-                data[row - 8][1] = (curvedResults.get_Student_Id_Number(getClassName(), row));
-                data[row - 8][2] = (curvedResults.get_Student_Overall_Grade(getClassName(), row));
-                data[row - 8][3] = String.valueOf((curvedResults.get_Student_Curved_Grade(getClassName(), row)));
-            }
+        String[][] data = new String[curvedResults.get_Last_Row(getClassName())-6][4];
+        data[0][0] = "Full Name";
+        data[0][1] = "Student Id";
+        data[0][2] = "Overall Grade";
+        data[0][3] = "Curved Grade";
+        for (int excelrow = 8, arrayRow = 1; excelrow <= curvedResults.get_Last_Row(getClassName()); excelrow++, arrayRow++){
+                //fill table
+                data[arrayRow][0] = (curvedResults.get_Student_First_Name(getClassName(), excelrow) + " " + curvedResults.get_Student_Last_Name(getClassName(), excelrow));
+                data[arrayRow][1] = (curvedResults.get_Student_Id_Number(getClassName(), excelrow));
+                data[arrayRow][2] = (curvedResults.get_Student_Overall_Grade(getClassName(), excelrow));
+                data[arrayRow][3] = String.valueOf((curvedResults.get_Student_Curved_Grade(getClassName(), excelrow)));
         }
 
         fillGrid(data , withbuttons);
     }
 
-    private void fillGrid(String[][] data, boolean withbuttons) {
+    public void fillGrid(String[][] data, boolean withbuttons) {
+        theGrid.getChildren().clear();
+
         for (int row = 0; row < data.length; row++) {
             for (int col = 0; col < data[row].length; col++) {
                 //create textfield
@@ -155,7 +155,6 @@
                 field.setStyle("-fx-border-width: 5");
                 field.setText(data[row][col]);
 
-
                 //style cells appropriately
                 field.setAlignment(Pos.CENTER);
                 if (row % 2 == 0 && row != 0) {
@@ -169,6 +168,40 @@
                     field.getStyleClass().add("custom");
 
                 }
+
+                //create listener for textfields
+                if (col >3 && row > 0){
+                    int finalRow1 = row;
+                    int finalCol1 = col;
+                    field.setOnAction(e->{
+                        //check for integer
+                        if (field.getText().matches("-?(0|[1-9]\\d*)")){
+                            //change grade
+                            Grading grading = new Grading(getUserEmail());
+
+                            grading.update_The_Grade(getClassName(),Integer.parseInt(field.getText()), finalRow1+ 7, finalCol1+1);
+
+                            grading.calculate_The_Overall_Grade(getClassName(),finalRow1+7);
+                            //refill table
+                            refreshTable();
+                        } else {
+                            //Not an integer
+                            Alert alert = new Alert(Alert.AlertType.ERROR, "Invalid Input.", ButtonType.OK);
+                            DialogPane dialogPane = alert.getDialogPane();
+                            dialogPane.getStylesheets().add(getClass().getResource("/TealTeam.css").toExternalForm());
+                            alert.showAndWait();
+
+                            refreshTable();
+                        }
+
+
+                        //
+                    });
+                }
+
+
+
+
                 //add to grid
                 theGrid.add(field, col, row);
 
@@ -178,8 +211,11 @@
                     button.getStyleClass().add("customTableButton");
 
                     int finalCol = col;
+                    //add listeners to edit assignment Button
                     button.setOnAction(e ->{
                         try {
+
+                            //TODO fix delete
                             //open up the edit assignment page
                             FXMLLoader editAssignmentLoader = new FXMLLoader();
                             editAssignmentLoader.setLocation(getClass().getResource("EditAssignmentPage.fxml"));
@@ -199,8 +235,9 @@
                             stage.setScene(scene);
                             stage.showAndWait();
 
-                            //TODO Refresh table after
-                        } catch (IOException ioException) {
+                            refreshTable();
+
+                            } catch (IOException ioException) {
                             ioException.printStackTrace();
                         }
                     });
@@ -214,7 +251,7 @@
                     int finalRow = row;
                     button.setOnAction(e ->{
 
-                        try {//TODO Edit Student Setup launch controller
+                        try {
                             //Load FXML for editStudentPage
                             FXMLLoader editStudentLoader = new FXMLLoader();
                             editStudentLoader.setLocation(getClass().getResource("EditStudentPage.fxml"));
@@ -233,6 +270,8 @@
                             stage.setScene(scene);
                             stage.showAndWait();
 
+                            refreshTable();
+
                         } catch (IOException ioException) {
                             ioException.printStackTrace();
                         }
@@ -273,9 +312,19 @@
 
         job.endJob();
 
-        //TODO after printjob, clearview and fill view all over again
+        refreshTable();
+    }
 
+    private void refreshTable(){
+        //clear table
+        theGrid.getChildren().clear();
+        //reset the table
+        LoadCourseData loadCourseData = new LoadCourseData(getUserEmail());
+        String[][] updatedData =loadCourseData.get_2D_Array_Loaded_With_The_Course_Data(getClassName());
+        fillGrid(updatedData,true);
+    }
 
-
+    public void clickedRefresh(ActionEvent actionEvent) {
+        refreshTable();
     }
 }
Index: SmartGrader/src/sample/GraphPopup.fxml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n\r\n<?import javafx.geometry.*?>\r\n<?import javafx.scene.control.*?>\r\n<?import javafx.scene.layout.*?>\r\n\r\n<BorderPane stylesheets=\"@../TealTeam.css\" xmlns=\"http://javafx.com/javafx/10.0.2-internal\" xmlns:fx=\"http://javafx.com/fxml/1\" fx:controller=\"sample.GraphPopup\">\r\n   <center>\r\n      <Pane fx:id=\"pane\" maxHeight=\"-Infinity\" maxWidth=\"-Infinity\" minHeight=\"-Infinity\" minWidth=\"-Infinity\" prefHeight=\"400.0\" prefWidth=\"600.0\" />\r\n   </center>\r\n   <bottom>\r\n      <Button mnemonicParsing=\"false\" onAction=\"#clickedClose\" text=\"Close\" BorderPane.alignment=\"CENTER\" />\r\n   </bottom>\r\n   <padding>\r\n      <Insets bottom=\"20.0\" left=\"20.0\" right=\"20.0\" top=\"20.0\" />\r\n   </padding>\r\n   <top>\r\n      <Label fx:id=\"topLabel\" text=\"Label\" BorderPane.alignment=\"CENTER\" />\r\n   </top>\r\n</BorderPane>\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- SmartGrader/src/sample/GraphPopup.fxml	(revision ae728f295575a6196c7ae4f7b2bca12d2f82d71d)
+++ SmartGrader/src/sample/GraphPopup.fxml	(date 1587886023887)
@@ -6,15 +6,24 @@
 
 <BorderPane stylesheets="@../TealTeam.css" xmlns="http://javafx.com/javafx/10.0.2-internal" xmlns:fx="http://javafx.com/fxml/1" fx:controller="sample.GraphPopup">
    <center>
-      <Pane fx:id="pane" maxHeight="-Infinity" maxWidth="-Infinity" minHeight="-Infinity" minWidth="-Infinity" prefHeight="400.0" prefWidth="600.0" />
+      <Pane fx:id="pane" maxHeight="-Infinity" maxWidth="-Infinity" minHeight="-Infinity" minWidth="-Infinity" prefHeight="338.0" prefWidth="507.0" />
    </center>
    <bottom>
-      <Button mnemonicParsing="false" onAction="#clickedClose" text="Close" BorderPane.alignment="CENTER" />
+      <HBox alignment="CENTER" prefHeight="50.0" prefWidth="600.0" spacing="250.0" BorderPane.alignment="CENTER">
+         <children>
+            <Button mnemonicParsing="false" onAction="#clickedClose" text="Close" />
+            <Button mnemonicParsing="false" onAction="#clickedPrint" text="Print" />
+         </children>
+      </HBox>
    </bottom>
    <padding>
-      <Insets bottom="20.0" left="20.0" right="20.0" top="20.0" />
+      <Insets bottom="10.0" left="10.0" right="10.0" top="10.0" />
    </padding>
    <top>
-      <Label fx:id="topLabel" text="Label" BorderPane.alignment="CENTER" />
+      <HBox alignment="CENTER" prefHeight="35.0" prefWidth="600.0" BorderPane.alignment="CENTER">
+         <children>
+            <Label fx:id="topLabel" text="Label" />
+         </children>
+      </HBox>
    </top>
 </BorderPane>
Index: SmartGrader/src/sample/ChooseGraphPage.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package sample;\r\n\r\nimport javafx.event.ActionEvent;\r\nimport javafx.scene.Node;\r\nimport javafx.scene.control.TextField;\r\nimport javafx.scene.control.ToggleGroup;\r\nimport javafx.stage.Stage;\r\n\r\npublic class ChooseGraphPage {\r\n    public ToggleGroup GradeSelectionToggle;\r\n    public TextField fGradeMinTextfield;\r\n    public TextField DGradeMinTextfield;\r\n    public TextField CGradeMinTextfield;\r\n    public TextField BfGradeMinTextfield;\r\n    public TextField AGradeMinTextfield;\r\n\r\n    public void clickedPieChartButton(ActionEvent actionEvent) {\r\n        //TODO get data and build chart, pass chart to method in GraphPopup\r\n    }\r\n\r\n    public void clickedBarChartButton(ActionEvent actionEvent) {\r\n        //TODO get data and build chart, pass chart to method in GraphPopup\r\n    }\r\n\r\n    public void clickedCancelButton(ActionEvent actionEvent) {\r\n        //close popup window\r\n        Stage stageTheEventSourceNodeBelongs = (Stage) ((Node) actionEvent.getSource()).getScene().getWindow();\r\n        stageTheEventSourceNodeBelongs.close();\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- SmartGrader/src/sample/ChooseGraphPage.java	(revision ae728f295575a6196c7ae4f7b2bca12d2f82d71d)
+++ SmartGrader/src/sample/ChooseGraphPage.java	(date 1588125411912)
@@ -1,25 +1,139 @@
 package sample;
 
+import javafx.collections.FXCollections;
+import javafx.collections.ObservableList;
 import javafx.event.ActionEvent;
+import javafx.fxml.FXMLLoader;
 import javafx.scene.Node;
+import javafx.scene.Parent;
+import javafx.scene.Scene;
+import javafx.scene.chart.*;
+import javafx.scene.control.RadioButton;
 import javafx.scene.control.TextField;
 import javafx.scene.control.ToggleGroup;
+import javafx.stage.Modality;
 import javafx.stage.Stage;
 
+import java.io.IOException;
+
 public class ChooseGraphPage {
     public ToggleGroup GradeSelectionToggle;
-    public TextField fGradeMinTextfield;
     public TextField DGradeMinTextfield;
     public TextField CGradeMinTextfield;
-    public TextField BfGradeMinTextfield;
+    public TextField BGradeMinTextfield;
     public TextField AGradeMinTextfield;
+    public RadioButton totalGradeRadioButton;
+    public RadioButton quizRadioButton;
+    public RadioButton homeworkRadioButton;
+    public RadioButton projectsRadioButton;
+    public RadioButton examRadioButton;
+    String userEmail, courseName;
+
+    public void clickedPieChartButton(ActionEvent actionEvent) throws IOException {
+        Grading grading = new Grading(getUserEmail());
+        int[] data = new int[0];
+        String chartTitle = "";
+
+        if(GradeSelectionToggle.getSelectedToggle() ==  totalGradeRadioButton){
+            data = grading.get_The_Array_Loaded_With_Total_Number_Of_As_Bs_Cs_Ds_And_Fs_For_Overall_Grade(getCourseName());
+            chartTitle = "Total Grade";
+        } else if (GradeSelectionToggle.getSelectedToggle() ==  quizRadioButton){
+            data = grading.get_The_Array_Loaded_With_Total_Number_Of_As_Bs_Cs_Ds_And_Fs_For_Quizes(getCourseName());
+            chartTitle = "Quiz Grade";
+        } else if(GradeSelectionToggle.getSelectedToggle() == homeworkRadioButton){
+            data = grading.get_The_Array_Loaded_With_Total_Number_Of_As_Bs_Cs_Ds_And_Fs_For_Homeworks(getCourseName());
+            chartTitle = "Homework Grade";
+        } else if(GradeSelectionToggle.getSelectedToggle() == projectsRadioButton){
+            data = grading.get_The_Array_Loaded_With_Total_Number_Of_As_Bs_Cs_Ds_And_Fs_For_Projects(getCourseName());
+            chartTitle = "Project Grade";
+        } else if (GradeSelectionToggle.getSelectedToggle() == examRadioButton){
+            data = grading.get_The_Array_Loaded_With_Total_Number_Of_As_Bs_Cs_Ds_And_Fs_For_Exams(getCourseName());
+            chartTitle = "Exam Grade";
+        }
+
+        ObservableList<PieChart.Data> pieChartData =
+                FXCollections.observableArrayList(
+                        new PieChart.Data("A", data[0]),
+                        new PieChart.Data("B", data[1]),
+                        new PieChart.Data("C", data[2]),
+                        new PieChart.Data("D", data[3]),
+                        new PieChart.Data("F", data[4]));
+        final PieChart chart = new PieChart(pieChartData);
+        chart.setTitle(chartTitle);
+
+        //point fxml loader
+        FXMLLoader graphPopUpLoader = new FXMLLoader();
+        graphPopUpLoader.setLocation(getClass().getResource("GraphPopup.fxml"));
+        Parent root = graphPopUpLoader.load();
+        //get controller
+        GraphPopup graphPopupController = graphPopUpLoader.getController();
+        graphPopupController.displayPieChart(chart);
+        // Open Popup
+        Scene scene = new Scene(root);
+        Stage stage = new Stage();
+        stage.initModality(Modality.APPLICATION_MODAL);
+        stage.setScene(scene);
+        stage.showAndWait();
+
+        clickedCancelButton(actionEvent);
 
-    public void clickedPieChartButton(ActionEvent actionEvent) {
-        //TODO get data and build chart, pass chart to method in GraphPopup
     }
 
-    public void clickedBarChartButton(ActionEvent actionEvent) {
-        //TODO get data and build chart, pass chart to method in GraphPopup
+    public void clickedBarChartButton(ActionEvent actionEvent) throws IOException {
+        Grading grading = new Grading(getUserEmail());
+        int[] data = new int[0];
+        String chartTitle = "";
+
+        if(GradeSelectionToggle.getSelectedToggle() ==  totalGradeRadioButton){
+            data = grading.get_The_Array_Loaded_With_Total_Number_Of_As_Bs_Cs_Ds_And_Fs_For_Overall_Grade(getCourseName());
+            chartTitle = "Total Grade";
+        } else if (GradeSelectionToggle.getSelectedToggle() ==  quizRadioButton){
+            data = grading.get_The_Array_Loaded_With_Total_Number_Of_As_Bs_Cs_Ds_And_Fs_For_Quizes(getCourseName());
+            chartTitle = "Quiz Grade";
+        } else if(GradeSelectionToggle.getSelectedToggle() == homeworkRadioButton){
+            data = grading.get_The_Array_Loaded_With_Total_Number_Of_As_Bs_Cs_Ds_And_Fs_For_Homeworks(getCourseName());
+            chartTitle = "Homework Grade";
+        } else if(GradeSelectionToggle.getSelectedToggle() == projectsRadioButton){
+            data = grading.get_The_Array_Loaded_With_Total_Number_Of_As_Bs_Cs_Ds_And_Fs_For_Projects(getCourseName());
+            chartTitle = "Project Grade";
+        } else if (GradeSelectionToggle.getSelectedToggle() == examRadioButton){
+            data = grading.get_The_Array_Loaded_With_Total_Number_Of_As_Bs_Cs_Ds_And_Fs_For_Exams(getCourseName());
+            chartTitle = "Exam Grade";
+        }
+
+        CategoryAxis xAxis    = new CategoryAxis();
+        xAxis.setLabel("Grade");
+
+        NumberAxis yAxis = new NumberAxis();
+        yAxis.setLabel("Students");
+
+        BarChart barChart = new BarChart(xAxis, yAxis);
+
+        XYChart.Series dataSeries1 = new XYChart.Series();
+        dataSeries1.setName(chartTitle);
+
+        dataSeries1.getData().add(new XYChart.Data("A", data[0]));
+        dataSeries1.getData().add(new XYChart.Data("B", data[1]));
+        dataSeries1.getData().add(new XYChart.Data("C", data[2]));
+        dataSeries1.getData().add(new XYChart.Data("D", data[3]));
+        dataSeries1.getData().add(new XYChart.Data("F", data[4]));
+        barChart.getData().add(dataSeries1);
+
+        //point fxml loader
+        FXMLLoader graphPopUpLoader = new FXMLLoader();
+        graphPopUpLoader.setLocation(getClass().getResource("GraphPopup.fxml"));
+        Parent root = graphPopUpLoader.load();
+        //get controller
+        GraphPopup graphPopupController = graphPopUpLoader.getController();
+        graphPopupController.displayBarChart(barChart);
+        // Open Popup
+        Scene scene = new Scene(root);
+        Stage stage = new Stage();
+        stage.initModality(Modality.APPLICATION_MODAL);
+        stage.setScene(scene);
+        stage.showAndWait();
+
+        clickedCancelButton(actionEvent);
     }
 
     public void clickedCancelButton(ActionEvent actionEvent) {
@@ -27,4 +141,43 @@
         Stage stageTheEventSourceNodeBelongs = (Stage) ((Node) actionEvent.getSource()).getScene().getWindow();
         stageTheEventSourceNodeBelongs.close();
     }
+
+
+    public String getUserEmail() {
+        return userEmail;
+    }
+
+    public void setUserEmail(String userEmail) {
+        this.userEmail = userEmail;
+    }
+
+    public String getCourseName() {
+        return courseName;
+    }
+
+    public void setCourseName(String courseName) {
+        this.courseName = courseName;
+    }
+
+    public void enteredA(ActionEvent actionEvent) {
+        Grading grading = new Grading(getUserEmail());
+        grading.update_Grade_Range(getCourseName(), "A", AGradeMinTextfield.getText());
+    }
+
+    public void enteredB(ActionEvent actionEvent) {
+        Grading grading = new Grading(getUserEmail());
+        grading.update_Grade_Range(getCourseName(), "B", BGradeMinTextfield.getText());
+    }
+
+    public void enteredC(ActionEvent actionEvent) {
+        Grading grading = new Grading(getUserEmail());
+        grading.update_Grade_Range(getCourseName(), "C", CGradeMinTextfield.getText());
+    }
+
+    public void enteredD(ActionEvent actionEvent) {
+        Grading grading = new Grading(getUserEmail());
+        grading.update_Grade_Range(getCourseName(), "D", DGradeMinTextfield.getText());
+    }
+
+
 }
Index: out/production/COMP380_Project/sample/SearchClassOverviewPane.fxml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n\r\n<?import javafx.geometry.Insets?>\r\n<?import javafx.scene.control.*?>\r\n<?import javafx.scene.image.Image?>\r\n<?import javafx.scene.image.ImageView?>\r\n<?import javafx.scene.layout.*?>\r\n<VBox xmlns:fx=\"http://javafx.com/fxml/1\" alignment=\"CENTER\" BorderPane.alignment=\"CENTER\" spacing=\"30.0\"\r\n      style=\"-fx-background-color: #546C6E;\" fillWidth=\"true\" xmlns=\"http://javafx.com/javafx/10.0.2-internal\"\r\n      fx:controller=\"sample.SearchClassOverviewPane\">\r\n    <HBox>\r\n        <children>\r\n            <Label text=\"Search Student\"/>\r\n            <Region HBox.hgrow=\"ALWAYS\"/>\r\n            <Button fx:id=\"xButtton\" onAction=\"#xButtonClicked\" maxHeight=\"31.0\" maxWidth=\"33.0\" mnemonicParsing=\"false\"\r\n                    prefHeight=\"20.0\" prefWidth=\"20.0\" style=\"-fx-background-color: #324748;\">\r\n                <graphic>\r\n                    <ImageView fitHeight=\"20.0\" fitWidth=\"20.0\" pickOnBounds=\"true\" preserveRatio=\"true\">\r\n                        <image>\r\n                            <Image url=\"@../thumbnails/XIcon.png\"/>\r\n                        </image>\r\n                    </ImageView>\r\n                </graphic>\r\n                <padding>\r\n                    <Insets bottom=\"2.5\" left=\"2.5\" right=\"2.5\" top=\"2.5\"/>\r\n                </padding>\r\n            </Button>\r\n        </children>\r\n    </HBox>\r\n    <GridPane hgap=\"30.0\" prefHeight=\"179.0\" prefWidth=\"626.0\" vgap=\"30.0\">\r\n        <columnConstraints>\r\n            <ColumnConstraints hgrow=\"SOMETIMES\" minWidth=\"10.0\" prefWidth=\"100.0\"/>\r\n            <ColumnConstraints hgrow=\"SOMETIMES\" minWidth=\"10.0\" prefWidth=\"100.0\"/>\r\n        </columnConstraints>\r\n        <rowConstraints>\r\n            <RowConstraints minHeight=\"10.0\" prefHeight=\"30.0\" vgrow=\"SOMETIMES\"/>\r\n            <RowConstraints minHeight=\"10.0\" prefHeight=\"30.0\" vgrow=\"SOMETIMES\"/>\r\n            <RowConstraints minHeight=\"10.0\" prefHeight=\"30.0\" vgrow=\"SOMETIMES\"/>\r\n        </rowConstraints>\r\n        <children>\r\n            <HBox alignment=\"CENTER\" spacing=\"50.0\">\r\n                <children>\r\n                    <Label text=\"First Name:\"/>\r\n                    <TextField fx:id=\"FirstNameField\"/>\r\n                </children>\r\n                <GridPane.margin>\r\n                    <Insets top=\"5.0\"/>\r\n                </GridPane.margin>\r\n            </HBox>\r\n            <HBox alignment=\"CENTER\" layoutX=\"10.0\" layoutY=\"10.0\" spacing=\"50.0\" GridPane.columnIndex=\"1\">\r\n                <children>\r\n                    <Label text=\"Last Name:\"/>\r\n                    <TextField fx:id=\"LastNameField\"/>\r\n                </children>\r\n            </HBox>\r\n            <HBox alignment=\"CENTER\" layoutX=\"10.0\" layoutY=\"10.0\" spacing=\"50.0\" GridPane.columnIndex=\"1\"\r\n                  GridPane.rowIndex=\"1\">\r\n                <children>\r\n                    <Label text=\"Student ID:\"/>\r\n                    <TextField fx:id=\"IDField\"/>\r\n                </children>\r\n            </HBox>\r\n            <HBox alignment=\"CENTER\" layoutX=\"10.0\" layoutY=\"10.0\" spacing=\"50.0\" GridPane.rowIndex=\"1\">\r\n                <children>\r\n                    <Label text=\"Date of Birth:\"/>\r\n                    <TextField fx:id=\"DOBField\"/>\r\n                </children>\r\n            </HBox>\r\n            <HBox GridPane.columnIndex=\"1\" GridPane.rowIndex=\"2\">\r\n                <children>\r\n                    <Button fx:id=\"SearchStudentButton\" mnemonicParsing=\"false\" onAction=\"#clickedSearchStudent\"\r\n                            text=\"Search\"/>\r\n                </children>\r\n            </HBox>\r\n            <HBox alignment=\"TOP_RIGHT\" GridPane.rowIndex=\"2\">\r\n                <children>\r\n                    <Button fx:id=\"ClearButton\" mnemonicParsing=\"false\" text=\"Clear\" onAction=\"#clickedClear\"/>\r\n                </children>\r\n            </HBox>\r\n        </children>\r\n        <VBox.margin>\r\n            <Insets/>\r\n        </VBox.margin>\r\n    </GridPane>\r\n    <TableView fx:id=\"resultsTable\">\r\n        <columns>\r\n            <TableColumn prefWidth=\"75.0\" text=\"Student Name\"/>\r\n            <TableColumn prefWidth=\"75.0\" text=\"Student ID\"/>\r\n            <TableColumn prefWidth=\"75.0\" text=\"Date of Birth\"/>\r\n        </columns>\r\n        <columnResizePolicy>\r\n            <TableView fx:constant=\"CONSTRAINED_RESIZE_POLICY\"/>\r\n        </columnResizePolicy>\r\n    </TableView>\r\n    <padding>\r\n        <Insets bottom=\"10.0\" left=\"10.0\" right=\"10.0\" top=\"10.0\"/>\r\n    </padding>\r\n</VBox>\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- out/production/COMP380_Project/sample/SearchClassOverviewPane.fxml	(revision ae728f295575a6196c7ae4f7b2bca12d2f82d71d)
+++ out/production/COMP380_Project/sample/SearchClassOverviewPane.fxml	(date 1588132577957)
@@ -1,98 +1,95 @@
 <?xml version="1.0" encoding="UTF-8"?>
 
-<?import javafx.geometry.Insets?>
+<?import javafx.geometry.*?>
 <?import javafx.scene.control.*?>
-<?import javafx.scene.image.Image?>
-<?import javafx.scene.image.ImageView?>
+<?import javafx.scene.image.*?>
 <?import javafx.scene.layout.*?>
-<VBox xmlns:fx="http://javafx.com/fxml/1" alignment="CENTER" BorderPane.alignment="CENTER" spacing="30.0"
-      style="-fx-background-color: #546C6E;" fillWidth="true" xmlns="http://javafx.com/javafx/10.0.2-internal"
-      fx:controller="sample.SearchClassOverviewPane">
+
+<VBox alignment="CENTER" fillWidth="true" spacing="30.0" style="-fx-background-color: #546C6E;" BorderPane.alignment="CENTER" xmlns="http://javafx.com/javafx/10.0.2-internal" xmlns:fx="http://javafx.com/fxml/1" fx:controller="sample.SearchClassOverviewPane">
     <HBox>
         <children>
-            <Label text="Search Student"/>
-            <Region HBox.hgrow="ALWAYS"/>
-            <Button fx:id="xButtton" onAction="#xButtonClicked" maxHeight="31.0" maxWidth="33.0" mnemonicParsing="false"
-                    prefHeight="20.0" prefWidth="20.0" style="-fx-background-color: #324748;">
+            <Label text="Search Student" />
+            <Region HBox.hgrow="ALWAYS" />
+            <Button maxHeight="31.0" maxWidth="33.0" mnemonicParsing="false" onAction="#xButtonClicked" prefHeight="20.0" prefWidth="20.0" style="-fx-background-color: #324748;" fx:id="xButtton">
                 <graphic>
                     <ImageView fitHeight="20.0" fitWidth="20.0" pickOnBounds="true" preserveRatio="true">
                         <image>
-                            <Image url="@../thumbnails/XIcon.png"/>
+                            <Image url="@../thumbnails/XIcon.png" />
                         </image>
                     </ImageView>
                 </graphic>
                 <padding>
-                    <Insets bottom="2.5" left="2.5" right="2.5" top="2.5"/>
+                    <Insets bottom="2.5" left="2.5" right="2.5" top="2.5" />
                 </padding>
             </Button>
         </children>
     </HBox>
     <GridPane hgap="30.0" prefHeight="179.0" prefWidth="626.0" vgap="30.0">
         <columnConstraints>
-            <ColumnConstraints hgrow="SOMETIMES" minWidth="10.0" prefWidth="100.0"/>
-            <ColumnConstraints hgrow="SOMETIMES" minWidth="10.0" prefWidth="100.0"/>
+            <ColumnConstraints hgrow="SOMETIMES" minWidth="10.0" prefWidth="100.0" />
+            <ColumnConstraints hgrow="SOMETIMES" minWidth="10.0" prefWidth="100.0" />
         </columnConstraints>
         <rowConstraints>
-            <RowConstraints minHeight="10.0" prefHeight="30.0" vgrow="SOMETIMES"/>
-            <RowConstraints minHeight="10.0" prefHeight="30.0" vgrow="SOMETIMES"/>
-            <RowConstraints minHeight="10.0" prefHeight="30.0" vgrow="SOMETIMES"/>
+            <RowConstraints minHeight="10.0" prefHeight="30.0" vgrow="SOMETIMES" />
+            <RowConstraints minHeight="10.0" prefHeight="30.0" vgrow="SOMETIMES" />
+            <RowConstraints minHeight="10.0" prefHeight="30.0" vgrow="SOMETIMES" />
         </rowConstraints>
         <children>
             <HBox alignment="CENTER" spacing="50.0">
                 <children>
-                    <Label text="First Name:"/>
-                    <TextField fx:id="FirstNameField"/>
+                    <Label text="First Name:" />
+                    <TextField fx:id="FirstNameField" />
                 </children>
                 <GridPane.margin>
-                    <Insets top="5.0"/>
+                    <Insets top="5.0" />
                 </GridPane.margin>
             </HBox>
             <HBox alignment="CENTER" layoutX="10.0" layoutY="10.0" spacing="50.0" GridPane.columnIndex="1">
                 <children>
-                    <Label text="Last Name:"/>
-                    <TextField fx:id="LastNameField"/>
+                    <Label text="Last Name:" />
+                    <TextField fx:id="LastNameField" />
                 </children>
             </HBox>
-            <HBox alignment="CENTER" layoutX="10.0" layoutY="10.0" spacing="50.0" GridPane.columnIndex="1"
-                  GridPane.rowIndex="1">
+            <HBox alignment="CENTER" layoutX="10.0" layoutY="10.0" spacing="50.0" GridPane.columnIndex="1" GridPane.rowIndex="1">
                 <children>
-                    <Label text="Student ID:"/>
-                    <TextField fx:id="IDField"/>
+                    <Label text="Student ID:" />
+                    <TextField fx:id="IDField" />
                 </children>
             </HBox>
             <HBox alignment="CENTER" layoutX="10.0" layoutY="10.0" spacing="50.0" GridPane.rowIndex="1">
                 <children>
-                    <Label text="Date of Birth:"/>
-                    <TextField fx:id="DOBField"/>
+                    <Label text="Date of Birth:" />
+                    <TextField fx:id="DOBField" />
                 </children>
             </HBox>
             <HBox GridPane.columnIndex="1" GridPane.rowIndex="2">
                 <children>
-                    <Button fx:id="SearchStudentButton" mnemonicParsing="false" onAction="#clickedSearchStudent"
-                            text="Search"/>
+                    <Button fx:id="SearchStudentButton" mnemonicParsing="false" onAction="#clickedSearchStudent" text="Search" />
                 </children>
             </HBox>
             <HBox alignment="TOP_RIGHT" GridPane.rowIndex="2">
                 <children>
-                    <Button fx:id="ClearButton" mnemonicParsing="false" text="Clear" onAction="#clickedClear"/>
+                    <Button fx:id="ClearButton" mnemonicParsing="false" onAction="#clickedClear" text="Clear" />
                 </children>
             </HBox>
         </children>
         <VBox.margin>
-            <Insets/>
+            <Insets />
         </VBox.margin>
     </GridPane>
-    <TableView fx:id="resultsTable">
-        <columns>
-            <TableColumn prefWidth="75.0" text="Student Name"/>
-            <TableColumn prefWidth="75.0" text="Student ID"/>
-            <TableColumn prefWidth="75.0" text="Date of Birth"/>
-        </columns>
-        <columnResizePolicy>
-            <TableView fx:constant="CONSTRAINED_RESIZE_POLICY"/>
-        </columnResizePolicy>
-    </TableView>
+   <GridPane>
+     <columnConstraints>
+       <ColumnConstraints hgrow="SOMETIMES" minWidth="10.0" prefWidth="100.0" />
+       <ColumnConstraints hgrow="SOMETIMES" minWidth="10.0" prefWidth="100.0" />
+         <ColumnConstraints hgrow="SOMETIMES" minWidth="10.0" prefWidth="100.0" />
+     </columnConstraints>
+     <rowConstraints>
+       <RowConstraints minHeight="10.0" prefHeight="30.0" vgrow="SOMETIMES" />
+       <RowConstraints minHeight="10.0" prefHeight="30.0" vgrow="SOMETIMES" />
+       <RowConstraints minHeight="10.0" prefHeight="30.0" vgrow="SOMETIMES" />
+     </rowConstraints>
+   </GridPane>
     <padding>
-        <Insets bottom="10.0" left="10.0" right="10.0" top="10.0"/>
+        <Insets bottom="10.0" left="10.0" right="10.0" top="10.0" />
     </padding>
 </VBox>
Index: SmartGrader/src/sample/SearchClassOverviewPane.fxml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n\r\n<?import javafx.geometry.Insets?>\r\n<?import javafx.scene.control.*?>\r\n<?import javafx.scene.image.Image?>\r\n<?import javafx.scene.image.ImageView?>\r\n<?import javafx.scene.layout.*?>\r\n<VBox xmlns:fx=\"http://javafx.com/fxml/1\" alignment=\"CENTER\" BorderPane.alignment=\"CENTER\" spacing=\"30.0\"\r\n      style=\"-fx-background-color: #546C6E;\" fillWidth=\"true\" xmlns=\"http://javafx.com/javafx/10.0.2-internal\"\r\n      fx:controller=\"sample.SearchClassOverviewPane\">\r\n    <HBox>\r\n        <children>\r\n            <Label text=\"Search Student\"/>\r\n            <Region HBox.hgrow=\"ALWAYS\"/>\r\n            <Button fx:id=\"xButtton\" onAction=\"#xButtonClicked\" maxHeight=\"31.0\" maxWidth=\"33.0\" mnemonicParsing=\"false\"\r\n                    prefHeight=\"20.0\" prefWidth=\"20.0\" style=\"-fx-background-color: #324748;\">\r\n                <graphic>\r\n                    <ImageView fitHeight=\"20.0\" fitWidth=\"20.0\" pickOnBounds=\"true\" preserveRatio=\"true\">\r\n                        <image>\r\n                            <Image url=\"@../thumbnails/XIcon.png\"/>\r\n                        </image>\r\n                    </ImageView>\r\n                </graphic>\r\n                <padding>\r\n                    <Insets bottom=\"2.5\" left=\"2.5\" right=\"2.5\" top=\"2.5\"/>\r\n                </padding>\r\n            </Button>\r\n        </children>\r\n    </HBox>\r\n    <GridPane hgap=\"30.0\" prefHeight=\"179.0\" prefWidth=\"626.0\" vgap=\"30.0\">\r\n        <columnConstraints>\r\n            <ColumnConstraints hgrow=\"SOMETIMES\" minWidth=\"10.0\" prefWidth=\"100.0\"/>\r\n            <ColumnConstraints hgrow=\"SOMETIMES\" minWidth=\"10.0\" prefWidth=\"100.0\"/>\r\n        </columnConstraints>\r\n        <rowConstraints>\r\n            <RowConstraints minHeight=\"10.0\" prefHeight=\"30.0\" vgrow=\"SOMETIMES\"/>\r\n            <RowConstraints minHeight=\"10.0\" prefHeight=\"30.0\" vgrow=\"SOMETIMES\"/>\r\n            <RowConstraints minHeight=\"10.0\" prefHeight=\"30.0\" vgrow=\"SOMETIMES\"/>\r\n        </rowConstraints>\r\n        <children>\r\n            <HBox alignment=\"CENTER\" spacing=\"50.0\">\r\n                <children>\r\n                    <Label text=\"First Name:\"/>\r\n                    <TextField fx:id=\"FirstNameField\"/>\r\n                </children>\r\n                <GridPane.margin>\r\n                    <Insets top=\"5.0\"/>\r\n                </GridPane.margin>\r\n            </HBox>\r\n            <HBox alignment=\"CENTER\" layoutX=\"10.0\" layoutY=\"10.0\" spacing=\"50.0\" GridPane.columnIndex=\"1\">\r\n                <children>\r\n                    <Label text=\"Last Name:\"/>\r\n                    <TextField fx:id=\"LastNameField\"/>\r\n                </children>\r\n            </HBox>\r\n            <HBox alignment=\"CENTER\" layoutX=\"10.0\" layoutY=\"10.0\" spacing=\"50.0\" GridPane.columnIndex=\"1\"\r\n                  GridPane.rowIndex=\"1\">\r\n                <children>\r\n                    <Label text=\"Student ID:\"/>\r\n                    <TextField fx:id=\"IDField\"/>\r\n                </children>\r\n            </HBox>\r\n            <HBox alignment=\"CENTER\" layoutX=\"10.0\" layoutY=\"10.0\" spacing=\"50.0\" GridPane.rowIndex=\"1\">\r\n                <children>\r\n                    <Label text=\"Date of Birth:\"/>\r\n                    <TextField fx:id=\"DOBField\"/>\r\n                </children>\r\n            </HBox>\r\n            <HBox GridPane.columnIndex=\"1\" GridPane.rowIndex=\"2\">\r\n                <children>\r\n                    <Button fx:id=\"SearchStudentButton\" mnemonicParsing=\"false\" onAction=\"#clickedSearchStudent\"\r\n                            text=\"Search\"/>\r\n                </children>\r\n            </HBox>\r\n            <HBox alignment=\"TOP_RIGHT\" GridPane.rowIndex=\"2\">\r\n                <children>\r\n                    <Button fx:id=\"ClearButton\" mnemonicParsing=\"false\" text=\"Clear\" onAction=\"#clickedClear\"/>\r\n                </children>\r\n            </HBox>\r\n        </children>\r\n        <VBox.margin>\r\n            <Insets/>\r\n        </VBox.margin>\r\n    </GridPane>\r\n    <TableView fx:id=\"resultsTable\">\r\n        <columns>\r\n            <TableColumn prefWidth=\"75.0\" text=\"Student Name\"/>\r\n            <TableColumn prefWidth=\"75.0\" text=\"Student ID\"/>\r\n            <TableColumn prefWidth=\"75.0\" text=\"Date of Birth\"/>\r\n        </columns>\r\n        <columnResizePolicy>\r\n            <TableView fx:constant=\"CONSTRAINED_RESIZE_POLICY\"/>\r\n        </columnResizePolicy>\r\n    </TableView>\r\n    <padding>\r\n        <Insets bottom=\"10.0\" left=\"10.0\" right=\"10.0\" top=\"10.0\"/>\r\n    </padding>\r\n</VBox>\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- SmartGrader/src/sample/SearchClassOverviewPane.fxml	(revision ae728f295575a6196c7ae4f7b2bca12d2f82d71d)
+++ SmartGrader/src/sample/SearchClassOverviewPane.fxml	(date 1588132577957)
@@ -1,98 +1,95 @@
 <?xml version="1.0" encoding="UTF-8"?>
 
-<?import javafx.geometry.Insets?>
+<?import javafx.geometry.*?>
 <?import javafx.scene.control.*?>
-<?import javafx.scene.image.Image?>
-<?import javafx.scene.image.ImageView?>
+<?import javafx.scene.image.*?>
 <?import javafx.scene.layout.*?>
-<VBox xmlns:fx="http://javafx.com/fxml/1" alignment="CENTER" BorderPane.alignment="CENTER" spacing="30.0"
-      style="-fx-background-color: #546C6E;" fillWidth="true" xmlns="http://javafx.com/javafx/10.0.2-internal"
-      fx:controller="sample.SearchClassOverviewPane">
+
+<VBox alignment="CENTER" fillWidth="true" spacing="30.0" style="-fx-background-color: #546C6E;" BorderPane.alignment="CENTER" xmlns="http://javafx.com/javafx/10.0.2-internal" xmlns:fx="http://javafx.com/fxml/1" fx:controller="sample.SearchClassOverviewPane">
     <HBox>
         <children>
-            <Label text="Search Student"/>
-            <Region HBox.hgrow="ALWAYS"/>
-            <Button fx:id="xButtton" onAction="#xButtonClicked" maxHeight="31.0" maxWidth="33.0" mnemonicParsing="false"
-                    prefHeight="20.0" prefWidth="20.0" style="-fx-background-color: #324748;">
+            <Label text="Search Student" />
+            <Region HBox.hgrow="ALWAYS" />
+            <Button maxHeight="31.0" maxWidth="33.0" mnemonicParsing="false" onAction="#xButtonClicked" prefHeight="20.0" prefWidth="20.0" style="-fx-background-color: #324748;" fx:id="xButtton">
                 <graphic>
                     <ImageView fitHeight="20.0" fitWidth="20.0" pickOnBounds="true" preserveRatio="true">
                         <image>
-                            <Image url="@../thumbnails/XIcon.png"/>
+                            <Image url="@../thumbnails/XIcon.png" />
                         </image>
                     </ImageView>
                 </graphic>
                 <padding>
-                    <Insets bottom="2.5" left="2.5" right="2.5" top="2.5"/>
+                    <Insets bottom="2.5" left="2.5" right="2.5" top="2.5" />
                 </padding>
             </Button>
         </children>
     </HBox>
     <GridPane hgap="30.0" prefHeight="179.0" prefWidth="626.0" vgap="30.0">
         <columnConstraints>
-            <ColumnConstraints hgrow="SOMETIMES" minWidth="10.0" prefWidth="100.0"/>
-            <ColumnConstraints hgrow="SOMETIMES" minWidth="10.0" prefWidth="100.0"/>
+            <ColumnConstraints hgrow="SOMETIMES" minWidth="10.0" prefWidth="100.0" />
+            <ColumnConstraints hgrow="SOMETIMES" minWidth="10.0" prefWidth="100.0" />
         </columnConstraints>
         <rowConstraints>
-            <RowConstraints minHeight="10.0" prefHeight="30.0" vgrow="SOMETIMES"/>
-            <RowConstraints minHeight="10.0" prefHeight="30.0" vgrow="SOMETIMES"/>
-            <RowConstraints minHeight="10.0" prefHeight="30.0" vgrow="SOMETIMES"/>
+            <RowConstraints minHeight="10.0" prefHeight="30.0" vgrow="SOMETIMES" />
+            <RowConstraints minHeight="10.0" prefHeight="30.0" vgrow="SOMETIMES" />
+            <RowConstraints minHeight="10.0" prefHeight="30.0" vgrow="SOMETIMES" />
         </rowConstraints>
         <children>
             <HBox alignment="CENTER" spacing="50.0">
                 <children>
-                    <Label text="First Name:"/>
-                    <TextField fx:id="FirstNameField"/>
+                    <Label text="First Name:" />
+                    <TextField fx:id="FirstNameField" />
                 </children>
                 <GridPane.margin>
-                    <Insets top="5.0"/>
+                    <Insets top="5.0" />
                 </GridPane.margin>
             </HBox>
             <HBox alignment="CENTER" layoutX="10.0" layoutY="10.0" spacing="50.0" GridPane.columnIndex="1">
                 <children>
-                    <Label text="Last Name:"/>
-                    <TextField fx:id="LastNameField"/>
+                    <Label text="Last Name:" />
+                    <TextField fx:id="LastNameField" />
                 </children>
             </HBox>
-            <HBox alignment="CENTER" layoutX="10.0" layoutY="10.0" spacing="50.0" GridPane.columnIndex="1"
-                  GridPane.rowIndex="1">
+            <HBox alignment="CENTER" layoutX="10.0" layoutY="10.0" spacing="50.0" GridPane.columnIndex="1" GridPane.rowIndex="1">
                 <children>
-                    <Label text="Student ID:"/>
-                    <TextField fx:id="IDField"/>
+                    <Label text="Student ID:" />
+                    <TextField fx:id="IDField" />
                 </children>
             </HBox>
             <HBox alignment="CENTER" layoutX="10.0" layoutY="10.0" spacing="50.0" GridPane.rowIndex="1">
                 <children>
-                    <Label text="Date of Birth:"/>
-                    <TextField fx:id="DOBField"/>
+                    <Label text="Date of Birth:" />
+                    <TextField fx:id="DOBField" />
                 </children>
             </HBox>
             <HBox GridPane.columnIndex="1" GridPane.rowIndex="2">
                 <children>
-                    <Button fx:id="SearchStudentButton" mnemonicParsing="false" onAction="#clickedSearchStudent"
-                            text="Search"/>
+                    <Button fx:id="SearchStudentButton" mnemonicParsing="false" onAction="#clickedSearchStudent" text="Search" />
                 </children>
             </HBox>
             <HBox alignment="TOP_RIGHT" GridPane.rowIndex="2">
                 <children>
-                    <Button fx:id="ClearButton" mnemonicParsing="false" text="Clear" onAction="#clickedClear"/>
+                    <Button fx:id="ClearButton" mnemonicParsing="false" onAction="#clickedClear" text="Clear" />
                 </children>
             </HBox>
         </children>
         <VBox.margin>
-            <Insets/>
+            <Insets />
         </VBox.margin>
     </GridPane>
-    <TableView fx:id="resultsTable">
-        <columns>
-            <TableColumn prefWidth="75.0" text="Student Name"/>
-            <TableColumn prefWidth="75.0" text="Student ID"/>
-            <TableColumn prefWidth="75.0" text="Date of Birth"/>
-        </columns>
-        <columnResizePolicy>
-            <TableView fx:constant="CONSTRAINED_RESIZE_POLICY"/>
-        </columnResizePolicy>
-    </TableView>
+   <GridPane>
+     <columnConstraints>
+       <ColumnConstraints hgrow="SOMETIMES" minWidth="10.0" prefWidth="100.0" />
+       <ColumnConstraints hgrow="SOMETIMES" minWidth="10.0" prefWidth="100.0" />
+         <ColumnConstraints hgrow="SOMETIMES" minWidth="10.0" prefWidth="100.0" />
+     </columnConstraints>
+     <rowConstraints>
+       <RowConstraints minHeight="10.0" prefHeight="30.0" vgrow="SOMETIMES" />
+       <RowConstraints minHeight="10.0" prefHeight="30.0" vgrow="SOMETIMES" />
+       <RowConstraints minHeight="10.0" prefHeight="30.0" vgrow="SOMETIMES" />
+     </rowConstraints>
+   </GridPane>
     <padding>
-        <Insets bottom="10.0" left="10.0" right="10.0" top="10.0"/>
+        <Insets bottom="10.0" left="10.0" right="10.0" top="10.0" />
     </padding>
 </VBox>
Index: out/production/COMP380_Project/sample/DefaultClassOverviewPane.fxml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n\r\n<?import javafx.geometry.*?>\r\n<?import javafx.scene.control.*?>\r\n<?import javafx.scene.layout.*?>\r\n\r\n<VBox fx:id=\"mainBox\" stylesheets=\"@../TealTeam.css\" BorderPane.alignment=\"CENTER\" xmlns=\"http://javafx.com/javafx/10.0.2-internal\" xmlns:fx=\"http://javafx.com/fxml/1\" fx:controller=\"sample.DefaultClassOverviewPane\">\r\n   <ScrollPane fx:id=\"scrollPane\" VBox.vgrow=\"ALWAYS\">\r\n      <content>\r\n         <GridPane fx:id=\"theGrid\" hgap=\"1.0\" vgap=\"1.0\">\r\n           <columnConstraints>\r\n             <ColumnConstraints hgrow=\"SOMETIMES\" minWidth=\"10.0\" prefWidth=\"100.0\" />\r\n             <ColumnConstraints hgrow=\"SOMETIMES\" minWidth=\"10.0\" prefWidth=\"100.0\" />\r\n           </columnConstraints>\r\n           <rowConstraints>\r\n             <RowConstraints minHeight=\"10.0\" prefHeight=\"30.0\" vgrow=\"SOMETIMES\" />\r\n             <RowConstraints minHeight=\"10.0\" prefHeight=\"30.0\" vgrow=\"SOMETIMES\" />\r\n             <RowConstraints minHeight=\"10.0\" prefHeight=\"30.0\" vgrow=\"SOMETIMES\" />\r\n           </rowConstraints>\r\n            <padding>\r\n               <Insets bottom=\"1.0\" left=\"1.0\" right=\"1.0\" top=\"1.0\" />\r\n            </padding>\r\n         </GridPane>\r\n      </content>\r\n   </ScrollPane>\r\n    <HBox fx:id=\"buttonBox\" alignment=\"CENTER\" spacing=\"20.0\">\r\n        <Button fx:id=\"AddStudentButton\" onAction=\"#clickedAddStudent\" text=\"Add Student\" />\r\n        <Button fx:id=\"AddAssignmentButton\" onAction=\"#clickedAddAssignment\" text=\"Add Assignment\" />\r\n        <padding>\r\n            <Insets bottom=\"10.0\" left=\"10.0\" right=\"10.0\" top=\"10.0\" />\r\n        </padding>\r\n    </HBox>\r\n</VBox>\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- out/production/COMP380_Project/sample/DefaultClassOverviewPane.fxml	(revision ae728f295575a6196c7ae4f7b2bca12d2f82d71d)
+++ out/production/COMP380_Project/sample/DefaultClassOverviewPane.fxml	(date 1588028386689)
@@ -2,6 +2,7 @@
 
 <?import javafx.geometry.*?>
 <?import javafx.scene.control.*?>
+<?import javafx.scene.image.*?>
 <?import javafx.scene.layout.*?>
 
 <VBox fx:id="mainBox" stylesheets="@../TealTeam.css" BorderPane.alignment="CENTER" xmlns="http://javafx.com/javafx/10.0.2-internal" xmlns:fx="http://javafx.com/fxml/1" fx:controller="sample.DefaultClassOverviewPane">
@@ -26,6 +27,19 @@
     <HBox fx:id="buttonBox" alignment="CENTER" spacing="20.0">
         <Button fx:id="AddStudentButton" onAction="#clickedAddStudent" text="Add Student" />
         <Button fx:id="AddAssignmentButton" onAction="#clickedAddAssignment" text="Add Assignment" />
+      <Region HBox.hgrow="ALWAYS" />
+      <Button mnemonicParsing="false" onAction="#clickedRefresh">
+         <graphic>
+            <ImageView fitHeight="40.0" fitWidth="40.0" pickOnBounds="true" preserveRatio="true">
+               <image>
+                  <Image url="@../thumbnails/reloadIcon.png" />
+               </image>
+            </ImageView>
+         </graphic>
+         <padding>
+            <Insets bottom="1.0" left="1.0" right="1.0" top="1.0" />
+         </padding>
+      </Button>
         <padding>
             <Insets bottom="10.0" left="10.0" right="10.0" top="10.0" />
         </padding>
Index: SmartGrader/src/sample/Weights.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package sample;\r\n\r\nimport org.apache.poi.EncryptedDocumentException;\r\nimport org.apache.poi.openxml4j.exceptions.InvalidFormatException;\r\n\r\nimport java.io.IOException;\r\n\r\npublic class Weights {\r\n    private final ExcelFileManager userFile;\r\n\r\n    public Weights(String userEmail) {\r\n        userFile = new ExcelFileManager(userEmail + \".xlsx\");\r\n    }\r\n\r\n    private int get_Cell_Of_This_Weight(String courseName, String weightName) throws IOException {\r\n        for (int i = 0; i <= userFile.get_Last_Cell_Of_Row(courseName, 1); i++) {\r\n            if (weightName.equalsIgnoreCase(userFile.get_Data_At(courseName, 1, i))) {\r\n                return i;\r\n            }\r\n\t\t}\r\n\t\treturn -1; //This is when the weight does not exists in the list.\r\n\t}\r\n\t\r\n\tprivate void shift_Columns(String courseName, int rowIndex, int cellIndex) throws IOException, EncryptedDocumentException, InvalidFormatException {\r\n\t\tint lastCellInThisRow = userFile.get_Last_Cell_Of_Row(courseName, rowIndex);\r\n\t\tfor (int i = cellIndex; i < lastCellInThisRow - 1; i++) {\r\n\t\t\tString nextColumnData = userFile.get_Data_At(courseName, rowIndex, i + 1);\r\n\t\t\tuserFile.update_Cell(nextColumnData, courseName, rowIndex, i);\r\n\t\t\tif (i + 1 == lastCellInThisRow - 1) {\r\n\t\t\t\tuserFile.delete_This_Cell(courseName, rowIndex, lastCellInThisRow - 1);\r\n\t\t\t}\r\n \t\t}\r\n\t}\r\n\t\r\n\tpublic boolean does_this_Weight_Exists(String courseName, String weightName) throws IOException {\r\n\t\tfor (int i = 0; i < userFile.get_Last_Cell_Of_Row(courseName, 1); i++) {\r\n\t\t\tif (weightName.equalsIgnoreCase(userFile.get_Data_At(courseName, 1, i))) {\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\t\r\n\tpublic void add_Weight(String courseName, String weightName, String weightPercentage) throws IOException {\r\n\t\tint lastCellInWeights = userFile.get_Last_Cell_Of_Row(courseName, 1);\r\n\t\tuserFile.update_Cell(weightName, courseName, 1, lastCellInWeights);\r\n\t\tuserFile.update_Cell(weightPercentage, courseName, 2, lastCellInWeights);\r\n\t}\r\n\t\r\n\tpublic void remove_Weight(String courseName, String weightName) throws IOException, EncryptedDocumentException, InvalidFormatException {\r\n\t\tint weightCell = get_Cell_Of_This_Weight(courseName, weightName);\r\n\t\tshift_Columns(courseName, 1, weightCell);//removes the name of the weight.\r\n\t\tshift_Columns(courseName, 2, weightCell);//removes the percentage of the weight.\r\n\t}\r\n\t\r\n\tpublic void edit_Weight(String courseName, String weightName, String newWeightPercentage) throws IOException {\r\n\t\tint weightCell = get_Cell_Of_This_Weight(courseName, weightName);\r\n\t\tuserFile.update_Cell(newWeightPercentage, courseName, 2, weightCell);//user should only be able to update the percentage, not the weight.\r\n\t}\r\n\t\r\n\tpublic int get_Total_Weight_Percentage(String courseName) throws IOException {\r\n\t\tint TotalPercentage = 0;\r\n\t\tfor(int i = 0; i < userFile.get_Last_Cell_Of_Row(courseName, 2); i++) {\r\n\t\t\tTotalPercentage = TotalPercentage + Integer.parseInt(userFile.get_Data_At(courseName, 2, i));\r\n\t\t}\r\n\t\treturn TotalPercentage;\r\n\t}\r\n\t\r\n\tpublic String load_Weight_Percentage(String courseName, String weightName) throws IOException {\r\n\t\tint weightCell = userFile.get_Last_Cell_Of_Row(courseName, 1);\r\n\t\treturn userFile.get_Data_At(courseName, 2, weightCell);\r\n\t}\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- SmartGrader/src/sample/Weights.java	(revision ae728f295575a6196c7ae4f7b2bca12d2f82d71d)
+++ SmartGrader/src/sample/Weights.java	(date 1588011704993)
@@ -1,22 +1,22 @@
 package sample;
 
+import java.io.IOException;
+
 import org.apache.poi.EncryptedDocumentException;
 import org.apache.poi.openxml4j.exceptions.InvalidFormatException;
 
-import java.io.IOException;
-
 public class Weights {
-    private final ExcelFileManager userFile;
-
-    public Weights(String userEmail) {
-        userFile = new ExcelFileManager(userEmail + ".xlsx");
-    }
-
-    private int get_Cell_Of_This_Weight(String courseName, String weightName) throws IOException {
-        for (int i = 0; i <= userFile.get_Last_Cell_Of_Row(courseName, 1); i++) {
-            if (weightName.equalsIgnoreCase(userFile.get_Data_At(courseName, 1, i))) {
-                return i;
-            }
+	private ExcelFileManager userFile;
+	
+	public Weights(String userEmail) {
+		userFile = new ExcelFileManager(userEmail + ".xlsx");
+	}
+	
+	private int get_Cell_Of_This_Weight(String courseName, String weightName) throws IOException {
+		for (int i = 0; i <= userFile.get_Last_Cell_Of_Row(courseName, 1); i++) {
+			if(weightName.equalsIgnoreCase(userFile.get_Data_At(courseName, 1, i))) {
+				return i;
+			}
 		}
 		return -1; //This is when the weight does not exists in the list.
 	}
@@ -67,7 +67,7 @@
 	}
 	
 	public String load_Weight_Percentage(String courseName, String weightName) throws IOException {
-		int weightCell = userFile.get_Last_Cell_Of_Row(courseName, 1);
+		int weightCell = get_Cell_Of_This_Weight(courseName, weightName);
 		return userFile.get_Data_At(courseName, 2, weightCell);
 	}
 }
Index: SmartGrader/src/sample/ClassOverview.fxml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n\r\n<?import javafx.geometry.*?>\r\n<?import javafx.scene.control.*?>\r\n<?import javafx.scene.image.*?>\r\n<?import javafx.scene.layout.*?>\r\n<BorderPane xmlns:fx=\"http://javafx.com/fxml/1\" prefHeight=\"1000\" prefWidth=\"1000\" stylesheets=\"@../TealTeam.css\"\r\n            xmlns=\"http://javafx.com/javafx/10.0.2-internal\" fx:controller=\"sample.ClassOverview\">\r\n   <top>\r\n      <HBox alignment=\"CENTER_LEFT\" spacing=\"50.0\" BorderPane.alignment=\"CENTER\">\r\n         <children>\r\n            <Button fx:id=\"HomeButton\" maxHeight=\"-Infinity\" maxWidth=\"-Infinity\" mnemonicParsing=\"false\"\r\n                    onAction=\"#homeButtonClicked\" prefHeight=\"100.0\" prefWidth=\"125.0\"\r\n                    stylesheets=\"@../SpecialtyButtons.css\">\r\n               <graphic>\r\n                  <ImageView pickOnBounds=\"true\" preserveRatio=\"true\">\r\n                     <image>\r\n                        <Image url=\"@../thumbnails/HomeIcon.png\"/>\r\n                     </image>\r\n                  </ImageView>\r\n               </graphic>\r\n               <padding>\r\n                  <Insets bottom=\"1.0\" left=\"1.0\" right=\"1.0\" top=\"1.0\"/>\r\n               </padding>\r\n               <HBox.margin>\r\n                  <Insets bottom=\"10.0\" top=\"10.0\"/>\r\n               </HBox.margin>\r\n            </Button>\r\n            <Button fx:id=\"SearchButton\" alignment=\"CENTER\" contentDisplay=\"CENTER\" graphicTextGap=\"0.0\"\r\n                    mnemonicParsing=\"false\" onAction=\"#searchButtonClicked\" prefHeight=\"100.0\" prefWidth=\"125.0\"\r\n                    stylesheets=\"@../SpecialtyButtons.css\">\r\n               <graphic>\r\n                  <ImageView pickOnBounds=\"true\" preserveRatio=\"true\">\r\n                     <image>\r\n                        <Image url=\"@../thumbnails/SearchIcon.png\"/>\r\n                     </image>\r\n                  </ImageView>\r\n               </graphic>\r\n               <padding>\r\n                  <Insets bottom=\"1.0\" left=\"1.0\" right=\"1.0\" top=\"1.0\"/>\r\n               </padding>\r\n            </Button>\r\n            <Button fx:id=\"SaveButton\" graphicTextGap=\"0.0\" mnemonicParsing=\"false\" onAction=\"#saveButtonClicked\"\r\n                    prefHeight=\"100.0\" prefWidth=\"125.0\" stylesheets=\"@../SpecialtyButtons.css\">\r\n               <graphic>\r\n                  <ImageView pickOnBounds=\"true\" preserveRatio=\"true\">\r\n                     <image>\r\n                        <Image url=\"@../thumbnails/SaveIcon.png\"/>\r\n                     </image>\r\n                  </ImageView>\r\n               </graphic>\r\n               <padding>\r\n                  <Insets bottom=\"1.0\" left=\"1.0\" right=\"1.0\" top=\"1.0\"/>\r\n               </padding>\r\n            </Button>\r\n            <Button fx:id=\"PrintButton\" mnemonicParsing=\"false\" onAction=\"#printButtonClicked\" prefHeight=\"100.0\"\r\n                    prefWidth=\"125.0\" stylesheets=\"@../SpecialtyButtons.css\">\r\n               <graphic>\r\n                  <ImageView pickOnBounds=\"true\" preserveRatio=\"true\">\r\n                     <image>\r\n                        <Image url=\"@../thumbnails/PrintIcon.png\"/>\r\n                     </image>\r\n                  </ImageView>\r\n               </graphic>\r\n               <padding>\r\n                  <Insets bottom=\"1.0\" left=\"1.0\" right=\"1.0\" top=\"1.0\"/>\r\n               </padding>\r\n            </Button>\r\n            <Button fx:id=\"DeleteButton\" mnemonicParsing=\"false\" onAction=\"#deleteButtonClicked\" prefHeight=\"100.0\"\r\n                    prefWidth=\"125.0\" stylesheets=\"@../SpecialtyButtons.css\">\r\n               <graphic>\r\n                  <ImageView pickOnBounds=\"true\" preserveRatio=\"true\">\r\n                     <image>\r\n                        <Image url=\"@../thumbnails/DeleteIcon.png\"/>\r\n                     </image>\r\n                  </ImageView>\r\n               </graphic>\r\n               <padding>\r\n                  <Insets bottom=\"1.0\" left=\"1.0\" right=\"1.0\" top=\"1.0\"/>\r\n               </padding>\r\n            </Button>\r\n            <VBox alignment=\"CENTER\" prefHeight=\"50.0\" prefWidth=\"100.0\" spacing=\"20.0\" HBox.hgrow=\"ALWAYS\">\r\n               <children>\r\n                  <Label fx:id=\"classNameLabel\" text=\"Label\"/>\r\n                  <Label fx:id=\"courseNumberLabel\" text=\"Label\"/>\r\n               </children>\r\n            </VBox>\r\n         </children>\r\n         <BorderPane.margin>\r\n            <Insets bottom=\"15.0\" left=\"30.0\" top=\"15.0\"/>\r\n         </BorderPane.margin>\r\n      </HBox>\r\n   </top>\r\n   <left>\r\n      <VBox alignment=\"TOP_CENTER\" spacing=\"50.0\" BorderPane.alignment=\"CENTER\">\r\n         <children>\r\n            <Button fx:id=\"CurveButton\" mnemonicParsing=\"false\" onAction=\"#curveButtonClicked\" prefHeight=\"100.0\"\r\n                    prefWidth=\"125.0\" stylesheets=\"@../SpecialtyButtons.css\">\r\n               <graphic>\r\n                  <ImageView pickOnBounds=\"true\" preserveRatio=\"true\">\r\n                     <image>\r\n                        <Image url=\"@../thumbnails/CurveIcon.png\"/>\r\n                     </image>\r\n                  </ImageView>\r\n               </graphic>\r\n               <padding>\r\n                  <Insets bottom=\"1.0\" left=\"1.0\" right=\"1.0\" top=\"1.0\"/>\r\n               </padding>\r\n            </Button>\r\n            <Button fx:id=\"WeightButton\" mnemonicParsing=\"false\" onAction=\"#weightButtonClicked\" prefHeight=\"100.0\"\r\n                    prefWidth=\"125.0\" stylesheets=\"@../SpecialtyButtons.css\">\r\n               <graphic>\r\n                  <ImageView pickOnBounds=\"true\" preserveRatio=\"true\">\r\n                     <image>\r\n                        <Image url=\"@../thumbnails/WeightIcon.png\"/>\r\n                     </image>\r\n                  </ImageView>\r\n               </graphic>\r\n               <padding>\r\n                  <Insets bottom=\"1.0\" left=\"1.0\" right=\"1.0\" top=\"1.0\"/>\r\n               </padding>\r\n            </Button>\r\n            <Button fx:id=\"GraphButton\" mnemonicParsing=\"false\" onAction=\"#graphButtonClicked\" prefHeight=\"100.0\"\r\n                    prefWidth=\"125.0\" stylesheets=\"@../SpecialtyButtons.css\">\r\n               <graphic>\r\n                  <ImageView pickOnBounds=\"true\" preserveRatio=\"true\">\r\n                     <image>\r\n                        <Image url=\"@../thumbnails/GraphIcon.png\"/>\r\n                     </image>\r\n                  </ImageView>\r\n               </graphic>\r\n               <padding>\r\n                  <Insets bottom=\"1.0\" left=\"1.0\" right=\"1.0\" top=\"1.0\"/>\r\n               </padding>\r\n            </Button>\r\n         </children>\r\n         <padding>\r\n            <Insets top=\"10.0\"/>\r\n         </padding>\r\n         <BorderPane.margin>\r\n            <Insets bottom=\"30.0\" left=\"30.0\" right=\"30.0\"/>\r\n         </BorderPane.margin>\r\n      </VBox>\r\n   </left>\r\n   <center>\r\n      <BorderPane fx:id=\"mainView\">\r\n         <center>\r\n            <fx:include fx:id=\"defaultClassOverviewPane\" source=\"DefaultClassOverviewPane.fxml\"/>\r\n         </center>\r\n         <padding>\r\n            <Insets bottom=\"10.0\" left=\"10.0\" right=\"10.0\"/>\r\n         </padding>\r\n      </BorderPane>\r\n   </center>\r\n</BorderPane>\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- SmartGrader/src/sample/ClassOverview.fxml	(revision ae728f295575a6196c7ae4f7b2bca12d2f82d71d)
+++ SmartGrader/src/sample/ClassOverview.fxml	(date 1588126455975)
@@ -4,151 +4,117 @@
 <?import javafx.scene.control.*?>
 <?import javafx.scene.image.*?>
 <?import javafx.scene.layout.*?>
-<BorderPane xmlns:fx="http://javafx.com/fxml/1" prefHeight="1000" prefWidth="1000" stylesheets="@../TealTeam.css"
-            xmlns="http://javafx.com/javafx/10.0.2-internal" fx:controller="sample.ClassOverview">
+
+<BorderPane prefHeight="1000" prefWidth="1000" stylesheets="@../TealTeam.css" xmlns="http://javafx.com/javafx/10.0.2-internal" xmlns:fx="http://javafx.com/fxml/1" fx:controller="sample.ClassOverview">
    <top>
       <HBox alignment="CENTER_LEFT" spacing="50.0" BorderPane.alignment="CENTER">
          <children>
-            <Button fx:id="HomeButton" maxHeight="-Infinity" maxWidth="-Infinity" mnemonicParsing="false"
-                    onAction="#homeButtonClicked" prefHeight="100.0" prefWidth="125.0"
-                    stylesheets="@../SpecialtyButtons.css">
+            <Button fx:id="HomeButton" maxHeight="-Infinity" maxWidth="-Infinity" mnemonicParsing="false" onAction="#homeButtonClicked" prefHeight="100.0" prefWidth="125.0" stylesheets="@../SpecialtyButtons.css">
                <graphic>
                   <ImageView pickOnBounds="true" preserveRatio="true">
                      <image>
-                        <Image url="@../thumbnails/HomeIcon.png"/>
+                        <Image url="@../thumbnails/HomeIcon.png" />
                      </image>
                   </ImageView>
                </graphic>
                <padding>
-                  <Insets bottom="1.0" left="1.0" right="1.0" top="1.0"/>
+                  <Insets bottom="1.0" left="1.0" right="1.0" top="1.0" />
                </padding>
                <HBox.margin>
-                  <Insets bottom="10.0" top="10.0"/>
+                  <Insets bottom="10.0" top="10.0" />
                </HBox.margin>
             </Button>
-            <Button fx:id="SearchButton" alignment="CENTER" contentDisplay="CENTER" graphicTextGap="0.0"
-                    mnemonicParsing="false" onAction="#searchButtonClicked" prefHeight="100.0" prefWidth="125.0"
-                    stylesheets="@../SpecialtyButtons.css">
+            <Button fx:id="SearchButton" alignment="CENTER" contentDisplay="CENTER" graphicTextGap="0.0" mnemonicParsing="false" onAction="#searchButtonClicked" prefHeight="100.0" prefWidth="125.0" stylesheets="@../SpecialtyButtons.css">
                <graphic>
                   <ImageView pickOnBounds="true" preserveRatio="true">
                      <image>
-                        <Image url="@../thumbnails/SearchIcon.png"/>
-                     </image>
-                  </ImageView>
-               </graphic>
-               <padding>
-                  <Insets bottom="1.0" left="1.0" right="1.0" top="1.0"/>
-               </padding>
-            </Button>
-            <Button fx:id="SaveButton" graphicTextGap="0.0" mnemonicParsing="false" onAction="#saveButtonClicked"
-                    prefHeight="100.0" prefWidth="125.0" stylesheets="@../SpecialtyButtons.css">
-               <graphic>
-                  <ImageView pickOnBounds="true" preserveRatio="true">
-                     <image>
-                        <Image url="@../thumbnails/SaveIcon.png"/>
+                        <Image url="@../thumbnails/SearchIcon.png" />
                      </image>
                   </ImageView>
                </graphic>
                <padding>
-                  <Insets bottom="1.0" left="1.0" right="1.0" top="1.0"/>
+                  <Insets bottom="1.0" left="1.0" right="1.0" top="1.0" />
                </padding>
             </Button>
-            <Button fx:id="PrintButton" mnemonicParsing="false" onAction="#printButtonClicked" prefHeight="100.0"
-                    prefWidth="125.0" stylesheets="@../SpecialtyButtons.css">
+            <Button fx:id="PrintButton" mnemonicParsing="false" onAction="#printButtonClicked" prefHeight="100.0" prefWidth="125.0" stylesheets="@../SpecialtyButtons.css">
                <graphic>
                   <ImageView pickOnBounds="true" preserveRatio="true">
                      <image>
-                        <Image url="@../thumbnails/PrintIcon.png"/>
-                     </image>
-                  </ImageView>
-               </graphic>
-               <padding>
-                  <Insets bottom="1.0" left="1.0" right="1.0" top="1.0"/>
-               </padding>
-            </Button>
-            <Button fx:id="DeleteButton" mnemonicParsing="false" onAction="#deleteButtonClicked" prefHeight="100.0"
-                    prefWidth="125.0" stylesheets="@../SpecialtyButtons.css">
-               <graphic>
-                  <ImageView pickOnBounds="true" preserveRatio="true">
-                     <image>
-                        <Image url="@../thumbnails/DeleteIcon.png"/>
+                        <Image url="@../thumbnails/PrintIcon.png" />
                      </image>
                   </ImageView>
                </graphic>
                <padding>
-                  <Insets bottom="1.0" left="1.0" right="1.0" top="1.0"/>
+                  <Insets bottom="1.0" left="1.0" right="1.0" top="1.0" />
                </padding>
             </Button>
             <VBox alignment="CENTER" prefHeight="50.0" prefWidth="100.0" spacing="20.0" HBox.hgrow="ALWAYS">
                <children>
-                  <Label fx:id="classNameLabel" text="Label"/>
-                  <Label fx:id="courseNumberLabel" text="Label"/>
+                  <Label fx:id="classNameLabel" text="Label" />
+                  <Label fx:id="courseNumberLabel" text="Label" />
                </children>
             </VBox>
          </children>
          <BorderPane.margin>
-            <Insets bottom="15.0" left="30.0" top="15.0"/>
+            <Insets bottom="15.0" left="30.0" top="15.0" />
          </BorderPane.margin>
       </HBox>
    </top>
    <left>
       <VBox alignment="TOP_CENTER" spacing="50.0" BorderPane.alignment="CENTER">
          <children>
-            <Button fx:id="CurveButton" mnemonicParsing="false" onAction="#curveButtonClicked" prefHeight="100.0"
-                    prefWidth="125.0" stylesheets="@../SpecialtyButtons.css">
+            <Button fx:id="CurveButton" mnemonicParsing="false" onAction="#curveButtonClicked" prefHeight="100.0" prefWidth="125.0" stylesheets="@../SpecialtyButtons.css">
                <graphic>
                   <ImageView pickOnBounds="true" preserveRatio="true">
                      <image>
-                        <Image url="@../thumbnails/CurveIcon.png"/>
+                        <Image url="@../thumbnails/CurveIcon.png" />
                      </image>
                   </ImageView>
                </graphic>
                <padding>
-                  <Insets bottom="1.0" left="1.0" right="1.0" top="1.0"/>
+                  <Insets bottom="1.0" left="1.0" right="1.0" top="1.0" />
                </padding>
             </Button>
-            <Button fx:id="WeightButton" mnemonicParsing="false" onAction="#weightButtonClicked" prefHeight="100.0"
-                    prefWidth="125.0" stylesheets="@../SpecialtyButtons.css">
+            <Button fx:id="WeightButton" mnemonicParsing="false" onAction="#weightButtonClicked" prefHeight="100.0" prefWidth="125.0" stylesheets="@../SpecialtyButtons.css">
                <graphic>
                   <ImageView pickOnBounds="true" preserveRatio="true">
                      <image>
-                        <Image url="@../thumbnails/WeightIcon.png"/>
+                        <Image url="@../thumbnails/WeightIcon.png" />
                      </image>
                   </ImageView>
                </graphic>
                <padding>
-                  <Insets bottom="1.0" left="1.0" right="1.0" top="1.0"/>
+                  <Insets bottom="1.0" left="1.0" right="1.0" top="1.0" />
                </padding>
             </Button>
-            <Button fx:id="GraphButton" mnemonicParsing="false" onAction="#graphButtonClicked" prefHeight="100.0"
-                    prefWidth="125.0" stylesheets="@../SpecialtyButtons.css">
+            <Button fx:id="GraphButton" mnemonicParsing="false" onAction="#graphButtonClicked" prefHeight="100.0" prefWidth="125.0" stylesheets="@../SpecialtyButtons.css">
                <graphic>
                   <ImageView pickOnBounds="true" preserveRatio="true">
                      <image>
-                        <Image url="@../thumbnails/GraphIcon.png"/>
+                        <Image url="@../thumbnails/GraphIcon.png" />
                      </image>
                   </ImageView>
                </graphic>
                <padding>
-                  <Insets bottom="1.0" left="1.0" right="1.0" top="1.0"/>
+                  <Insets bottom="1.0" left="1.0" right="1.0" top="1.0" />
                </padding>
             </Button>
          </children>
          <padding>
-            <Insets top="10.0"/>
+            <Insets top="10.0" />
          </padding>
          <BorderPane.margin>
-            <Insets bottom="30.0" left="30.0" right="30.0"/>
+            <Insets bottom="30.0" left="30.0" right="30.0" />
          </BorderPane.margin>
       </VBox>
    </left>
    <center>
       <BorderPane fx:id="mainView">
          <center>
-            <fx:include fx:id="defaultClassOverviewPane" source="DefaultClassOverviewPane.fxml"/>
+            <fx:include fx:id="defaultClassOverviewPane" source="DefaultClassOverviewPane.fxml" />
          </center>
          <padding>
-            <Insets bottom="10.0" left="10.0" right="10.0"/>
+            <Insets bottom="10.0" left="10.0" right="10.0" />
          </padding>
       </BorderPane>
    </center>
Index: SmartGrader/src/sample/WeightPage.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package sample;\r\n\r\nimport javafx.event.ActionEvent;\r\nimport javafx.scene.Node;\r\nimport javafx.scene.control.*;\r\nimport javafx.scene.input.KeyEvent;\r\nimport javafx.scene.paint.Color;\r\nimport javafx.stage.Stage;\r\n\r\nimport java.io.IOException;\r\n\r\npublic class WeightPage {\r\n\r\n    public TextField QuizWeightTextField;\r\n    public TextField HomeworkWeightTextField;\r\n    public TextField ProjectWeightTextField;\r\n    public TextField ExamWeightTextField;\r\n    public Label TotalPercentageLabel;\r\n    public Button CancelButton;\r\n    public Button SaveButton;\r\n\r\n    private String userEmail, courseName;\r\n\r\n    public void clickedSave(ActionEvent event) throws IOException {\r\n        try {\r\n            if (TotalPercentageLabel.getText().equals(\"Total Percentage: 100 %\")) {\r\n\r\n                Weights weights = new Weights(getUserEmail());\r\n\r\n                weights.edit_Weight(getCourseName(), \"Quiz\", QuizWeightTextField.getText());\r\n                weights.edit_Weight(getCourseName(), \"Homework\", HomeworkWeightTextField.getText());\r\n                weights.edit_Weight(getCourseName(), \"Exam\", ExamWeightTextField.getText());\r\n                weights.edit_Weight(getCourseName(), \"Projects\", ProjectWeightTextField.getText());\r\n\r\n            } else {\r\n                //Show a message that percentage is not 100\r\n                Alert alert = new Alert(Alert.AlertType.ERROR, \"Percentage must equal 100.\", ButtonType.OK);\r\n                DialogPane dialogPane = alert.getDialogPane();\r\n                dialogPane.getStylesheets().add(getClass().getResource(\"/TealTeam.css\").toExternalForm());\r\n                alert.showAndWait();\r\n            }\r\n        } catch (IOException e) {\r\n            e.printStackTrace();\r\n        }\r\n\r\n    }\r\n\r\n    public void clickedCancel(ActionEvent event) {\r\n        //close popup window\r\n        Stage stageTheEventSourceNodeBelongs = (Stage) ((Node) event.getSource()).getScene().getWindow();\r\n        stageTheEventSourceNodeBelongs.close();\r\n    }\r\n\r\n    public void addTextFields(KeyEvent keyEvent) {\r\n        //Adds up values of all integers entered in text field\r\n        int i = (Integer.parseInt(QuizWeightTextField.getText()) +\r\n                Integer.parseInt(HomeworkWeightTextField.getText()) + Integer.parseInt(ProjectWeightTextField.getText()) +\r\n                Integer.parseInt(ExamWeightTextField.getText()));\r\n        TotalPercentageLabel.setTextFill(Color.color(.65, .71, .72));\r\n        TotalPercentageLabel.setText(\"Total Percentage: \" + i + \" %\");\r\n        if (i != 100) {\r\n            TotalPercentageLabel.setTextFill(Color.color(.5, .2, .2));\r\n            TotalPercentageLabel.setText(TotalPercentageLabel.getText() + \". Percentage must be 100.\");\r\n        }\r\n    }\r\n\r\n\r\n    public void loadWeightsForClass() throws IOException {\r\n        //TODO for some reason, load weight always returns empty string \"\"\r\n        try {\r\n            Weights weights = new Weights(getUserEmail());\r\n\r\n            //Make sure weights exist before entering default weights\r\n            if (weights.does_this_Weight_Exists(getCourseName(), \"Quiz\")) {\r\n\r\n                //fill all weights with stored data\r\n                QuizWeightTextField.setText(weights.load_Weight_Percentage(getCourseName(), \"Quiz\"));\r\n                HomeworkWeightTextField.setText(weights.load_Weight_Percentage(getCourseName(), \"Homework\"));\r\n                ExamWeightTextField.setText(weights.load_Weight_Percentage(getCourseName(), \"Exam\"));\r\n                ProjectWeightTextField.setText(weights.load_Weight_Percentage(getCourseName(), \"Projects\"));\r\n\r\n                TotalPercentageLabel.setText(\"Total Percentage: \" + weights.get_Total_Weight_Percentage(getCourseName()) + \" %\");\r\n            }\r\n        } catch (IOException e) {\r\n            e.printStackTrace();\r\n        }\r\n    }\r\n\r\n    public String getUserEmail() {\r\n        return userEmail;\r\n    }\r\n\r\n    public void setUserEmail(String userEmail) {\r\n        this.userEmail = userEmail;\r\n    }\r\n\r\n    public String getCourseName() {\r\n        return courseName;\r\n    }\r\n\r\n    public void setCourseName(String courseName) {\r\n        this.courseName = courseName;\r\n    }\r\n\r\n}\r\n\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- SmartGrader/src/sample/WeightPage.java	(revision ae728f295575a6196c7ae4f7b2bca12d2f82d71d)
+++ SmartGrader/src/sample/WeightPage.java	(date 1588135621247)
@@ -66,7 +66,6 @@
 
 
     public void loadWeightsForClass() throws IOException {
-        //TODO for some reason, load weight always returns empty string ""
         try {
             Weights weights = new Weights(getUserEmail());
 
Index: SmartGrader/src/sample/StudentInfoPane.fxml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- SmartGrader/src/sample/StudentInfoPane.fxml	(date 1588126455986)
+++ SmartGrader/src/sample/StudentInfoPane.fxml	(date 1588126455986)
@@ -0,0 +1,54 @@
+<?xml version="1.0" encoding="UTF-8"?>
+
+<?import javafx.geometry.*?>
+<?import javafx.scene.control.*?>
+<?import javafx.scene.layout.*?>
+
+<VBox alignment="CENTER" maxHeight="-Infinity" maxWidth="-Infinity" minHeight="-Infinity" minWidth="-Infinity" prefHeight="400.0" prefWidth="600.0" spacing="20.0" stylesheets="@../TealTeam.css" xmlns="http://javafx.com/javafx/10.0.2-internal" xmlns:fx="http://javafx.com/fxml/1" fx:controller="sample.StudentInfoPane">
+   <children>
+      <Label text="Student Information" />
+      <GridPane hgap="15.0" vgap="20.0">
+        <columnConstraints>
+          <ColumnConstraints hgrow="SOMETIMES" minWidth="10.0" prefWidth="100.0" />
+          <ColumnConstraints hgrow="SOMETIMES" minWidth="10.0" prefWidth="100.0" />
+        </columnConstraints>
+        <rowConstraints>
+          <RowConstraints minHeight="10.0" prefHeight="30.0" vgrow="SOMETIMES" />
+          <RowConstraints minHeight="10.0" prefHeight="30.0" vgrow="SOMETIMES" />
+          <RowConstraints minHeight="10.0" prefHeight="30.0" vgrow="SOMETIMES" />
+        </rowConstraints>
+         <children>
+            <Label fx:id="nameLabel" text="Label" />
+            <Label fx:id="DOBLabel" text="Label" GridPane.rowIndex="1" />
+            <Label fx:id="IDLabel" text="Label" GridPane.columnIndex="1" />
+            <Button fx:id="backButton" mnemonicParsing="false" onAction="#clickedBack" text="Back" GridPane.columnIndex="1" GridPane.rowIndex="2" />
+            <ChoiceBox fx:id="classChoiceBox" prefWidth="150.0" GridPane.columnIndex="1" GridPane.rowIndex="1" />
+         </children>
+      </GridPane>
+      <GridPane fx:id="assignmentGrid">
+        <columnConstraints>
+          <ColumnConstraints hgrow="SOMETIMES" minWidth="10.0" prefWidth="100.0" />
+          <ColumnConstraints hgrow="SOMETIMES" minWidth="10.0" prefWidth="100.0" />
+        </columnConstraints>
+        <rowConstraints>
+          <RowConstraints minHeight="10.0" prefHeight="30.0" vgrow="SOMETIMES" />
+          <RowConstraints minHeight="10.0" prefHeight="30.0" vgrow="SOMETIMES" />
+          <RowConstraints minHeight="10.0" prefHeight="30.0" vgrow="SOMETIMES" />
+        </rowConstraints>
+      </GridPane>
+      <GridPane fx:id="gradeGrid">
+        <columnConstraints>
+          <ColumnConstraints hgrow="SOMETIMES" minWidth="10.0" prefWidth="100.0" />
+          <ColumnConstraints hgrow="SOMETIMES" minWidth="10.0" prefWidth="100.0" />
+        </columnConstraints>
+        <rowConstraints>
+          <RowConstraints minHeight="10.0" prefHeight="30.0" vgrow="SOMETIMES" />
+          <RowConstraints minHeight="10.0" prefHeight="30.0" vgrow="SOMETIMES" />
+          <RowConstraints minHeight="10.0" prefHeight="30.0" vgrow="SOMETIMES" />
+        </rowConstraints>
+      </GridPane>
+   </children>
+   <padding>
+      <Insets bottom="10.0" left="10.0" right="10.0" top="10.0" />
+   </padding>
+</VBox>
Index: SmartGrader/src/sample/StudentInfoPane.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- SmartGrader/src/sample/StudentInfoPane.java	(date 1588127421995)
+++ SmartGrader/src/sample/StudentInfoPane.java	(date 1588127421995)
@@ -0,0 +1,36 @@
+package sample;
+
+import javafx.event.ActionEvent;
+import javafx.fxml.FXMLLoader;
+import javafx.scene.control.Button;
+import javafx.scene.control.ChoiceBox;
+import javafx.scene.control.Label;
+import javafx.scene.layout.BorderPane;
+import javafx.scene.layout.GridPane;
+
+public class StudentInfoPane {
+
+    private BorderPane mainView;
+    public Label nameLabel;
+    public Label DOBLabel;
+    public Label IDLabel;
+    public Button backButton;
+    public ChoiceBox classChoiceBox;
+    public GridPane assignmentGrid;
+    public GridPane gradeGrid;
+
+    public void clickedBack(ActionEvent actionEvent) {
+        try {
+            FXMLLoader loader = new FXMLLoader(getClass().getResource("SearchClassOverviewPane.fxml"));
+            mainView.getChildren().clear();
+            mainView.setCenter(loader.load());
+        } catch (Exception e) {
+            e.printStackTrace();
+        }
+
+    }
+
+    public void setBorderPane(BorderPane mainView) {
+        this.mainView = mainView;
+    }
+}
Index: SmartGrader/src/sample/ClassOverview.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package sample;\r\n\r\nimport javafx.beans.property.SimpleStringProperty;\r\nimport javafx.event.ActionEvent;\r\nimport javafx.fxml.FXML;\r\nimport javafx.fxml.FXMLLoader;\r\nimport javafx.scene.Node;\r\nimport javafx.scene.Parent;\r\nimport javafx.scene.Scene;\r\nimport javafx.scene.control.Button;\r\nimport javafx.scene.control.Label;\r\nimport javafx.scene.control.TableView;\r\nimport javafx.scene.layout.BorderPane;\r\nimport javafx.scene.layout.VBox;\r\nimport javafx.stage.Modality;\r\nimport javafx.stage.Stage;\r\n\r\nimport java.awt.print.PrinterException;\r\nimport java.io.IOException;\r\n\r\npublic class ClassOverview {\r\n\r\n    @FXML\r\n    public DefaultClassOverviewPane defaultClassOverviewPaneController;\r\n    @FXML\r\n    private VBox defaultClassOverviewPane;\r\n    //variables for main screen\r\n    @FXML\r\n    private BorderPane mainView;\r\n\r\n\r\n    @FXML\r\n    private TableView tableView;\r\n    @FXML\r\n    private Button GraphButton;\r\n    @FXML\r\n    private Button WeightButton;\r\n    @FXML\r\n    private Button CurveButton;\r\n    @FXML\r\n    private Button PrintButton;\r\n    @FXML\r\n    private Button DeleteButton;\r\n    @FXML\r\n    private Button SaveButton;\r\n    @FXML\r\n    private Button SearchButton;\r\n    @FXML\r\n    private Button HomeButton;\r\n    @FXML\r\n    private Label classNameLabel, courseNumberLabel;\r\n\r\n\r\n    private String username, courseName;\r\n\r\n    public String getUsername() {\r\n        return username;\r\n    }\r\n\r\n    public void setUsername(String username) {\r\n        this.username = username;\r\n        defaultClassOverviewPaneController.setUserEmail(username);\r\n    }\r\n\r\n    public String getCourseName() {\r\n        return courseName;\r\n    }\r\n\r\n    //Class Overview Methods\r\n    @FXML\r\n    public void initialize() {\r\n    }\r\n\r\n    //clicking home button takes you back to homepage.\r\n    public void homeButtonClicked(ActionEvent event) throws IOException {\r\n        try {\r\n            FXMLLoader homePageLoader = new FXMLLoader();\r\n            homePageLoader.setLocation(getClass().getResource(\"HomePage.fxml\"));\r\n            Parent parent = homePageLoader.load();\r\n            //assign homePageController\r\n            HomePage homePageController = homePageLoader.getController();\r\n            //set keep Email for use in next text field\r\n            homePageController.setUsername(getUsername());\r\n            //Fill homepage with tiles\r\n            homePageController.fillClassTiles(getUsername());\r\n            homePageController.moveAddButtonToEnd();\r\n\r\n            Scene scene = new Scene(parent);\r\n            Stage stage = new Stage();\r\n            stage.setTitle(\"SmartGrader\");\r\n            stage.setMaximized(true);\r\n            stage.setScene(scene);\r\n            stage.show();\r\n\r\n            Stage stageTheEventSourceNodeBelongs = (Stage) ((Node) event.getSource()).getScene().getWindow();\r\n            stageTheEventSourceNodeBelongs.close();\r\n        } catch (IOException e) {\r\n            e.printStackTrace();\r\n        }\r\n    }\r\n\r\n\r\n    public void saveButtonClicked(ActionEvent event) {\r\n        //Might be redundant if we make the table save as you edit it\r\n    }\r\n\r\n    public void searchButtonClicked(ActionEvent event) throws IOException {\r\n        // switch main view to search view\r\n        try {\r\n            FXMLLoader loader = new FXMLLoader(getClass().getResource(\"SearchClassOverviewPane.fxml\"));\r\n            mainView.getChildren().clear();\r\n            mainView.setCenter(loader.load());\r\n\r\n            //use any functions in searchClassOverviewPane controller\r\n            SearchClassOverviewPane SearchController = loader.getController();\r\n            SearchController.setBorderPane(mainView);\r\n        } catch (IOException e) {\r\n            e.printStackTrace();\r\n        }\r\n    }\r\n\r\n    public void printButtonClicked(ActionEvent event) throws PrinterException {\r\n        defaultClassOverviewPaneController.printTable();\r\n    }\r\n\r\n    public void deleteButtonClicked(ActionEvent event) {\r\n        //TODO highlight row or column in table view then delete the contents\r\n    }\r\n\r\n    public void curveButtonClicked(ActionEvent event) throws IOException {\r\n        try {\r\n            FXMLLoader curveLoader = new FXMLLoader(getClass().getResource(\"SetCurvePage.fxml\"));\r\n            Parent root = curveLoader.load();\r\n            //assign curvePage controller\r\n            SetCurvePage curvePageController = curveLoader.getController();\r\n            //open curve page\r\n            Scene scene = new Scene(root);\r\n            Stage stage = new Stage();\r\n            stage.initModality(Modality.APPLICATION_MODAL);\r\n            stage.setScene(scene);\r\n            stage.showAndWait();\r\n\r\n            //if they set a curve\r\n            if (curvePageController.isCurved()) {\r\n                defaultClassOverviewPaneController.fillCurveTableView(curvePageController.getCurvedResults());\r\n            }\r\n\r\n\r\n        } catch (IOException e) {\r\n            e.printStackTrace();\r\n        }\r\n\r\n    }\r\n\r\n    public void weightButtonClicked(ActionEvent event) throws IOException {\r\n        try {\r\n            //Open up HomePage\r\n            FXMLLoader weightPageLoader = new FXMLLoader();\r\n            weightPageLoader.setLocation(getClass().getResource(\"WeightPage.fxml\"));\r\n            Parent parent = weightPageLoader.load();\r\n            //assign weightPage\r\n            WeightPage weightPageController = weightPageLoader.getController();\r\n            //set keep Email for use in next text field\r\n            weightPageController.setCourseName(getCourseName());\r\n            weightPageController.setUserEmail(getUsername());\r\n            weightPageController.loadWeightsForClass();\r\n\r\n            //Change window\r\n            Scene scene = new Scene(parent);\r\n            Stage stage = new Stage();\r\n            stage.initModality(Modality.APPLICATION_MODAL);\r\n            stage.setTitle(\"SmartGrader\");\r\n            stage.setScene(scene);\r\n            stage.show();\r\n\r\n\r\n        } catch (IOException e) {\r\n            e.printStackTrace();\r\n        }\r\n\r\n    }\r\n\r\n    public void graphButtonClicked(ActionEvent event) throws IOException {\r\n        try {\r\n            FXMLLoader graphPageLoader = new FXMLLoader(getClass().getResource(\"ChooseGraphPage.fxml\"));\r\n            Parent root = graphPageLoader.load();\r\n            //assign curvePage controller\r\n            ChooseGraphPage chooseGraphPage = graphPageLoader.getController();\r\n            //open curve page\r\n            Scene scene = new Scene(root);\r\n            Stage stage = new Stage();\r\n            stage.initModality(Modality.APPLICATION_MODAL);\r\n            stage.setScene(scene);\r\n            stage.showAndWait();\r\n        } catch (IOException e) {\r\n            e.printStackTrace();\r\n        }\r\n    }\r\n\r\n\r\n    public void setClassNameLabel(String name) {\r\n        classNameLabel.textProperty().bind(new SimpleStringProperty(\"Course Name: \" + name));\r\n        this.courseName = name;\r\n        defaultClassOverviewPaneController.setClassName(name);\r\n\r\n    }\r\n\r\n    public void setCourseNumberLabel(String number) {\r\n        courseNumberLabel.textProperty().bind(new SimpleStringProperty(\"Course Number: \" + number));\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- SmartGrader/src/sample/ClassOverview.java	(revision ae728f295575a6196c7ae4f7b2bca12d2f82d71d)
+++ SmartGrader/src/sample/ClassOverview.java	(date 1588138233236)
@@ -22,35 +22,12 @@
 
     @FXML
     public DefaultClassOverviewPane defaultClassOverviewPaneController;
-    @FXML
-    private VBox defaultClassOverviewPane;
     //variables for main screen
     @FXML
     private BorderPane mainView;
-
-
-    @FXML
-    private TableView tableView;
-    @FXML
-    private Button GraphButton;
-    @FXML
-    private Button WeightButton;
-    @FXML
-    private Button CurveButton;
-    @FXML
-    private Button PrintButton;
-    @FXML
-    private Button DeleteButton;
-    @FXML
-    private Button SaveButton;
-    @FXML
-    private Button SearchButton;
-    @FXML
-    private Button HomeButton;
     @FXML
     private Label classNameLabel, courseNumberLabel;
 
-
     private String username, courseName;
 
     public String getUsername() {
@@ -66,7 +43,7 @@
         return courseName;
     }
 
-    //Class Overview Methods
+
     @FXML
     public void initialize() {
     }
@@ -99,11 +76,6 @@
         }
     }
 
-
-    public void saveButtonClicked(ActionEvent event) {
-        //Might be redundant if we make the table save as you edit it
-    }
-
     public void searchButtonClicked(ActionEvent event) throws IOException {
         // switch main view to search view
         try {
@@ -123,10 +95,6 @@
         defaultClassOverviewPaneController.printTable();
     }
 
-    public void deleteButtonClicked(ActionEvent event) {
-        //TODO highlight row or column in table view then delete the contents
-    }
-
     public void curveButtonClicked(ActionEvent event) throws IOException {
         try {
             FXMLLoader curveLoader = new FXMLLoader(getClass().getResource("SetCurvePage.fxml"));
@@ -142,7 +110,7 @@
 
             //if they set a curve
             if (curvePageController.isCurved()) {
-                defaultClassOverviewPaneController.fillCurveTableView(curvePageController.getCurvedResults());
+                defaultClassOverviewPaneController.fillCurveTableView(curvePageController.getCurvePercentage());
             }
 
 
@@ -185,7 +153,10 @@
             FXMLLoader graphPageLoader = new FXMLLoader(getClass().getResource("ChooseGraphPage.fxml"));
             Parent root = graphPageLoader.load();
             //assign curvePage controller
-            ChooseGraphPage chooseGraphPage = graphPageLoader.getController();
+            ChooseGraphPage chooseGraphPageController = graphPageLoader.getController();
+            //assign Variables
+            chooseGraphPageController.setCourseName(getCourseName());
+            chooseGraphPageController.setUserEmail(getUsername());
             //open curve page
             Scene scene = new Scene(root);
             Stage stage = new Stage();
@@ -197,6 +168,14 @@
         }
     }
 
+    public void fillTable() throws IOException {
+        LoadCourseData loadCourseData = new LoadCourseData(getUsername());
+        String[][] data = loadCourseData.get_2D_Array_Loaded_With_The_Course_Data(getCourseName());
+        defaultClassOverviewPaneController.fillGrid(data,true);
+
+
+    }
+
 
     public void setClassNameLabel(String name) {
         classNameLabel.textProperty().bind(new SimpleStringProperty("Course Name: " + name));
@@ -208,4 +187,5 @@
     public void setCourseNumberLabel(String number) {
         courseNumberLabel.textProperty().bind(new SimpleStringProperty("Course Number: " + number));
     }
+
 }
Index: SmartGrader/src/sample/CreateCourse.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package sample;\r\n\r\nimport java.io.IOException;\r\n\r\npublic class CreateCourse {\r\n\r\n    private boolean CourseAlreadyExists;\r\n\r\n    public CreateCourse(String userEmail, String CourseName, String SectionNumber) throws IOException {\r\n        ExcelFileManager userFile = new ExcelFileManager(userEmail + \".xlsx\");\r\n\r\n        if (userFile.does_This_Sheet_Exists(CourseName)) {\r\n            CourseAlreadyExists = true;\r\n        } else {\r\n            userFile.create_A_New_Sheet(CourseName);\r\n\r\n            userFile.update_Cell(\"Section Number:\", CourseName, 0, 0);\r\n            userFile.update_Cell(SectionNumber, CourseName, 0, 1);\r\n            userFile.update_Cell(\"Course Color: \", CourseName, 0, 2);\r\n            userFile.update_Cell(Integer.toString(generate_Random_Integer_For_RGB()), CourseName, 0, 3);\r\n            userFile.update_Cell(Integer.toString(generate_Random_Integer_For_RGB()), CourseName, 0, 4);\r\n            userFile.update_Cell(Integer.toString(generate_Random_Integer_For_RGB()), CourseName, 0, 5);\r\n\r\n            userFile.create_A_New_Row(CourseName);//This row(1) is for the names of the weights (Quizzes, Exams, Homework, etc.)\r\n            userFile.update_Cell(\"Quiz\", CourseName, 1, 0);\r\n            userFile.update_Cell(\"Homework\", CourseName, 1, 1);\r\n            userFile.update_Cell(\"Exam\", CourseName, 1, 2);\r\n            userFile.update_Cell(\"Projects\", CourseName, 1, 3);\r\n\r\n            userFile.create_A_New_Row(CourseName);//This row(2) is for the percentage number of the weights. For example, when it says, quizzes at the top row, below which will be this row, it will say the total percentage of that type.\r\n            userFile.update_Cell(\"25\", CourseName, 2, 0);\r\n            userFile.update_Cell(\"25\", CourseName, 2, 1);\r\n            userFile.update_Cell(\"25\", CourseName, 2, 2);\r\n            userFile.update_Cell(\"25\", CourseName, 2, 3);\r\n\r\n            userFile.create_A_New_Row(CourseName);//This row(3) is to save the grade ranges for the graph.\r\n\r\n            userFile.create_A_New_Row(CourseName);//This row(4) is for the assignment type names.\r\n\t\t\t/*\r\n\t\t\tuserFile.create_A_New_Row(CourseName);//This row(5) is for the assignment type total percentage. \r\n\t\t\t */\r\n            userFile.create_A_New_Row(CourseName);//This row(5) is for the assignments type, it will say it on the top of each assignment if this is quiz type or exam type or homework type, etc.\r\n\r\n            userFile.create_A_New_Row(CourseName);//This row(6) is for the assignment names.\r\n\r\n            userFile.update_Cell(\"Student DOB\", CourseName, 6, 0);\r\n            userFile.update_Cell(\"Student First Name\", CourseName, 6, 1);\r\n            userFile.update_Cell(\"Student Last Name\", CourseName, 6, 2);\r\n            userFile.update_Cell(\"Student ID\", CourseName, 6, 3);\r\n            userFile.update_Cell(\"Overall Grade\", CourseName, 6, 4);\r\n\r\n            userFile.create_A_New_Row(CourseName);//This row(7) is for the total number of each assignment.\r\n        }\r\n    }\r\n\r\n    private int generate_Random_Integer_For_RGB() {\r\n        return (int) ((Math.random() * ((255 - 0) + 1)) + 0);\r\n    }\r\n\r\n    public boolean does_The_Course_Already_Exists() {\r\n        return CourseAlreadyExists;\r\n    }\r\n\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- SmartGrader/src/sample/CreateCourse.java	(revision ae728f295575a6196c7ae4f7b2bca12d2f82d71d)
+++ SmartGrader/src/sample/CreateCourse.java	(date 1588011704907)
@@ -3,62 +3,87 @@
 import java.io.IOException;
 
 public class CreateCourse {
-
-    private boolean CourseAlreadyExists;
+	
+	private ExcelFileManager userFile;
+	private boolean CourseAlreadyExists;
 
-    public CreateCourse(String userEmail, String CourseName, String SectionNumber) throws IOException {
-        ExcelFileManager userFile = new ExcelFileManager(userEmail + ".xlsx");
-
-        if (userFile.does_This_Sheet_Exists(CourseName)) {
-            CourseAlreadyExists = true;
-        } else {
-            userFile.create_A_New_Sheet(CourseName);
-
-            userFile.update_Cell("Section Number:", CourseName, 0, 0);
-            userFile.update_Cell(SectionNumber, CourseName, 0, 1);
-            userFile.update_Cell("Course Color: ", CourseName, 0, 2);
-            userFile.update_Cell(Integer.toString(generate_Random_Integer_For_RGB()), CourseName, 0, 3);
-            userFile.update_Cell(Integer.toString(generate_Random_Integer_For_RGB()), CourseName, 0, 4);
-            userFile.update_Cell(Integer.toString(generate_Random_Integer_For_RGB()), CourseName, 0, 5);
-
-            userFile.create_A_New_Row(CourseName);//This row(1) is for the names of the weights (Quizzes, Exams, Homework, etc.)
-            userFile.update_Cell("Quiz", CourseName, 1, 0);
-            userFile.update_Cell("Homework", CourseName, 1, 1);
-            userFile.update_Cell("Exam", CourseName, 1, 2);
-            userFile.update_Cell("Projects", CourseName, 1, 3);
-
-            userFile.create_A_New_Row(CourseName);//This row(2) is for the percentage number of the weights. For example, when it says, quizzes at the top row, below which will be this row, it will say the total percentage of that type.
-            userFile.update_Cell("25", CourseName, 2, 0);
-            userFile.update_Cell("25", CourseName, 2, 1);
-            userFile.update_Cell("25", CourseName, 2, 2);
-            userFile.update_Cell("25", CourseName, 2, 3);
-
-            userFile.create_A_New_Row(CourseName);//This row(3) is to save the grade ranges for the graph.
-
-            userFile.create_A_New_Row(CourseName);//This row(4) is for the assignment type names.
-			/*
-			userFile.create_A_New_Row(CourseName);//This row(5) is for the assignment type total percentage. 
-			 */
-            userFile.create_A_New_Row(CourseName);//This row(5) is for the assignments type, it will say it on the top of each assignment if this is quiz type or exam type or homework type, etc.
-
-            userFile.create_A_New_Row(CourseName);//This row(6) is for the assignment names.
-
-            userFile.update_Cell("Student DOB", CourseName, 6, 0);
-            userFile.update_Cell("Student First Name", CourseName, 6, 1);
-            userFile.update_Cell("Student Last Name", CourseName, 6, 2);
-            userFile.update_Cell("Student ID", CourseName, 6, 3);
-            userFile.update_Cell("Overall Grade", CourseName, 6, 4);
-
-            userFile.create_A_New_Row(CourseName);//This row(7) is for the total number of each assignment.
-        }
-    }
-
-    private int generate_Random_Integer_For_RGB() {
-        return (int) ((Math.random() * ((255 - 0) + 1)) + 0);
-    }
-
-    public boolean does_The_Course_Already_Exists() {
-        return CourseAlreadyExists;
-    }
-
+	public CreateCourse(String userEmail, String courseName, String sectionNumber) throws IOException {
+		userFile = new ExcelFileManager(userEmail + ".xlsx");
+		
+		if (userFile.does_This_Sheet_Exists(courseName)) {
+			CourseAlreadyExists = true;
+		} else {			
+			userFile.create_A_New_Sheet(courseName);
+			
+			userFile.update_Cell("Secttion Number:", courseName, 0, 0);
+			userFile.update_Cell(sectionNumber, courseName, 0, 1);
+			userFile.update_Cell("Course Color: ", courseName, 0, 2);
+			userFile.update_Cell(Integer.toString(generate_Random_Integer_For_RGB()), courseName, 0, 3);
+			userFile.update_Cell(Integer.toString(generate_Random_Integer_For_RGB()), courseName, 0, 4);
+			userFile.update_Cell(Integer.toString(generate_Random_Integer_For_RGB()), courseName, 0, 5);
+			
+			userFile.create_A_New_Row(courseName);//This row(1) is for the names of the weights (Quizzes, Exams, Homework, etc.)
+			userFile.create_A_New_Row(courseName);//This row(2) is for the percentage number of the weights. For example, when it says, quizzes at the top row, below which will be this row, it will say the total percentage of that type. 
+			set_Default_Weights_Their_Names(courseName);
+			
+			userFile.create_A_New_Row(courseName);//This row(3) is for the letters of the grade ranges.
+			userFile.create_A_New_Row(courseName);//This row(4) is to save the grade ranges for the graph.
+			set_Default_Grade_Letters_And_Their_Ranges(courseName);
+			
+			userFile.create_A_New_Row(courseName);//This row(5) is for the assignments type, it will say it on the top of each assignment if this is quiz type or exam type or homework type, etc.
+			
+			userFile.create_A_New_Row(courseName);//This row(6) is for the assignment names.
+			
+			userFile.update_Cell("Student DOB", courseName, 6, 0);
+			userFile.update_Cell("First Name", courseName, 6, 1);
+			userFile.update_Cell("Last Name", courseName, 6, 2);
+			userFile.update_Cell("Student ID", courseName, 6, 3);
+			userFile.update_Cell("Overall Grade", courseName, 6, 4);
+			
+			userFile.create_A_New_Row(courseName);//This row(7) is for the total number of each assignment.
+		}
+	}
+	
+	private int generate_Random_Integer_For_RGB() {
+		return (int) ((Math.random() * ((255 - 0) + 1)) + 0);
+	}
+	
+	private void set_Default_Weights_Their_Names(String courseName) {
+		try {
+			userFile.update_Cell("Quiz", courseName, 1, 0);
+			userFile.update_Cell("Homework", courseName, 1, 1);
+			userFile.update_Cell("Exam", courseName, 1, 2);
+			userFile.update_Cell("Projects", courseName, 1, 3);
+			
+			userFile.update_Cell("25", courseName, 2, 0);
+			userFile.update_Cell("25", courseName, 2, 1);
+			userFile.update_Cell("25", courseName, 2, 2);
+			userFile.update_Cell("25", courseName, 2, 3);
+		} catch (IOException e) {
+			e.printStackTrace();
+		}
+	}
+	
+	private void set_Default_Grade_Letters_And_Their_Ranges(String courseName) {
+		try {
+			userFile.update_Cell("A", courseName, 3, 0);
+			userFile.update_Cell("B", courseName, 3, 1);
+			userFile.update_Cell("C", courseName, 3, 2);
+			userFile.update_Cell("D", courseName, 3, 3);
+			userFile.update_Cell("F", courseName, 3, 4);
+			
+			userFile.update_Cell("90", courseName, 4, 0);
+			userFile.update_Cell("80", courseName, 4, 1);
+			userFile.update_Cell("70", courseName, 4, 2);
+			userFile.update_Cell("60", courseName, 4, 3);
+			userFile.update_Cell("0", courseName, 4, 4);
+		} catch (IOException e) {
+			e.printStackTrace();
+		}
+	}
+	
+	public boolean does_The_Course_Already_Exists() {
+		return CourseAlreadyExists;
+	}
+	
 }
Index: Back End Files/Grading.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import java.io.IOException;\r\nimport java.text.DecimalFormat;\r\n\r\npublic class Grading {\r\n\tprivate ExcelFileManager userFile;\r\n\t\r\n\tprivate double quizesWeight;\r\n\tprivate double homeworksWeight;\r\n\tprivate double examsWeight;\r\n\tprivate double projectsWeight;\r\n\t\r\n\tprivate double totalCourseQuizesPoints;\r\n\tprivate double totalCourseHomeworksPoints;\r\n\tprivate double totalCourseExamsPoints;\r\n\tprivate double totalCourseProjectsPoints;\r\n\t\r\n\tprivate double studentTotalQuizesPoints;\r\n\tprivate double studentTotalHomeworksPoints;\r\n\tprivate double studentTotalExamsPoints;\r\n\tprivate double studentTotalProjectsPoints;\r\n\t\r\n\tprivate double studentTotalQuizesPercentage;\r\n\tprivate double studentTotalHomeworksPercentage;\r\n\tprivate double studentTotalExamsPercentage;\r\n\tprivate double studentTotalProjectsPercentage;\r\n\t\r\n\tprivate int[] arrayOfTotalNumberOfAsBsCsDsAndFs = new int[5];\r\n\t\r\n\tprivate int gradeRangeForA;\r\n\tprivate int gradeRangeForB;\r\n\tprivate int gradeRangeForC;\r\n\tprivate int gradeRangeForD;\r\n\tprivate int gradeRangeForF;\r\n\t\r\n\tpublic Grading(String userEmail) {\r\n\t\tuserFile = new ExcelFileManager(userEmail + \".xlsx\");\r\n\t}\r\n\t\r\n\tprivate void load_Weight_Percentages(String courseName) {\r\n\t\ttry {\r\n\t\t\t\r\n\t\t\tquizesWeight = Double.parseDouble(userFile.get_Data_At(courseName, 2, 0))/100; //divide by 100 because we need it to be not in percentage.\r\n\t\t\thomeworksWeight = Double.parseDouble(userFile.get_Data_At(courseName, 2, 1))/100;\r\n\t\t\texamsWeight = Double.parseDouble(userFile.get_Data_At(courseName, 2, 2))/100;\r\n\t\t\tprojectsWeight = Double.parseDouble(userFile.get_Data_At(courseName, 2, 3))/100;\r\n\t\t\t\r\n\t\t} catch (NumberFormatException e) {\r\n\t\t\te.printStackTrace();\r\n\t\t} catch (IOException e) {\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t}\r\n\t\r\n\tprivate void load_Grade_Ranges(String courseName) {\r\n\t\ttry {\r\n\t\t\t\r\n\t\t\tgradeRangeForA = Integer.parseInt(userFile.get_Data_At(courseName, 4, 0));\r\n\t\t\t\r\n\t\t\tgradeRangeForB = Integer.parseInt(userFile.get_Data_At(courseName, 4, 1));\r\n\t\t\tgradeRangeForC = Integer.parseInt(userFile.get_Data_At(courseName, 4, 2));\r\n\t\t\tgradeRangeForD = Integer.parseInt(userFile.get_Data_At(courseName, 4, 3));\r\n\t\t\tgradeRangeForF = Integer.parseInt(userFile.get_Data_At(courseName, 4, 4));\r\n\t\t\t\r\n\t\t} catch (NumberFormatException e) {\r\n\t\t\te.printStackTrace();\r\n\t\t} catch (IOException e) {\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t}\r\n\t\r\n\tprivate void load_Overall_Course_And_Student_Total_Points_For_Each_Category(String courseName, int rowIndex) {\r\n\t\ttry {\r\n\t\t\tfor (int currentColumn = 5; currentColumn < userFile.get_Last_Cell_Of_Row(courseName, 5); currentColumn++) {\r\n\t\t\t\tif (userFile.get_Data_At(courseName, 5, currentColumn).equals(\"Quiz\")) {\r\n\t\t\t\t\t\r\n\t\t\t\t\ttotalCourseQuizesPoints += Double.parseDouble(userFile.get_Data_At(courseName, 7, currentColumn));\r\n\t\t\t\t\tstudentTotalQuizesPoints += Double.parseDouble(userFile.get_Data_At(courseName, rowIndex, currentColumn));\r\n\t\t\r\n\t\t\t\t} else if (userFile.get_Data_At(courseName, 5, currentColumn).equals(\"Homework\")) {\r\n\t\t\t\t\t\r\n\t\t\t\t\ttotalCourseHomeworksPoints += Double.parseDouble(userFile.get_Data_At(courseName, 7, currentColumn));\r\n\t\t\t\t\tstudentTotalHomeworksPoints += Double.parseDouble(userFile.get_Data_At(courseName, rowIndex, currentColumn));\r\n\t\t\t\t\t\r\n\t\t\t\t} else if (userFile.get_Data_At(courseName, 5, currentColumn).equals(\"Exam\")) {\r\n\t\t\t\t\t\r\n\t\t\t\t\ttotalCourseExamsPoints += Double.parseDouble(userFile.get_Data_At(courseName, 7, currentColumn));\r\n\t\t\t\t\tstudentTotalExamsPoints += Double.parseDouble(userFile.get_Data_At(courseName, rowIndex, currentColumn));\r\n\t\t\t\t\t\r\n\t\t\t\t} else if (userFile.get_Data_At(courseName, 5, currentColumn).equals(\"Projects\")) {\r\n\t\t\t\t\t\r\n\t\t\t\t\ttotalCourseProjectsPoints += Double.parseDouble(userFile.get_Data_At(courseName, 7, currentColumn));\r\n\t\t\t\t\tstudentTotalProjectsPoints += Double.parseDouble(userFile.get_Data_At(courseName, rowIndex, currentColumn));\r\n\t\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t} catch (IOException e) {\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t}\r\n\t\r\n\tprivate void calculate_Student_Overall_Percentage_For_Each_Category() {\r\n\t\t\r\n\t\tif (totalCourseQuizesPoints == 0) {//Can't divide by 0 so we need to change it to 1.\r\n\t\t\ttotalCourseQuizesPoints = 1;\r\n\t\t}\r\n\t\t\r\n\t\tif (totalCourseHomeworksPoints == 0) {//Can't divide by 0 so we need to change it to 1.\r\n\t\t\ttotalCourseHomeworksPoints = 1;\r\n\t\t}\r\n\t\t\r\n\t\tif(totalCourseExamsPoints == 0) {//Can't divide by 0 so we need to change it to 1.\r\n\t\t\ttotalCourseExamsPoints = 1;\r\n\t\t}\r\n\t\t\r\n\t\tif (totalCourseProjectsPoints == 0) {//Can't divide by 0 so we need to change it to 1.\r\n\t\t\ttotalCourseProjectsPoints = 1;\r\n\t\t}\r\n\t\t\r\n\t\tstudentTotalQuizesPercentage = (studentTotalQuizesPoints / totalCourseQuizesPoints) * 100;\r\n\t\tstudentTotalHomeworksPercentage = (studentTotalHomeworksPoints / totalCourseHomeworksPoints) * 100;\r\n\t\tstudentTotalExamsPercentage = (studentTotalExamsPoints / totalCourseExamsPoints) * 100;\t\r\n\t\tstudentTotalProjectsPercentage = (studentTotalProjectsPoints / totalCourseProjectsPoints) * 100;\r\n\r\n\t}\r\n\t\r\n\tprivate void count_Total_Number_Of_As_Bs_Cs_Ds_And_Fs(String courseName) {\r\n\t\tload_Grade_Ranges(courseName);\r\n\t\t\t\r\n\t\ttry {\r\n\t\t\tfor (int currentRow = 8; currentRow <= userFile.get_Last_Row_Of_The_Sheet(courseName); currentRow++) {\r\n\t\t\t\tif (Double.parseDouble(userFile.get_Data_At(courseName, currentRow, 4)) >= gradeRangeForA) {\r\n\t\t\t\t\tarrayOfTotalNumberOfAsBsCsDsAndFs[0]++;\r\n\t\t\t\t} else if (Double.parseDouble(userFile.get_Data_At(courseName, currentRow, 4)) >= gradeRangeForB) {\r\n\t\t\t\t\tarrayOfTotalNumberOfAsBsCsDsAndFs[1]++;\r\n\t\t\t\t} else if (Double.parseDouble(userFile.get_Data_At(courseName, currentRow, 4)) >= gradeRangeForC) {\r\n\t\t\t\t\tarrayOfTotalNumberOfAsBsCsDsAndFs[2]++;\r\n\t\t\t\t} else if (Double.parseDouble(userFile.get_Data_At(courseName, currentRow, 4)) >= gradeRangeForD) {\r\n\t\t\t\t\tarrayOfTotalNumberOfAsBsCsDsAndFs[3]++;\r\n\t\t\t\t} else if (Double.parseDouble(userFile.get_Data_At(courseName, currentRow, 4)) >= gradeRangeForF) {\r\n\t\t\t\t\tarrayOfTotalNumberOfAsBsCsDsAndFs[4]++;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t} catch (IOException e) {\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t}\r\n\t\r\n\tpublic void calculate_The_Overall_Grade(String courseName, int rowIndex) {\r\n\t\t\r\n\t\tload_Weight_Percentages(courseName);\r\n\t\tload_Overall_Course_And_Student_Total_Points_For_Each_Category(courseName, rowIndex);\r\n\t\tcalculate_Student_Overall_Percentage_For_Each_Category();\r\n\t\t\r\n\t\tDecimalFormat decimalFormat = new DecimalFormat(\"0.00\");\r\n\t\tdouble studentOverallGrade = (studentTotalQuizesPercentage * quizesWeight) + (studentTotalHomeworksPercentage * homeworksWeight) + (studentTotalExamsPercentage * examsWeight) + (studentTotalProjectsPercentage * projectsWeight);\r\n\t\t\r\n\t\tString studentOverallGradeFormated = decimalFormat.format(studentOverallGrade);\r\n\t\t\r\n\t\ttry {\r\n\t\t\tuserFile.update_Cell(studentOverallGradeFormated, courseName, rowIndex, 4);\r\n\t\t} catch (IOException e) {\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t}\r\n\t\r\n\tpublic void update_The_Grade(String courseName, int grade, int rowIndex, int cellIndex) {\r\n\t\ttry {\r\n\t\t\tuserFile.update_Cell(Integer.toString(grade), courseName, rowIndex, cellIndex);\r\n\t\t} catch (IOException e) {\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t}\r\n\t\r\n\tpublic void update_Grade_Range(String courseName, String forGradeLetter, String value) {\r\n\t\ttry {\r\n\t\t\t\r\n\t\t\tif(forGradeLetter.equalsIgnoreCase(\"A\") == true) {\r\n\t\t\t\tuserFile.update_Cell(value, courseName, 4, 0);\r\n\t\t\t} else if(forGradeLetter.equalsIgnoreCase(\"B\") == true) {\r\n\t\t\t\tuserFile.update_Cell(value, courseName, 4, 1);\r\n\t\t\t} else if(forGradeLetter.equalsIgnoreCase(\"C\") == true) {\r\n\t\t\t\tuserFile.update_Cell(value, courseName, 4, 2);\r\n\t\t\t} else if(forGradeLetter.equalsIgnoreCase(\"D\") == true) {\r\n\t\t\t\tuserFile.update_Cell(value, courseName, 4, 3);\r\n\t\t\t} else if(forGradeLetter.equalsIgnoreCase(\"F\") == true) {\r\n\t\t\t\tuserFile.update_Cell(value, courseName, 4, 4);\r\n\t\t\t}\r\n\t\t\t\r\n\t\t} catch (Exception e) {\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\t\t\r\n\t}\r\n\t\r\n\tpublic String reload_The_Overall_Grade(String courseName, int rowIndex) {\r\n\t\tString studentOverAllGrade = \"\";\r\n\t\ttry {\r\n\t\t\tstudentOverAllGrade = userFile.get_Data_At(courseName, rowIndex, 4);\r\n\t\t} catch (IOException e) {\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\treturn studentOverAllGrade;\r\n\t}\r\n\t\r\n\tpublic String get_Student_Score_At(String courseName, int rowIndex, int cellIndex) {\r\n\t\tString studentScore = \"\"; \r\n\t\ttry {\r\n\t\t\tstudentScore = userFile.get_Data_At(courseName, rowIndex, cellIndex);\r\n\t\t} catch (IOException e) {\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\treturn studentScore;\r\n\t}\r\n\t\r\n\tpublic int[] get_The_Array_Loaded_With_Total_Number_Of_As_Bs_Cs_Ds_And_Fs_For_Overall_Grade(String courseName) {\r\n\t\tfor (int i = 0; i < 5; i++) {//reseting the array\r\n\t\t\tarrayOfTotalNumberOfAsBsCsDsAndFs[i] = 0;\r\n\t\t}\r\n\t\tcount_Total_Number_Of_As_Bs_Cs_Ds_And_Fs(courseName);\r\n\t\treturn arrayOfTotalNumberOfAsBsCsDsAndFs;\r\n\t}\r\n\t\r\n\tpublic int[] get_The_Array_Loaded_With_Total_Number_Of_As_Bs_Cs_Ds_And_Fs_For_Quizes(String courseName) {\r\n\t\tload_Grade_Ranges(courseName);\r\n\t\t\r\n\t\tfor (int i = 0; i < arrayOfTotalNumberOfAsBsCsDsAndFs.length; i++) {//reseting the array\r\n\t\t\tarrayOfTotalNumberOfAsBsCsDsAndFs[i] = 0;\r\n\t\t}\r\n\t\t\r\n\t\ttry {\r\n\t\t\tfor(int currentRow = 8; currentRow <= userFile.get_Last_Row_Of_The_Sheet(courseName); currentRow++) {\r\n\t\t\t\t\r\n\t\t\t\tload_Overall_Course_And_Student_Total_Points_For_Each_Category(courseName, currentRow);\r\n\t\t\t\tcalculate_Student_Overall_Percentage_For_Each_Category();\r\n\t\t\t\t\r\n\t\t\t\tif (studentTotalQuizesPercentage >= gradeRangeForA) {\r\n\t\t\t\t\tarrayOfTotalNumberOfAsBsCsDsAndFs[0]++;\r\n\t\t\t\t} else if (studentTotalQuizesPercentage < gradeRangeForA && studentTotalQuizesPercentage >= gradeRangeForB) {\r\n\t\t\t\t\tarrayOfTotalNumberOfAsBsCsDsAndFs[1]++;\r\n\t\t\t\t} else if (studentTotalQuizesPercentage < gradeRangeForB && studentTotalQuizesPercentage >= gradeRangeForC) {\r\n\t\t\t\t\tarrayOfTotalNumberOfAsBsCsDsAndFs[2]++;\r\n\t\t\t\t} else if (studentTotalQuizesPercentage < gradeRangeForC && studentTotalQuizesPercentage >= gradeRangeForD) {\r\n\t\t\t\t\tarrayOfTotalNumberOfAsBsCsDsAndFs[3]++;\r\n\t\t\t\t} else if (studentTotalQuizesPercentage < gradeRangeForD) {\r\n\t\t\t\t\tarrayOfTotalNumberOfAsBsCsDsAndFs[4]++;\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t} catch (IOException e) {\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\treturn arrayOfTotalNumberOfAsBsCsDsAndFs;\r\n\t}\r\n\t\r\n\tpublic int[] get_The_Array_Loaded_With_Total_Number_Of_As_Bs_Cs_Ds_And_Fs_For_Homeworks(String courseName) {\r\n\t\tload_Grade_Ranges(courseName);\r\n\t\t\r\n\t\tfor (int i = 0; i < arrayOfTotalNumberOfAsBsCsDsAndFs.length; i++) {//reseting the array\r\n\t\t\tarrayOfTotalNumberOfAsBsCsDsAndFs[i] = 0;\r\n\t\t}\r\n\t\t\r\n\t\ttry {\r\n\t\t\tfor(int currentRow = 8; currentRow <= userFile.get_Last_Row_Of_The_Sheet(courseName); currentRow++) {\r\n\t\t\t\t\r\n\t\t\t\tload_Overall_Course_And_Student_Total_Points_For_Each_Category(courseName, currentRow);\r\n\t\t\t\tcalculate_Student_Overall_Percentage_For_Each_Category();\r\n\t\t\t\t\r\n\t\t\t\tif (studentTotalHomeworksPercentage >= gradeRangeForA) {\r\n\t\t\t\t\tarrayOfTotalNumberOfAsBsCsDsAndFs[0]++;\r\n\t\t\t\t} else if (studentTotalHomeworksPercentage < gradeRangeForA && studentTotalHomeworksPercentage >= gradeRangeForB) {\r\n\t\t\t\t\tarrayOfTotalNumberOfAsBsCsDsAndFs[1]++;\r\n\t\t\t\t} else if (studentTotalHomeworksPercentage < gradeRangeForB && studentTotalHomeworksPercentage >= gradeRangeForC) {\r\n\t\t\t\t\tarrayOfTotalNumberOfAsBsCsDsAndFs[2]++;\r\n\t\t\t\t} else if (studentTotalHomeworksPercentage < gradeRangeForC && studentTotalHomeworksPercentage >= gradeRangeForD) {\r\n\t\t\t\t\tarrayOfTotalNumberOfAsBsCsDsAndFs[3]++;\r\n\t\t\t\t} else if (studentTotalHomeworksPercentage < gradeRangeForD) {\r\n\t\t\t\t\tarrayOfTotalNumberOfAsBsCsDsAndFs[4]++;\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t} catch (IOException e) {\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\treturn arrayOfTotalNumberOfAsBsCsDsAndFs;\r\n\t}\r\n\t\r\n\tpublic int[] get_The_Array_Loaded_With_Total_Number_Of_As_Bs_Cs_Ds_And_Fs_For_Projects(String courseName) {\r\n\t\tload_Grade_Ranges(courseName);\r\n\t\t\r\n\t\tfor (int i = 0; i < arrayOfTotalNumberOfAsBsCsDsAndFs.length; i++) {//reseting the array\r\n\t\t\tarrayOfTotalNumberOfAsBsCsDsAndFs[i] = 0;\r\n\t\t}\r\n\t\t\r\n\t\ttry {\r\n\t\t\tfor(int currentRow = 8; currentRow <= userFile.get_Last_Row_Of_The_Sheet(courseName); currentRow++) {\r\n\t\t\t\t\r\n\t\t\t\tload_Overall_Course_And_Student_Total_Points_For_Each_Category(courseName, currentRow);\r\n\t\t\t\tcalculate_Student_Overall_Percentage_For_Each_Category();\r\n\t\t\t\t\r\n\t\t\t\tif (studentTotalProjectsPercentage >= gradeRangeForA) {\r\n\t\t\t\t\tarrayOfTotalNumberOfAsBsCsDsAndFs[0]++;\r\n\t\t\t\t} else if (studentTotalProjectsPercentage < gradeRangeForA && studentTotalProjectsPercentage >= gradeRangeForB) {\r\n\t\t\t\t\tarrayOfTotalNumberOfAsBsCsDsAndFs[1]++;\r\n\t\t\t\t} else if (studentTotalProjectsPercentage < gradeRangeForB && studentTotalProjectsPercentage >= gradeRangeForC) {\r\n\t\t\t\t\tarrayOfTotalNumberOfAsBsCsDsAndFs[2]++;\r\n\t\t\t\t} else if (studentTotalProjectsPercentage < gradeRangeForC && studentTotalProjectsPercentage >= gradeRangeForD) {\r\n\t\t\t\t\tarrayOfTotalNumberOfAsBsCsDsAndFs[3]++;\r\n\t\t\t\t} else if (studentTotalProjectsPercentage < gradeRangeForD) {\r\n\t\t\t\t\tarrayOfTotalNumberOfAsBsCsDsAndFs[4]++;\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t} catch (IOException e) {\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\treturn arrayOfTotalNumberOfAsBsCsDsAndFs;\r\n\t}\r\n\t\r\n\tpublic int[] get_The_Array_Loaded_With_Total_Number_Of_As_Bs_Cs_Ds_And_Fs_For_Exams(String courseName) {\r\n\t\tload_Grade_Ranges(courseName);\r\n\t\t\r\n\t\tfor (int i = 0; i < arrayOfTotalNumberOfAsBsCsDsAndFs.length; i++) {//reseting the array\r\n\t\t\tarrayOfTotalNumberOfAsBsCsDsAndFs[i] = 0;\r\n\t\t}\r\n\t\t\r\n\t\ttry {\r\n\t\t\tfor(int currentRow = 8; currentRow <= userFile.get_Last_Row_Of_The_Sheet(courseName); currentRow++) {\r\n\t\t\t\t\r\n\t\t\t\tload_Overall_Course_And_Student_Total_Points_For_Each_Category(courseName, currentRow);\r\n\t\t\t\tcalculate_Student_Overall_Percentage_For_Each_Category();\r\n\t\t\t\t\r\n\t\t\t\tif (studentTotalExamsPercentage >= gradeRangeForA) {\r\n\t\t\t\t\tarrayOfTotalNumberOfAsBsCsDsAndFs[0]++;\r\n\t\t\t\t} else if (studentTotalExamsPercentage < gradeRangeForA && studentTotalExamsPercentage >= gradeRangeForB) {\r\n\t\t\t\t\tarrayOfTotalNumberOfAsBsCsDsAndFs[1]++;\r\n\t\t\t\t} else if (studentTotalExamsPercentage < gradeRangeForB && studentTotalExamsPercentage >= gradeRangeForC) {\r\n\t\t\t\t\tarrayOfTotalNumberOfAsBsCsDsAndFs[2]++;\r\n\t\t\t\t} else if (studentTotalExamsPercentage < gradeRangeForC && studentTotalExamsPercentage >= gradeRangeForD) {\r\n\t\t\t\t\tarrayOfTotalNumberOfAsBsCsDsAndFs[3]++;\r\n\t\t\t\t} else if (studentTotalExamsPercentage < gradeRangeForD) {\r\n\t\t\t\t\tarrayOfTotalNumberOfAsBsCsDsAndFs[4]++;\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t} catch (IOException e) {\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\t\r\n\t\treturn arrayOfTotalNumberOfAsBsCsDsAndFs;\r\n\t}\r\n\t\r\n}\r\n
===================================================================
--- Back End Files/Grading.java	(revision ae728f295575a6196c7ae4f7b2bca12d2f82d71d)
+++ SmartGrader/src/sample/Grading.java	(date 1588011704980)
@@ -1,3 +1,5 @@
+package sample;
+
 import java.io.IOException;
 import java.text.DecimalFormat;
 
Index: SmartGrader/src/sample/EditAssignmentPage.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package sample;\r\n\r\nimport javafx.event.ActionEvent;\r\nimport javafx.fxml.FXML;\r\nimport javafx.scene.Node;\r\nimport javafx.scene.control.*;\r\nimport javafx.stage.Stage;\r\nimport org.apache.poi.EncryptedDocumentException;\r\nimport org.apache.poi.openxml4j.exceptions.InvalidFormatException;\r\n\r\nimport java.io.IOException;\r\n\r\npublic class EditAssignmentPage {\r\n    public TextField NameTextField;\r\n    public TextField PointsTextField;\r\n    public ChoiceBox choiceBox;\r\n\r\n    private String userEmail, courseName;\r\n    int columnNumber;\r\n\r\n    @FXML\r\n    public void initialize() {\r\n        //use to add multiple items to combo box upon initializing screen\r\n        choiceBox.getItems().addAll(\"Quiz\", \"Homework\", \"Projects\", \"Exam\");\r\n\r\n    }\r\n\r\n    public void clickedEditButton(ActionEvent actionEvent) throws IOException {\r\n        try {\r\n            if (PointsTextField.getText().trim().isEmpty() || NameTextField.getText().trim().isEmpty() || choiceBox.getValue().toString().trim().isEmpty()) {\r\n                Alert alert = new Alert(Alert.AlertType.ERROR, \"Please fill all fields.\", ButtonType.OK);\r\n                DialogPane dialogPane = alert.getDialogPane();\r\n                dialogPane.getStylesheets().add(getClass().getResource(\"/TealTeam.css\").toExternalForm());\r\n                alert.showAndWait();\r\n            } else {\r\n                Assignments assignments = new Assignments(getUserEmail());\r\n\r\n                assignments.edit_Assignment(getCourseName(), (getColumnNumber() + 1) , NameTextField.getText(), PointsTextField.getText(),choiceBox.getValue().toString());\r\n\r\n                Alert alert = new Alert(Alert.AlertType.INFORMATION, \"Student has been Edited.\", ButtonType.OK);\r\n                DialogPane dialogPane = alert.getDialogPane();\r\n                dialogPane.getStylesheets().add(getClass().getResource(\"/TealTeam.css\").toExternalForm());\r\n                alert.showAndWait();\r\n            }\r\n        } catch (IOException e) {\r\n            e.printStackTrace();\r\n        } catch (NumberFormatException e) {\r\n            e.printStackTrace();\r\n        }\r\n    }\r\n\r\n    public void clickedCancel(ActionEvent actionEvent) {\r\n        //close popup window\r\n        Stage stageTheEventSourceNodeBelongs = (Stage) ((Node) actionEvent.getSource()).getScene().getWindow();\r\n        stageTheEventSourceNodeBelongs.close();\r\n    }\r\n\r\n    //delete assignment\r\n    public void clickedDelete(ActionEvent actionEvent) throws IOException, InvalidFormatException {\r\n        try {\r\n            Assignments assignments = new Assignments(getUserEmail());\r\n            assignments.delete_Assignment(getCourseName(), (getColumnNumber()+1));\r\n\r\n            Alert alert = new Alert(Alert.AlertType.INFORMATION, \"Student has been Deleted.\", ButtonType.OK);\r\n            DialogPane dialogPane = alert.getDialogPane();\r\n            dialogPane.getStylesheets().add(getClass().getResource(\"/TealTeam.css\").toExternalForm());\r\n            alert.showAndWait();\r\n\r\n            clickedCancel(actionEvent);\r\n        } catch (IOException e) {\r\n            e.printStackTrace();\r\n        } catch (EncryptedDocumentException e) {\r\n            e.printStackTrace();\r\n        } catch (InvalidFormatException e) {\r\n            e.printStackTrace();\r\n        }\r\n\r\n\r\n    }\r\n\r\n    public String getUserEmail() {\r\n        return userEmail;\r\n    }\r\n\r\n    public void setUserEmail(String userEmail) {\r\n        this.userEmail = userEmail;\r\n    }\r\n\r\n    public String getCourseName() {\r\n        return courseName;\r\n    }\r\n\r\n    public void setCourseName(String courseName) {\r\n        this.courseName = courseName;\r\n    }\r\n\r\n    public int getColumnNumber() {\r\n        return columnNumber;\r\n    }\r\n\r\n    public void setColumnNumber(int columnNumber) {\r\n        this.columnNumber = columnNumber;\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- SmartGrader/src/sample/EditAssignmentPage.java	(revision ae728f295575a6196c7ae4f7b2bca12d2f82d71d)
+++ SmartGrader/src/sample/EditAssignmentPage.java	(date 1588136408070)
@@ -41,6 +41,8 @@
                 DialogPane dialogPane = alert.getDialogPane();
                 dialogPane.getStylesheets().add(getClass().getResource("/TealTeam.css").toExternalForm());
                 alert.showAndWait();
+
+                clickedCancel(actionEvent);
             }
         } catch (IOException e) {
             e.printStackTrace();
@@ -59,12 +61,12 @@
     public void clickedDelete(ActionEvent actionEvent) throws IOException, InvalidFormatException {
         try {
             Assignments assignments = new Assignments(getUserEmail());
-            assignments.delete_Assignment(getCourseName(), (getColumnNumber()+1));
+            assignments.delete_Assignment(getCourseName(), getColumnNumber()+1);
 
-            Alert alert = new Alert(Alert.AlertType.INFORMATION, "Student has been Deleted.", ButtonType.OK);
+            Alert alert = new Alert(Alert.AlertType.INFORMATION, "Assignment has been Deleted.", ButtonType.OK);
             DialogPane dialogPane = alert.getDialogPane();
             dialogPane.getStylesheets().add(getClass().getResource("/TealTeam.css").toExternalForm());
-            alert.showAndWait();
+            alert.show();
 
             clickedCancel(actionEvent);
         } catch (IOException e) {
Index: out/production/COMP380_Project/sample/ClassOverview.fxml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n\r\n<?import javafx.geometry.*?>\r\n<?import javafx.scene.control.*?>\r\n<?import javafx.scene.image.*?>\r\n<?import javafx.scene.layout.*?>\r\n<BorderPane xmlns:fx=\"http://javafx.com/fxml/1\" prefHeight=\"1000\" prefWidth=\"1000\" stylesheets=\"@../TealTeam.css\"\r\n            xmlns=\"http://javafx.com/javafx/10.0.2-internal\" fx:controller=\"sample.ClassOverview\">\r\n   <top>\r\n      <HBox alignment=\"CENTER_LEFT\" spacing=\"50.0\" BorderPane.alignment=\"CENTER\">\r\n         <children>\r\n            <Button fx:id=\"HomeButton\" maxHeight=\"-Infinity\" maxWidth=\"-Infinity\" mnemonicParsing=\"false\"\r\n                    onAction=\"#homeButtonClicked\" prefHeight=\"100.0\" prefWidth=\"125.0\"\r\n                    stylesheets=\"@../SpecialtyButtons.css\">\r\n               <graphic>\r\n                  <ImageView pickOnBounds=\"true\" preserveRatio=\"true\">\r\n                     <image>\r\n                        <Image url=\"@../thumbnails/HomeIcon.png\"/>\r\n                     </image>\r\n                  </ImageView>\r\n               </graphic>\r\n               <padding>\r\n                  <Insets bottom=\"1.0\" left=\"1.0\" right=\"1.0\" top=\"1.0\"/>\r\n               </padding>\r\n               <HBox.margin>\r\n                  <Insets bottom=\"10.0\" top=\"10.0\"/>\r\n               </HBox.margin>\r\n            </Button>\r\n            <Button fx:id=\"SearchButton\" alignment=\"CENTER\" contentDisplay=\"CENTER\" graphicTextGap=\"0.0\"\r\n                    mnemonicParsing=\"false\" onAction=\"#searchButtonClicked\" prefHeight=\"100.0\" prefWidth=\"125.0\"\r\n                    stylesheets=\"@../SpecialtyButtons.css\">\r\n               <graphic>\r\n                  <ImageView pickOnBounds=\"true\" preserveRatio=\"true\">\r\n                     <image>\r\n                        <Image url=\"@../thumbnails/SearchIcon.png\"/>\r\n                     </image>\r\n                  </ImageView>\r\n               </graphic>\r\n               <padding>\r\n                  <Insets bottom=\"1.0\" left=\"1.0\" right=\"1.0\" top=\"1.0\"/>\r\n               </padding>\r\n            </Button>\r\n            <Button fx:id=\"SaveButton\" graphicTextGap=\"0.0\" mnemonicParsing=\"false\" onAction=\"#saveButtonClicked\"\r\n                    prefHeight=\"100.0\" prefWidth=\"125.0\" stylesheets=\"@../SpecialtyButtons.css\">\r\n               <graphic>\r\n                  <ImageView pickOnBounds=\"true\" preserveRatio=\"true\">\r\n                     <image>\r\n                        <Image url=\"@../thumbnails/SaveIcon.png\"/>\r\n                     </image>\r\n                  </ImageView>\r\n               </graphic>\r\n               <padding>\r\n                  <Insets bottom=\"1.0\" left=\"1.0\" right=\"1.0\" top=\"1.0\"/>\r\n               </padding>\r\n            </Button>\r\n            <Button fx:id=\"PrintButton\" mnemonicParsing=\"false\" onAction=\"#printButtonClicked\" prefHeight=\"100.0\"\r\n                    prefWidth=\"125.0\" stylesheets=\"@../SpecialtyButtons.css\">\r\n               <graphic>\r\n                  <ImageView pickOnBounds=\"true\" preserveRatio=\"true\">\r\n                     <image>\r\n                        <Image url=\"@../thumbnails/PrintIcon.png\"/>\r\n                     </image>\r\n                  </ImageView>\r\n               </graphic>\r\n               <padding>\r\n                  <Insets bottom=\"1.0\" left=\"1.0\" right=\"1.0\" top=\"1.0\"/>\r\n               </padding>\r\n            </Button>\r\n            <Button fx:id=\"DeleteButton\" mnemonicParsing=\"false\" onAction=\"#deleteButtonClicked\" prefHeight=\"100.0\"\r\n                    prefWidth=\"125.0\" stylesheets=\"@../SpecialtyButtons.css\">\r\n               <graphic>\r\n                  <ImageView pickOnBounds=\"true\" preserveRatio=\"true\">\r\n                     <image>\r\n                        <Image url=\"@../thumbnails/DeleteIcon.png\"/>\r\n                     </image>\r\n                  </ImageView>\r\n               </graphic>\r\n               <padding>\r\n                  <Insets bottom=\"1.0\" left=\"1.0\" right=\"1.0\" top=\"1.0\"/>\r\n               </padding>\r\n            </Button>\r\n            <VBox alignment=\"CENTER\" prefHeight=\"50.0\" prefWidth=\"100.0\" spacing=\"20.0\" HBox.hgrow=\"ALWAYS\">\r\n               <children>\r\n                  <Label fx:id=\"classNameLabel\" text=\"Label\"/>\r\n                  <Label fx:id=\"courseNumberLabel\" text=\"Label\"/>\r\n               </children>\r\n            </VBox>\r\n         </children>\r\n         <BorderPane.margin>\r\n            <Insets bottom=\"15.0\" left=\"30.0\" top=\"15.0\"/>\r\n         </BorderPane.margin>\r\n      </HBox>\r\n   </top>\r\n   <left>\r\n      <VBox alignment=\"TOP_CENTER\" spacing=\"50.0\" BorderPane.alignment=\"CENTER\">\r\n         <children>\r\n            <Button fx:id=\"CurveButton\" mnemonicParsing=\"false\" onAction=\"#curveButtonClicked\" prefHeight=\"100.0\"\r\n                    prefWidth=\"125.0\" stylesheets=\"@../SpecialtyButtons.css\">\r\n               <graphic>\r\n                  <ImageView pickOnBounds=\"true\" preserveRatio=\"true\">\r\n                     <image>\r\n                        <Image url=\"@../thumbnails/CurveIcon.png\"/>\r\n                     </image>\r\n                  </ImageView>\r\n               </graphic>\r\n               <padding>\r\n                  <Insets bottom=\"1.0\" left=\"1.0\" right=\"1.0\" top=\"1.0\"/>\r\n               </padding>\r\n            </Button>\r\n            <Button fx:id=\"WeightButton\" mnemonicParsing=\"false\" onAction=\"#weightButtonClicked\" prefHeight=\"100.0\"\r\n                    prefWidth=\"125.0\" stylesheets=\"@../SpecialtyButtons.css\">\r\n               <graphic>\r\n                  <ImageView pickOnBounds=\"true\" preserveRatio=\"true\">\r\n                     <image>\r\n                        <Image url=\"@../thumbnails/WeightIcon.png\"/>\r\n                     </image>\r\n                  </ImageView>\r\n               </graphic>\r\n               <padding>\r\n                  <Insets bottom=\"1.0\" left=\"1.0\" right=\"1.0\" top=\"1.0\"/>\r\n               </padding>\r\n            </Button>\r\n            <Button fx:id=\"GraphButton\" mnemonicParsing=\"false\" onAction=\"#graphButtonClicked\" prefHeight=\"100.0\"\r\n                    prefWidth=\"125.0\" stylesheets=\"@../SpecialtyButtons.css\">\r\n               <graphic>\r\n                  <ImageView pickOnBounds=\"true\" preserveRatio=\"true\">\r\n                     <image>\r\n                        <Image url=\"@../thumbnails/GraphIcon.png\"/>\r\n                     </image>\r\n                  </ImageView>\r\n               </graphic>\r\n               <padding>\r\n                  <Insets bottom=\"1.0\" left=\"1.0\" right=\"1.0\" top=\"1.0\"/>\r\n               </padding>\r\n            </Button>\r\n         </children>\r\n         <padding>\r\n            <Insets top=\"10.0\"/>\r\n         </padding>\r\n         <BorderPane.margin>\r\n            <Insets bottom=\"30.0\" left=\"30.0\" right=\"30.0\"/>\r\n         </BorderPane.margin>\r\n      </VBox>\r\n   </left>\r\n   <center>\r\n      <BorderPane fx:id=\"mainView\">\r\n         <center>\r\n            <fx:include fx:id=\"defaultClassOverviewPane\" source=\"DefaultClassOverviewPane.fxml\"/>\r\n         </center>\r\n         <padding>\r\n            <Insets bottom=\"10.0\" left=\"10.0\" right=\"10.0\"/>\r\n         </padding>\r\n      </BorderPane>\r\n   </center>\r\n</BorderPane>\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- out/production/COMP380_Project/sample/ClassOverview.fxml	(revision ae728f295575a6196c7ae4f7b2bca12d2f82d71d)
+++ out/production/COMP380_Project/sample/ClassOverview.fxml	(date 1588126455975)
@@ -4,151 +4,117 @@
 <?import javafx.scene.control.*?>
 <?import javafx.scene.image.*?>
 <?import javafx.scene.layout.*?>
-<BorderPane xmlns:fx="http://javafx.com/fxml/1" prefHeight="1000" prefWidth="1000" stylesheets="@../TealTeam.css"
-            xmlns="http://javafx.com/javafx/10.0.2-internal" fx:controller="sample.ClassOverview">
+
+<BorderPane prefHeight="1000" prefWidth="1000" stylesheets="@../TealTeam.css" xmlns="http://javafx.com/javafx/10.0.2-internal" xmlns:fx="http://javafx.com/fxml/1" fx:controller="sample.ClassOverview">
    <top>
       <HBox alignment="CENTER_LEFT" spacing="50.0" BorderPane.alignment="CENTER">
          <children>
-            <Button fx:id="HomeButton" maxHeight="-Infinity" maxWidth="-Infinity" mnemonicParsing="false"
-                    onAction="#homeButtonClicked" prefHeight="100.0" prefWidth="125.0"
-                    stylesheets="@../SpecialtyButtons.css">
+            <Button fx:id="HomeButton" maxHeight="-Infinity" maxWidth="-Infinity" mnemonicParsing="false" onAction="#homeButtonClicked" prefHeight="100.0" prefWidth="125.0" stylesheets="@../SpecialtyButtons.css">
                <graphic>
                   <ImageView pickOnBounds="true" preserveRatio="true">
                      <image>
-                        <Image url="@../thumbnails/HomeIcon.png"/>
+                        <Image url="@../thumbnails/HomeIcon.png" />
                      </image>
                   </ImageView>
                </graphic>
                <padding>
-                  <Insets bottom="1.0" left="1.0" right="1.0" top="1.0"/>
+                  <Insets bottom="1.0" left="1.0" right="1.0" top="1.0" />
                </padding>
                <HBox.margin>
-                  <Insets bottom="10.0" top="10.0"/>
+                  <Insets bottom="10.0" top="10.0" />
                </HBox.margin>
             </Button>
-            <Button fx:id="SearchButton" alignment="CENTER" contentDisplay="CENTER" graphicTextGap="0.0"
-                    mnemonicParsing="false" onAction="#searchButtonClicked" prefHeight="100.0" prefWidth="125.0"
-                    stylesheets="@../SpecialtyButtons.css">
+            <Button fx:id="SearchButton" alignment="CENTER" contentDisplay="CENTER" graphicTextGap="0.0" mnemonicParsing="false" onAction="#searchButtonClicked" prefHeight="100.0" prefWidth="125.0" stylesheets="@../SpecialtyButtons.css">
                <graphic>
                   <ImageView pickOnBounds="true" preserveRatio="true">
                      <image>
-                        <Image url="@../thumbnails/SearchIcon.png"/>
-                     </image>
-                  </ImageView>
-               </graphic>
-               <padding>
-                  <Insets bottom="1.0" left="1.0" right="1.0" top="1.0"/>
-               </padding>
-            </Button>
-            <Button fx:id="SaveButton" graphicTextGap="0.0" mnemonicParsing="false" onAction="#saveButtonClicked"
-                    prefHeight="100.0" prefWidth="125.0" stylesheets="@../SpecialtyButtons.css">
-               <graphic>
-                  <ImageView pickOnBounds="true" preserveRatio="true">
-                     <image>
-                        <Image url="@../thumbnails/SaveIcon.png"/>
+                        <Image url="@../thumbnails/SearchIcon.png" />
                      </image>
                   </ImageView>
                </graphic>
                <padding>
-                  <Insets bottom="1.0" left="1.0" right="1.0" top="1.0"/>
+                  <Insets bottom="1.0" left="1.0" right="1.0" top="1.0" />
                </padding>
             </Button>
-            <Button fx:id="PrintButton" mnemonicParsing="false" onAction="#printButtonClicked" prefHeight="100.0"
-                    prefWidth="125.0" stylesheets="@../SpecialtyButtons.css">
+            <Button fx:id="PrintButton" mnemonicParsing="false" onAction="#printButtonClicked" prefHeight="100.0" prefWidth="125.0" stylesheets="@../SpecialtyButtons.css">
                <graphic>
                   <ImageView pickOnBounds="true" preserveRatio="true">
                      <image>
-                        <Image url="@../thumbnails/PrintIcon.png"/>
-                     </image>
-                  </ImageView>
-               </graphic>
-               <padding>
-                  <Insets bottom="1.0" left="1.0" right="1.0" top="1.0"/>
-               </padding>
-            </Button>
-            <Button fx:id="DeleteButton" mnemonicParsing="false" onAction="#deleteButtonClicked" prefHeight="100.0"
-                    prefWidth="125.0" stylesheets="@../SpecialtyButtons.css">
-               <graphic>
-                  <ImageView pickOnBounds="true" preserveRatio="true">
-                     <image>
-                        <Image url="@../thumbnails/DeleteIcon.png"/>
+                        <Image url="@../thumbnails/PrintIcon.png" />
                      </image>
                   </ImageView>
                </graphic>
                <padding>
-                  <Insets bottom="1.0" left="1.0" right="1.0" top="1.0"/>
+                  <Insets bottom="1.0" left="1.0" right="1.0" top="1.0" />
                </padding>
             </Button>
             <VBox alignment="CENTER" prefHeight="50.0" prefWidth="100.0" spacing="20.0" HBox.hgrow="ALWAYS">
                <children>
-                  <Label fx:id="classNameLabel" text="Label"/>
-                  <Label fx:id="courseNumberLabel" text="Label"/>
+                  <Label fx:id="classNameLabel" text="Label" />
+                  <Label fx:id="courseNumberLabel" text="Label" />
                </children>
             </VBox>
          </children>
          <BorderPane.margin>
-            <Insets bottom="15.0" left="30.0" top="15.0"/>
+            <Insets bottom="15.0" left="30.0" top="15.0" />
          </BorderPane.margin>
       </HBox>
    </top>
    <left>
       <VBox alignment="TOP_CENTER" spacing="50.0" BorderPane.alignment="CENTER">
          <children>
-            <Button fx:id="CurveButton" mnemonicParsing="false" onAction="#curveButtonClicked" prefHeight="100.0"
-                    prefWidth="125.0" stylesheets="@../SpecialtyButtons.css">
+            <Button fx:id="CurveButton" mnemonicParsing="false" onAction="#curveButtonClicked" prefHeight="100.0" prefWidth="125.0" stylesheets="@../SpecialtyButtons.css">
                <graphic>
                   <ImageView pickOnBounds="true" preserveRatio="true">
                      <image>
-                        <Image url="@../thumbnails/CurveIcon.png"/>
+                        <Image url="@../thumbnails/CurveIcon.png" />
                      </image>
                   </ImageView>
                </graphic>
                <padding>
-                  <Insets bottom="1.0" left="1.0" right="1.0" top="1.0"/>
+                  <Insets bottom="1.0" left="1.0" right="1.0" top="1.0" />
                </padding>
             </Button>
-            <Button fx:id="WeightButton" mnemonicParsing="false" onAction="#weightButtonClicked" prefHeight="100.0"
-                    prefWidth="125.0" stylesheets="@../SpecialtyButtons.css">
+            <Button fx:id="WeightButton" mnemonicParsing="false" onAction="#weightButtonClicked" prefHeight="100.0" prefWidth="125.0" stylesheets="@../SpecialtyButtons.css">
                <graphic>
                   <ImageView pickOnBounds="true" preserveRatio="true">
                      <image>
-                        <Image url="@../thumbnails/WeightIcon.png"/>
+                        <Image url="@../thumbnails/WeightIcon.png" />
                      </image>
                   </ImageView>
                </graphic>
                <padding>
-                  <Insets bottom="1.0" left="1.0" right="1.0" top="1.0"/>
+                  <Insets bottom="1.0" left="1.0" right="1.0" top="1.0" />
                </padding>
             </Button>
-            <Button fx:id="GraphButton" mnemonicParsing="false" onAction="#graphButtonClicked" prefHeight="100.0"
-                    prefWidth="125.0" stylesheets="@../SpecialtyButtons.css">
+            <Button fx:id="GraphButton" mnemonicParsing="false" onAction="#graphButtonClicked" prefHeight="100.0" prefWidth="125.0" stylesheets="@../SpecialtyButtons.css">
                <graphic>
                   <ImageView pickOnBounds="true" preserveRatio="true">
                      <image>
-                        <Image url="@../thumbnails/GraphIcon.png"/>
+                        <Image url="@../thumbnails/GraphIcon.png" />
                      </image>
                   </ImageView>
                </graphic>
                <padding>
-                  <Insets bottom="1.0" left="1.0" right="1.0" top="1.0"/>
+                  <Insets bottom="1.0" left="1.0" right="1.0" top="1.0" />
                </padding>
             </Button>
          </children>
          <padding>
-            <Insets top="10.0"/>
+            <Insets top="10.0" />
          </padding>
          <BorderPane.margin>
-            <Insets bottom="30.0" left="30.0" right="30.0"/>
+            <Insets bottom="30.0" left="30.0" right="30.0" />
          </BorderPane.margin>
       </VBox>
    </left>
    <center>
       <BorderPane fx:id="mainView">
          <center>
-            <fx:include fx:id="defaultClassOverviewPane" source="DefaultClassOverviewPane.fxml"/>
+            <fx:include fx:id="defaultClassOverviewPane" source="DefaultClassOverviewPane.fxml" />
          </center>
          <padding>
-            <Insets bottom="10.0" left="10.0" right="10.0"/>
+            <Insets bottom="10.0" left="10.0" right="10.0" />
          </padding>
       </BorderPane>
    </center>
Index: Back End Files/LoadCourseData.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import java.io.IOException;\r\n\r\npublic class LoadCourseData {\r\n\t\r\n\tprivate ExcelFileManager userFile;\r\n\tprivate String[][] ArrayWithAllTheCourseData;\r\n\tpublic LoadCourseData(String userEmail) {\r\n\t\tuserFile = new ExcelFileManager(userEmail + \".xlsx\");\r\n\t}\r\n\t\r\n\tpublic String[][] get_2D_Array_Loaded_With_The_Course_Data(String courseName) {\r\n\t\tint numberOfRows = 0;\r\n\t\tint numberOfColumns = 0;\r\n\t\t\r\n\t\ttry {//Getting proper numberOfRows and Columns for the ArrayWithAllTheCourseData, so that all of the data will fit in there\r\n\t\t\tnumberOfRows = userFile.get_Last_Row_Of_The_Sheet(courseName) - 6;\r\n\t\t\tnumberOfColumns = userFile.get_Last_Cell_Of_Row(courseName, 6) - 1;\r\n\t\t} catch (IOException e) {\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\t\r\n\t\tArrayWithAllTheCourseData = new String[numberOfRows][numberOfColumns]; //assigned length to the array\r\n\t\t\r\n\t\tfor(int col = 0; col < numberOfColumns; col++) {//putting all the assignments and their total points in the array. Assignments in the spreadsheet are at row 6 and total points of the assignments are at row 7.\r\n\t\t\ttry {\r\n\t\t\t\tif (col < 4) {\r\n\t\t\t\t\tArrayWithAllTheCourseData[0][col] = userFile.get_Data_At(courseName, 6, col + 1);//we call col + 1, because we are skipping the first column of the spreadsheet, and we can't start col with 0 because we need it for the array.\r\n\t\t\t\t} else {//This is where the assignments starts. On the spreadsheets the assignments starts at column 5\r\n\t\t\t\t\tArrayWithAllTheCourseData[0][col] = userFile.get_Data_At(courseName, 6, col + 1) + \" (\" + userFile.get_Data_At(courseName, 7, col + 1) + \")\";\r\n\t\t\t\t}\r\n\t\t\t} catch (IOException e) {\r\n\t\t\t\te.printStackTrace();\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\tfor(int row = 1, rowOfTheSheet = 8; row < numberOfRows; row++, rowOfTheSheet++) {//Load the students and their data to the array.\r\n\t\t\tfor (int column = 0; column < numberOfColumns; column++) {\r\n\t\t\t\ttry {\r\n\t\t\t\t\tArrayWithAllTheCourseData[row][column] = userFile.get_Data_At(courseName, rowOfTheSheet, column + 1);\r\n\t\t\t\t} catch (IOException e) {\r\n\t\t\t\t\te.printStackTrace();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\treturn ArrayWithAllTheCourseData;\r\n\t}\r\n}\r\n
===================================================================
--- Back End Files/LoadCourseData.java	(revision ae728f295575a6196c7ae4f7b2bca12d2f82d71d)
+++ SmartGrader/src/sample/LoadCourseData.java	(date 1588011704955)
@@ -1,3 +1,5 @@
+package sample;
+
 import java.io.IOException;
 
 public class LoadCourseData {
